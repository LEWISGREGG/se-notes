{
  "version": 3,
  "sources": ["../../../toggle-selection/index.js", "../../../copy-to-clipboard/index.js", "../../../react-copy-to-clipboard/lib/Component.js", "../../../react-copy-to-clipboard/lib/index.js", "../../../lodash/isNumber.js", "../../../lodash/camelCase.js", "../../../lodash/kebabCase.js", "../../../sanity/src/structure/i18n/index.ts", "../../../sanity/src/structure/components/DocTitle.tsx", "../../../sanity/src/structure/components/confirmDeleteDialog/ConfirmDeleteDialogBody.styles.tsx", "../../../sanity/src/structure/components/paneItem/PaneItemPreview.tsx", "../../../sanity/src/structure/components/paneRouter/BackLink.tsx", "../../../sanity/src/structure/components/pane/usePaneLayout.ts", "../../../sanity/src/structure/components/paneRouter/ChildLink.tsx", "../../../sanity/src/structure/components/paneRouter/ParameterizedLink.tsx", "../../../sanity/src/structure/components/paneRouter/ReferenceChildLink.tsx", "../../../sanity/src/structure/components/paneRouter/usePaneRouter.ts", "../../../sanity/src/structure/components/confirmDeleteDialog/ReferencePreviewLink.tsx", "../../../sanity/src/structure/components/confirmDeleteDialog/ConfirmDeleteDialogBody.tsx", "../../../sanity/src/structure/components/confirmDeleteDialog/useReferringDocuments.ts", "../../../sanity/src/structure/components/confirmDeleteDialog/ConfirmDeleteDialog.tsx", "../../../sanity/src/structure/components/confirmDeleteDialog/index.tsx", "../../../sanity/src/structure/components/Delay.tsx", "../../../sanity/src/structure/components/pane/constants.ts", "../../../sanity/src/structure/components/pane/PaneDivider.tsx", "../../../sanity/src/structure/components/pane/Pane.tsx", "../../../sanity/src/structure/components/pane/PaneContent.styles.tsx", "../../../sanity/src/structure/components/pane/usePane.ts", "../../../sanity/src/structure/components/pane/PaneContent.tsx", "../../../sanity/src/structure/components/pane/PaneMenuButtonItem.tsx", "../../../sanity/src/structure/components/pane/PaneContextMenuButton.tsx", "../../../sanity/src/structure/components/pane/PaneFooter.styles.tsx", "../../../sanity/src/structure/components/pane/PaneFooter.tsx", "../../../sanity/src/structure/components/pane/PaneHeader.styles.tsx", "../../../sanity/src/structure/components/pane/PaneHeader.tsx", "../../../sanity/src/structure/components/pane/PaneHeaderActionButton.tsx", "../../../sanity/src/structure/components/pane/PaneLayout.styles.tsx", "../../../sanity/src/structure/components/pane/helpers/_calcPaneResize.ts", "../../../sanity/src/structure/components/pane/helpers/_getDOMPath.ts", "../../../sanity/src/structure/components/pane/helpers/_sortElements.ts", "../../../sanity/src/structure/components/pane/paneLayoutController.ts", "../../../sanity/src/structure/components/pane/PaneLayout.tsx", "../../../sanity/src/structure/menuNodes.ts", "../../../sanity/src/structure/components/IntentButton.tsx", "../../../sanity/src/structure/components/paneHeaderActions/InsufficientPermissionsMessageTooltip.tsx", "../../../sanity/src/structure/components/paneHeaderActions/PaneHeaderCreateButton.tsx", "../../../sanity/src/structure/components/paneHeaderActions/PaneHeaderActions.tsx", "../../../sanity/src/structure/components/MissingSchemaType.tsx", "../../../sanity/src/structure/components/paneItem/PaneItem.tsx", "../../../sanity/src/structure/components/RenderActionCollectionState.tsx", "../../../sanity/src/structure/components/RenderBadgeCollectionState.tsx", "../../../sanity/src/structure/panes/error/ErrorPane.tsx", "../../../sanity/src/structure/panes/loading/getWaitMessages.ts", "../../../sanity/src/structure/panes/loading/LoadingPane.tsx", "../../../sanity/src/structure/panes/document/useDocumentPane.tsx", "../../../sanity/src/structure/panes/document/comments/CommentsWrapper.tsx", "../../../sanity/src/structure/constants.ts", "../../../sanity/src/structure/useStructureTool.ts", "../../../sanity/src/structure/panes/document/constants.ts", "../../../sanity/src/structure/panes/document/DocumentInspectorMenuItemsResolver.tsx", "../../../sanity/src/structure/panes/document/useDocumentTitle.ts", "../../../sanity/src/structure/panes/document/DocumentOperationResults.tsx", "../../../sanity/src/structure/panes/document/documentInspector/DocumentInspectorHeader.tsx", "../../../sanity/src/structure/panes/document/documentInspector/Resizer.tsx", "../../../sanity/src/structure/panes/document/documentInspector/Resizable.tsx", "../../../sanity/src/structure/panes/document/documentInspector/DocumentInspectorPanel.tsx", "../../../sanity/src/structure/useStructureToolSetting.ts", "../../../sanity/src/structure/panes/document/inspectDialog/constants.ts", "../../../sanity/src/structure/panes/document/inspectDialog/helpers.ts", "../../../sanity/src/structure/panes/document/inspectDialog/InspectDialog.styles.tsx", "../../../sanity/src/structure/panes/document/inspectDialog/Search.tsx", "../../../sanity/src/structure/panes/document/inspectDialog/InspectDialog.tsx", "../../../sanity/src/structure/components/spacerButton/SpacerButton.tsx", "../../../sanity/src/structure/panes/document/documentPanel/banners/Banner.tsx", "../../../sanity/src/structure/panes/document/documentPanel/banners/DeletedDocumentBanner.tsx", "../../../sanity/src/structure/panes/document/documentPanel/banners/DeprecatedDocumentTypeBanner.tsx", "../../../sanity/src/structure/panes/document/documentPanel/banners/PermissionCheckBanner.tsx", "../../../sanity/src/structure/panes/document/documentPanel/banners/ReferenceChangedBanner.tsx", "../../../sanity/src/structure/panes/document/documentPanel/documentViews/FormHeader.tsx", "../../../sanity/src/structure/panes/document/documentPanel/documentViews/useConditionalToast.ts", "../../../sanity/src/structure/panes/document/documentPanel/documentViews/FormView.tsx", "../../../sanity/src/structure/panes/document/documentPanel/DocumentPanel.tsx", "../../../sanity/src/structure/panes/document/statusBar/dialogs/constants.ts", "../../../sanity/src/structure/panes/document/statusBar/dialogs/ConfirmDialog.tsx", "../../../sanity/src/structure/panes/document/statusBar/dialogs/ModalDialog.tsx", "../../../sanity/src/structure/panes/document/statusBar/dialogs/PopoverDialog.tsx", "../../../sanity/src/structure/panes/document/statusBar/ActionStateDialog.tsx", "../../../sanity/src/structure/panes/document/statusBar/ActionMenuButton.tsx", "../../../sanity/src/structure/panes/document/timeline/constants.ts", "../../../sanity/src/structure/panes/document/timeline/helpers.ts", "../../../sanity/src/structure/panes/document/timeline/timeline.styled.tsx", "../../../sanity/src/structure/panes/document/timeline/timelineI18n.ts", "../../../sanity/src/structure/panes/document/timeline/timelineItem.styled.tsx", "../../../sanity/src/structure/panes/document/timeline/userAvatarStack.tsx", "../../../sanity/src/structure/panes/document/timeline/timelineItem.tsx", "../../../sanity/src/structure/panes/document/timeline/timeline.tsx", "../../../sanity/src/structure/panes/document/timeline/TimelineError.tsx", "../../../sanity/src/structure/panes/document/timeline/timelineMenu.tsx", "../../../sanity/src/structure/panes/document/documentPanel/header/DocumentHeaderTabs.tsx", "../../../sanity/src/structure/panes/document/documentPanel/header/DocumentHeaderTitle.tsx", "../../../sanity/src/structure/panes/document/documentPanel/header/DocumentPanelHeader.tsx", "../../../sanity/src/structure/panes/document/statusBar/DocumentBadges.tsx", "../../../sanity/src/structure/documentActions/DeleteAction.tsx", "../../../sanity/src/structure/documentActions/DiscardChangesAction.tsx", "../../../sanity/src/structure/documentActions/DuplicateAction.tsx", "../../../sanity/src/structure/documentActions/HistoryRestoreAction.tsx", "../../../sanity/src/structure/documentActions/__telemetry__/documentActions.telemetry.ts", "../../../sanity/src/structure/documentActions/PublishAction.tsx", "../../../sanity/src/structure/documentActions/UnpublishAction.tsx", "../../../sanity/src/structure/panes/document/statusBar/DocumentStatusBarActions.tsx", "../../../sanity/src/structure/panes/document/statusBar/DocumentStatusPulse/AnimatedStatusIcon.tsx", "../../../sanity/src/structure/panes/document/statusBar/DocumentStatusPulse/DocumentStatusPulse.tsx", "../../../sanity/src/structure/panes/document/statusBar/DocumentStatusLine.tsx", "../../../sanity/src/structure/panes/document/statusBar/useResizeObserver.ts", "../../../sanity/src/structure/panes/document/statusBar/DocumentStatusBar.tsx", "../../../sanity/src/structure/panes/document/keyboardShortcuts/DocumentActionShortcuts.tsx", "../../../sanity/src/structure/panes/document/menuItems.ts", "../../../sanity/src/structure/panes/document/usePreviewUrl.ts", "../../../sanity/src/structure/panes/document/document-layout/DocumentLayoutError.tsx", "../../../sanity/src/structure/panes/document/document-layout/DocumentLayout.tsx", "../../../sanity/src/structure/panes/document/document-layout/useDocumentLayoutComponent.ts", "../../../sanity/src/structure/panes/document/getInitialValueTemplateOpts.ts", "../../../sanity/src/structure/panes/document/DocumentPaneProvider.tsx", "../../../sanity/src/structure/panes/document/DocumentPane.tsx", "../../../sanity/src/structure/panes/documentList/constants.ts", "../../../sanity/src/structure/panes/documentList/DocumentListPaneContent.tsx", "../../../sanity/src/structure/panes/documentList/helpers.ts", "../../../sanity/src/structure/structureBuilder/util/getExtendedProjection.ts", "../../../sanity/src/structure/panes/documentList/listenSearchQuery.ts", "../../../sanity/src/structure/panes/documentList/useDocumentList.ts", "../../../sanity/src/structure/panes/documentList/DocumentListPane.tsx", "../../../sanity/src/structure/panes/documentList/DocumentSheetListPane.tsx", "../../../sanity/src/structure/panes/documentList/PaneHeader.tsx", "../../../sanity/src/structure/panes/documentList/PaneContainer.tsx", "../../../sanity/src/structure/structureBuilder/SerializeError.ts", "../../../sanity/src/structure/structureBuilder/Sort.ts", "../../../sanity/src/structure/structureBuilder/MenuItem.ts", "../../../sanity/src/structure/structureBuilder/MenuItemGroup.ts", "../../../sanity/src/structure/structureBuilder/util/validateId.ts", "../../../sanity/src/structure/structureBuilder/util/getStructureNodeId.ts", "../../../sanity/src/structure/structureBuilder/Component.ts", "../../../sanity/src/structure/structureBuilder/util/resolveTypeForDocument.ts", "../../../sanity/src/structure/structureBuilder/views/View.ts", "../../../sanity/src/structure/structureBuilder/views/ComponentView.ts", "../../../sanity/src/structure/structureBuilder/views/FormView.ts", "../../../sanity/src/structure/structureBuilder/views/index.ts", "../../../sanity/src/structure/structureBuilder/Document.ts", "../../../sanity/src/structure/structureBuilder/InitialValueTemplateItem.ts", "../../../sanity/src/structure/structureBuilder/Intent.ts", "../../../sanity/src/structure/structureBuilder/Layout.ts", "../../../sanity/src/structure/structureBuilder/GenericList.ts", "../../../sanity/src/structure/structureBuilder/DocumentList.ts", "../../../sanity/src/structure/structureBuilder/List.ts", "../../../sanity/src/structure/structureBuilder/ListItem.ts", "../../../sanity/src/structure/structureBuilder/DocumentListItem.ts", "../../../sanity/src/structure/structureBuilder/DocumentTypeList.ts", "../../../sanity/src/structure/structureBuilder/documentTypeListItems.ts", "../../../sanity/src/structure/structureBuilder/createStructureBuilder.ts", "../../../sanity/src/structure/documentBadges/LiveEditBadge.ts", "../../../sanity/src/structure/getIntentState.ts", "../../../sanity/src/structure/panes/document/inspectors/changes/helpers.ts", "../../../sanity/src/structure/panes/document/inspectors/changes/ChangesInspector.tsx", "../../../sanity/src/structure/panes/document/inspectors/changes/index.ts", "../../../sanity/src/structure/panes/document/inspectors/validation/getPathTitles.ts", "../../../sanity/src/structure/panes/document/inspectors/validation/ValidationInspector.tsx", "../../../sanity/src/structure/panes/document/inspectors/validation/index.ts", "../../../sanity/src/structure/router.ts", "../../../sanity/src/structure/structureTool.ts", "../../../sanity/src/structure/StructureToolProvider.tsx", "../../../sanity/src/structure/index.ts"],
  "sourcesContent": ["\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n", "\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"⌘\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // avoid screen readers from reading out loud the text\n    mark.ariaHidden = \"true\"\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n", "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CopyToClipboard = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _copyToClipboard = _interopRequireDefault(require(\"copy-to-clipboard\"));\n\nvar _excluded = [\"text\", \"onCopy\", \"options\", \"children\"];\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar CopyToClipboard = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(CopyToClipboard, _React$PureComponent);\n\n  var _super = _createSuper(CopyToClipboard);\n\n  function CopyToClipboard() {\n    var _this;\n\n    _classCallCheck(this, CopyToClipboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"onClick\", function (event) {\n      var _this$props = _this.props,\n          text = _this$props.text,\n          onCopy = _this$props.onCopy,\n          children = _this$props.children,\n          options = _this$props.options;\n\n      var elem = _react[\"default\"].Children.only(children);\n\n      var result = (0, _copyToClipboard[\"default\"])(text, options);\n\n      if (onCopy) {\n        onCopy(text, result);\n      } // Bypass onClick if it was present\n\n\n      if (elem && elem.props && typeof elem.props.onClick === 'function') {\n        elem.props.onClick(event);\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CopyToClipboard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          _text = _this$props2.text,\n          _onCopy = _this$props2.onCopy,\n          _options = _this$props2.options,\n          children = _this$props2.children,\n          props = _objectWithoutProperties(_this$props2, _excluded);\n\n      var elem = _react[\"default\"].Children.only(children);\n\n      return /*#__PURE__*/_react[\"default\"].cloneElement(elem, _objectSpread(_objectSpread({}, props), {}, {\n        onClick: this.onClick\n      }));\n    }\n  }]);\n\n  return CopyToClipboard;\n}(_react[\"default\"].PureComponent);\n\nexports.CopyToClipboard = CopyToClipboard;\n\n_defineProperty(CopyToClipboard, \"defaultProps\", {\n  onCopy: undefined,\n  options: undefined\n});", "\"use strict\";\n\nvar _require = require('./Component'),\n    CopyToClipboard = _require.CopyToClipboard;\n\nCopyToClipboard.CopyToClipboard = CopyToClipboard;\nmodule.exports = CopyToClipboard;", "var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n * classified as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && baseGetTag(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n", "var capitalize = require('./capitalize'),\n    createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the camel cased string.\n * @example\n *\n * _.camelCase('Foo Bar');\n * // => 'fooBar'\n *\n * _.camelCase('--foo-bar--');\n * // => 'fooBar'\n *\n * _.camelCase('__FOO_BAR__');\n * // => 'fooBar'\n */\nvar camelCase = createCompounder(function(result, word, index) {\n  word = word.toLowerCase();\n  return result + (index ? capitalize(word) : word);\n});\n\nmodule.exports = camelCase;\n", "var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nmodule.exports = kebabCase;\n", "import {defineLocaleResourceBundle} from 'sanity'\n\n/**\n * The locale namespace for the structure tool\n *\n * @public\n */\nexport const structureLocaleNamespace = 'structure' as const\n\n/**\n * The default locale bundle for the structure tool, which is US English.\n *\n * @internal\n */\nexport const structureUsEnglishLocaleBundle = defineLocaleResourceBundle({\n  locale: 'en-US',\n  namespace: structureLocaleNamespace,\n  resources: () => import('./resources'),\n})\n\n/**\n * The locale resource keys for the structure tool.\n *\n * @alpha\n * @hidden\n */\nexport type {StructureLocaleResourceKeys} from './resources'\n", "import {type SanityDocumentLike} from '@sanity/types'\nimport {unstable_useValuePreview as useValuePreview, useSchema, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\n\nexport interface DocTitleProps {\n  document: SanityDocumentLike\n}\n\nexport function DocTitle(props: DocTitleProps) {\n  const {document: documentValue} = props\n  const schema = useSchema()\n  const schemaType = schema.get(documentValue._type)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const {error, value} = useValuePreview({\n    schemaType: schemaType!,\n    value: documentValue,\n  })\n\n  if (!schemaType) {\n    return <code>{t('doc-title.unknown-schema-type.text', {schemaType: documentValue._type})}</code>\n  }\n\n  if (error) {\n    return <>{t('doc-title.error.text', {errorMessage: error.message})}</>\n  }\n\n  return (\n    <>\n      {value?.title || (\n        <span style={{color: 'var(--card-muted-fg-color)'}}>{t('doc-title.fallback.text')}</span>\n      )}\n    </>\n  )\n}\n", "import {InfoOutlineIcon} from '@sanity/icons'\nimport {Box, Flex, Inline, rem, Text} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Tooltip} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\n\nexport const ChevronWrapper = styled(Box)`\n  margin-left: auto;\n`\n\nexport const CrossDatasetReferencesDetails = styled.details`\n  flex: none;\n\n  &[open] ${ChevronWrapper} {\n    transform: rotate(180deg);\n  }\n`\n\nexport const CrossDatasetReferencesSummary = styled.summary`\n  list-style: none;\n\n  &::-webkit-details-marker {\n    display: none;\n  }\n`\n\nexport const Table = styled.table`\n  width: 100%;\n  text-align: left;\n  padding: 0 ${({theme}) => rem(theme.sanity.space[2])};\n  border-collapse: collapse;\n\n  th {\n    padding: ${({theme}) => rem(theme.sanity.space[1])};\n  }\n\n  td {\n    padding: 0 ${({theme}) => rem(theme.sanity.space[1])};\n  }\n\n  tr > *:last-child {\n    text-align: right;\n  }\n`\n\nexport const DocumentIdFlex = styled(Flex)`\n  min-height: 33px;\n`\n\nexport const OtherReferenceCount = (props: {totalCount: number; references: unknown[]}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const difference = props.totalCount - props.references.length\n\n  if (!difference) return null\n\n  return (\n    <Box padding={2}>\n      <Inline space={2}>\n        <Text size={1} muted>\n          {t('confirm-delete-dialog.other-reference-count.title', {count: difference})}\n        </Text>\n\n        <Tooltip\n          portal\n          placement=\"top\"\n          content={t('confirm-delete-dialog.other-reference-count.tooltip')}\n        >\n          <Text size={1} muted>\n            <InfoOutlineIcon />\n          </Text>\n        </Tooltip>\n      </Inline>\n    </Box>\n  )\n}\n", "import {type SanityDocument, type SchemaType} from '@sanity/types'\nimport {Flex} from '@sanity/ui'\nimport {isNumber, isString} from 'lodash'\nimport {type ComponentType, isValidElement} from 'react'\nimport {useMemoObservable} from 'react-rx'\nimport {\n  type DocumentPresence,\n  DocumentPreviewPresence,\n  type DocumentPreviewStore,\n  DocumentStatus,\n  DocumentStatusIndicator,\n  type GeneralPreviewLayoutKey,\n  getPreviewStateObservable,\n  getPreviewValueWithFallback,\n  isRecord,\n  SanityDefaultPreview,\n} from 'sanity'\n\nimport {TooltipDelayGroupProvider} from '../../../ui-components'\nimport {type PaneItemPreviewState} from './types'\n\nexport interface PaneItemPreviewProps {\n  documentPreviewStore: DocumentPreviewStore\n  icon: ComponentType | false\n  layout: GeneralPreviewLayoutKey\n  presence?: DocumentPresence[]\n  schemaType: SchemaType\n  value: SanityDocument\n}\n\n/**\n * Preview component for _documents_ rendered in structure panes.\n *\n * Note that non-document previews are not handled by this component,\n * despite being pane items! Non-document previews bypass this entirely\n * and are rendered by `<SanityDefaultPreview>`.\n */\nexport function PaneItemPreview(props: PaneItemPreviewProps) {\n  const {icon, layout, presence, schemaType, value} = props\n  const title =\n    (isRecord(value.title) && isValidElement(value.title)) ||\n    isString(value.title) ||\n    isNumber(value.title)\n      ? value.title\n      : null\n\n  // NOTE: this emits sync so can never be null\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const {draft, published, isLoading} = useMemoObservable<PaneItemPreviewState>(\n    () => getPreviewStateObservable(props.documentPreviewStore, schemaType, value._id, title),\n    [props.documentPreviewStore, schemaType, value._id, title],\n  )!\n\n  const status = isLoading ? null : (\n    <TooltipDelayGroupProvider>\n      <Flex align=\"center\" gap={3}>\n        {presence && presence.length > 0 && <DocumentPreviewPresence presence={presence} />}\n        <DocumentStatusIndicator draft={draft} published={published} />\n      </Flex>\n    </TooltipDelayGroupProvider>\n  )\n\n  const tooltip = <DocumentStatus draft={draft} published={published} />\n\n  return (\n    <SanityDefaultPreview\n      {...getPreviewValueWithFallback({value, draft, published})}\n      isPlaceholder={isLoading}\n      icon={icon}\n      layout={layout}\n      status={status}\n      tooltip={tooltip}\n    />\n  )\n}\n", "import {type ComponentType, type ForwardedRef, forwardRef, useContext, useMemo} from 'react'\nimport {PaneRouterContext} from 'sanity/_singletons'\nimport {StateLink} from 'sanity/router'\n\nimport {type BackLinkProps} from './types'\n\n/**\n * @internal\n */\nexport const BackLink = forwardRef(function BackLink(\n  props: BackLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {routerPanesState, groupIndex} = useContext(PaneRouterContext)\n  const panes = useMemo(() => routerPanesState.slice(0, groupIndex), [groupIndex, routerPanesState])\n  const state = useMemo(() => ({panes}), [panes])\n\n  return <StateLink {...props} ref={ref} state={state} />\n}) as ComponentType<BackLinkProps>\n", "import {useContext} from 'react'\nimport {PaneLayoutContext} from 'sanity/_singletons'\n\nimport {type PaneLayoutContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function usePaneLayout(): PaneLayoutContextValue {\n  const pane = useContext(PaneLayoutContext)\n\n  if (!pane) {\n    throw new Error('PaneLayout: missing context value')\n  }\n\n  return pane\n}\n", "import {type ForwardedRef, forwardRef, useContext} from 'react'\nimport {PaneRouterContext} from 'sanity/_singletons'\nimport {StateLink} from 'sanity/router'\n\nimport {type ChildLinkProps} from './types'\n\n/**\n * @internal\n */\nexport const ChildLink = forwardRef(function ChildLink(\n  props: ChildLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {childId, childPayload, childParameters, ...rest} = props\n  const {routerPanesState, groupIndex} = useContext(PaneRouterContext)\n\n  return (\n    <StateLink\n      {...rest}\n      ref={ref}\n      state={{\n        panes: [\n          ...routerPanesState.slice(0, groupIndex + 1),\n          [{id: childId, params: childParameters, payload: childPayload}],\n        ],\n      }}\n    />\n  )\n})\n", "import {type ForwardedRef, forwardRef, type ReactNode, useContext, useMemo} from 'react'\nimport {useUnique} from 'sanity'\nimport {PaneRouterContext} from 'sanity/_singletons'\nimport {StateLink} from 'sanity/router'\n\ninterface ParameterizedLinkProps {\n  params?: Record<string, string>\n  payload?: unknown\n  children?: ReactNode\n}\n\n/**\n * @internal\n */\nexport const ParameterizedLink = forwardRef(function ParameterizedLink(\n  props: ParameterizedLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {routerPanesState: currentPanes, groupIndex, siblingIndex} = useContext(PaneRouterContext)\n  const {params, payload, ...rest} = props\n  const nextParams = useUnique(params)\n  const nextPayload = useUnique(payload)\n\n  const nextState = useMemo(() => {\n    const currentGroup = currentPanes[groupIndex]\n    const currentSibling = currentGroup[siblingIndex]\n\n    const nextSibling = {\n      ...currentSibling,\n      params: nextParams ?? currentSibling.params,\n      payload: nextPayload ?? currentSibling.payload,\n    }\n\n    const nextGroup = [\n      ...currentGroup.slice(0, siblingIndex),\n      nextSibling,\n      ...currentGroup.slice(siblingIndex + 1),\n    ]\n\n    const nextPanes = [\n      ...currentPanes.slice(0, groupIndex),\n      nextGroup,\n      ...currentPanes.slice(groupIndex + 1),\n    ]\n\n    return {panes: nextPanes}\n  }, [currentPanes, groupIndex, nextParams, nextPayload, siblingIndex])\n\n  return <StateLink ref={ref} {...rest} state={nextState} />\n})\n", "import {toString as pathToString} from '@sanity/util/paths'\nimport {type ForwardedRef, forwardRef} from 'react'\n\nimport {ChildLink} from './ChildLink'\nimport {type ReferenceChildLinkProps} from './types'\n\nexport const ReferenceChildLink = forwardRef(function ReferenceChildLink(\n  {documentId, documentType, parentRefPath, children, template, ...rest}: ReferenceChildLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  return (\n    <ChildLink\n      {...rest}\n      ref={ref}\n      childId={documentId}\n      childPayload={template?.params}\n      childParameters={{\n        type: documentType,\n        parentRefPath: pathToString(parentRefPath),\n        ...(template && {template: template?.id}),\n      }}\n    >\n      {children}\n    </ChildLink>\n  )\n})\n", "import {useContext} from 'react'\nimport {PaneRouterContext} from 'sanity/_singletons'\n\nimport {type PaneRouterContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta\n */\nexport function usePaneRouter(): PaneRouterContextValue {\n  return useContext(PaneRouterContext)\n}\n", "import {type SanityDocument, type SchemaType} from '@sanity/types'\nimport {type ReactNode, useCallback} from 'react'\nimport {\n  type FIXME,\n  getPublishedId,\n  PreviewCard,\n  useDocumentPresence,\n  useDocumentPreviewStore,\n} from 'sanity'\n\nimport {PaneItemPreview} from '../paneItem/PaneItemPreview'\nimport {usePaneRouter} from '../paneRouter'\n\nconst EMPTY_ARRAY: [] = []\n\ninterface ReferencePreviewLinkProps {\n  onClick?: () => void\n  type: SchemaType & {icon?: any}\n  value: SanityDocument\n}\n\nexport function ReferencePreviewLink(props: ReferencePreviewLinkProps) {\n  const {onClick, type, value} = props\n  const publishedId = getPublishedId(value?._id)\n  const documentPresence = useDocumentPresence(publishedId)\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {ReferenceChildLink} = usePaneRouter()\n\n  const Link = useCallback(\n    function LinkComponent(linkProps: {children: ReactNode}) {\n      return (\n        <ReferenceChildLink\n          documentId={value?._id}\n          documentType={type?.name}\n          parentRefPath={EMPTY_ARRAY}\n          {...linkProps}\n        />\n      )\n    },\n    [ReferenceChildLink, type?.name, value?._id],\n  )\n\n  return (\n    <PreviewCard __unstable_focusRing as={Link as FIXME} data-as=\"a\" onClick={onClick} radius={2}>\n      <PaneItemPreview\n        documentPreviewStore={documentPreviewStore}\n        icon={type?.icon}\n        layout=\"compact\"\n        presence={documentPresence?.length > 0 ? documentPresence : EMPTY_ARRAY}\n        schemaType={type}\n        value={value}\n      />\n    </PreviewCard>\n  )\n}\n", "import {\n  ChevronDownIcon,\n  CopyIcon,\n  DocumentsIcon,\n  UnknownIcon,\n  WarningOutlineIcon,\n} from '@sanity/icons'\nimport {Box, Card, Flex, Stack, Text, useToast} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport CopyToClipboard from 'react-copy-to-clipboard'\nimport {SanityDefaultPreview, Translate, useSchema, useTranslation} from 'sanity'\n\nimport {Button} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {\n  ChevronWrapper,\n  CrossDatasetReferencesDetails,\n  CrossDatasetReferencesSummary,\n  DocumentIdFlex,\n  OtherReferenceCount,\n  Table,\n} from './ConfirmDeleteDialogBody.styles'\nimport {ReferencePreviewLink} from './ReferencePreviewLink'\nimport {type ReferringDocuments} from './useReferringDocuments'\n\ntype DeletionConfirmationDialogBodyProps = Required<ReferringDocuments> & {\n  documentTitle: React.ReactNode\n  action: 'unpublish' | 'delete'\n  onReferenceLinkClick?: () => void\n}\n\n/**\n * The inner part of the `ConfirmDeleteDialog`. This is ran when both the\n * `crossDatasetReferences` and `internalReferences` are loaded.\n */\nexport function ConfirmDeleteDialogBody({\n  crossDatasetReferences,\n  internalReferences,\n  documentTitle,\n  totalCount,\n  action,\n  datasetNames,\n  hasUnknownDatasetNames,\n  onReferenceLinkClick,\n}: DeletionConfirmationDialogBodyProps) {\n  const schema = useSchema()\n  const toast = useToast()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const renderPreviewItem = useCallback(\n    (item: any) => {\n      const type = schema.get(item._type)\n      if (type) {\n        return <ReferencePreviewLink type={type} value={item} onClick={onReferenceLinkClick} />\n      }\n\n      return (\n        // Padding added to match the ReferencePreviewLink styling\n        <Box padding={2}>\n          <SanityDefaultPreview\n            icon={UnknownIcon}\n            title={t('confirm-delete-dialog.preview-item.preview-unavailable.title')}\n            subtitle={t('confirm-delete-dialog.preview-item.preview-unavailable.subtitle', {\n              documentId: item._id,\n            })}\n            layout=\"default\"\n          />\n        </Box>\n      )\n    },\n    [schema, t, onReferenceLinkClick],\n  )\n\n  if (internalReferences?.totalCount === 0 && crossDatasetReferences?.totalCount === 0) {\n    return (\n      <Text as=\"p\" size={1}>\n        <Translate\n          t={t}\n          i18nKey=\"confirm-delete-dialog.confirmation.text\"\n          context={action}\n          components={{DocumentTitle: () => <strong>{documentTitle}</strong>}}\n        />\n      </Text>\n    )\n  }\n\n  // We do some extra checks to handle cases where you have unavailable dataset\n  // name(s) due to permissions, both alone and in combination with known datasets\n\n  // This normalizes one or more undefined dataset names to the catch-all `unavailable`\n  const normalizedDatasetNames = [\n    ...datasetNames,\n    ...(hasUnknownDatasetNames ? ['unavailable'] : []),\n  ]\n\n  const datasetSubtitle = t('confirm-delete-dialog.cdr-summary.subtitle', {\n    count: normalizedDatasetNames.length,\n    datasets: normalizedDatasetNames.join(', '),\n    context: hasUnknownDatasetNames && normalizedDatasetNames.length ? 'unavailable' : '',\n  })\n\n  return (\n    <Flex direction=\"column\" gap={4}>\n      <Card padding={3} radius={2} tone=\"caution\" flex=\"none\">\n        <Flex>\n          <Text aria-hidden=\"true\" size={1}>\n            <WarningOutlineIcon />\n          </Text>\n          <Box flex={1} marginLeft={3}>\n            <Text size={1}>\n              <Translate\n                i18nKey=\"confirm-delete-dialog.referring-document-count.text\"\n                components={{DocumentTitle: () => documentTitle}}\n                t={t}\n                values={{count: totalCount}}\n              />\n            </Text>\n          </Box>\n        </Flex>\n      </Card>\n      <Box flex=\"none\">\n        <Text size={1}>\n          <Translate\n            i18nKey=\"confirm-delete-dialog.referring-documents-descriptor.text\"\n            t={t}\n            context={action}\n            components={{DocumentTitle: () => documentTitle}}\n          />\n        </Text>\n      </Box>\n      <Card radius={2} shadow={1} flex=\"auto\" padding={2}>\n        <Flex direction=\"column\">\n          {internalReferences.totalCount > 0 && (\n            <Stack as=\"ul\" marginBottom={2} space={2} data-testid=\"internal-references\">\n              {internalReferences?.references.map((item) => (\n                <Box as=\"li\" key={item._id}>\n                  {renderPreviewItem(item)}\n                </Box>\n              ))}\n\n              {internalReferences.totalCount > internalReferences.references.length && (\n                <Box as=\"li\" padding={3}>\n                  <OtherReferenceCount {...internalReferences} />\n                </Box>\n              )}\n            </Stack>\n          )}\n\n          {crossDatasetReferences.totalCount > 0 && (\n            <CrossDatasetReferencesDetails\n              data-testid=\"cross-dataset-references\"\n              style={{\n                // only add the border if needed\n                borderTop:\n                  internalReferences.totalCount > 0\n                    ? '1px solid var(--card-shadow-outline-color)'\n                    : undefined,\n              }}\n            >\n              <CrossDatasetReferencesSummary>\n                <Card\n                  as=\"a\"\n                  marginTop={internalReferences.totalCount > 0 ? 2 : 0}\n                  radius={2}\n                  shadow={1}\n                  paddingY={1}\n                >\n                  <Flex align=\"center\" gap={3} paddingX={3} paddingY={1}>\n                    <Text size={1}>\n                      <DocumentsIcon />\n                    </Text>\n                    <Stack space={2}>\n                      <Text textOverflow=\"ellipsis\" size={1}>\n                        {t('confirm-delete-dialog.cdr-summary.title', {\n                          count: normalizedDatasetNames.length,\n                          documentCount: t('confirm-delete-dialog.cdr-summary.document-count', {\n                            count: crossDatasetReferences.totalCount,\n                          }),\n                        })}\n                      </Text>\n                      <Text title={datasetSubtitle} textOverflow=\"ellipsis\" size={1} muted>\n                        {datasetSubtitle}\n                      </Text>\n                    </Stack>\n                    <ChevronWrapper>\n                      <Text muted size={1}>\n                        <ChevronDownIcon />\n                      </Text>\n                    </ChevronWrapper>\n                  </Flex>\n                </Card>\n              </CrossDatasetReferencesSummary>\n\n              <Box overflow=\"auto\" paddingTop={2}>\n                <Table>\n                  <thead>\n                    <tr>\n                      <th>\n                        <Text muted size={1} style={{minWidth: '5rem'}} weight=\"medium\">\n                          {t('confirm-delete-dialog.cdr-table.project-id.label')}\n                        </Text>\n                      </th>\n                      <th>\n                        <Text muted size={1} weight=\"medium\">\n                          {t('confirm-delete-dialog.cdr-table.dataset.label')}\n                        </Text>\n                      </th>\n                      <th>\n                        <Text muted size={1} weight=\"medium\">\n                          {t('confirm-delete-dialog.cdr-table.document-id.label')}\n                        </Text>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {crossDatasetReferences.references\n                      .filter((reference): reference is Required<typeof reference> => {\n                        return 'projectId' in reference\n                      })\n                      .map(({projectId, datasetName, documentId}, index) => (\n                        // eslint-disable-next-line react/no-array-index-key\n                        <tr key={`${documentId}-${index}`}>\n                          <td>\n                            <Text size={1}>{projectId}</Text>\n                          </td>\n                          <td>\n                            <Text size={1}>{datasetName || 'unavailable'}</Text>\n                          </td>\n                          <td>\n                            <DocumentIdFlex align=\"center\" gap={2} justify=\"flex-end\">\n                              <Text textOverflow=\"ellipsis\" size={1}>\n                                {documentId || 'unavailable'}\n                              </Text>\n                              {documentId && (\n                                <CopyToClipboard\n                                  text={documentId}\n                                  // eslint-disable-next-line react/jsx-no-bind\n                                  onCopy={() => {\n                                    toast.push({\n                                      title: t(\n                                        'confirm-delete-dialog.cdr-table.id-copied-toast.title',\n                                      ),\n                                      status: 'success',\n                                    })\n                                  }}\n                                >\n                                  <Button\n                                    mode=\"bleed\"\n                                    icon={CopyIcon}\n                                    tooltipProps={{\n                                      content: t(\n                                        'confirm-delete-dialog.cdr-table.copy-id-button.tooltip',\n                                      ),\n                                    }}\n                                  />\n                                </CopyToClipboard>\n                              )}\n                            </DocumentIdFlex>\n                          </td>\n                        </tr>\n                      ))}\n                  </tbody>\n                </Table>\n\n                <OtherReferenceCount {...crossDatasetReferences} />\n              </Box>\n            </CrossDatasetReferencesDetails>\n          )}\n        </Flex>\n      </Card>\n      <Box flex=\"none\">\n        <Text size={1}>\n          <Translate\n            i18nKey=\"confirm-delete-dialog.referential-integrity-disclaimer.text\"\n            t={t}\n            context={action}\n            components={{DocumentTitle: () => documentTitle}}\n          />\n        </Text>\n      </Box>\n    </Flex>\n  )\n}\n", "import {type ClientError, type SanityClient} from '@sanity/client'\nimport {useMemo} from 'react'\nimport {EMPTY, fromEvent, type Observable, of, timer} from 'rxjs'\nimport {\n  catchError,\n  distinctUntilChanged,\n  map,\n  shareReplay,\n  startWith,\n  switchMap,\n} from 'rxjs/operators'\nimport {\n  type AvailabilityResponse,\n  createHookFromObservableFactory,\n  DEFAULT_STUDIO_CLIENT_OPTIONS,\n  type DocumentStore,\n  getDraftId,\n  getPublishedId,\n  useClient,\n  useDocumentStore,\n} from 'sanity'\n\n// this is used in place of `instanceof` so the matching can be more robust and\n// won't have any issues with dual packages etc\n// https://nodejs.org/api/packages.html#dual-package-hazard\nfunction isClientError(e: unknown): e is ClientError {\n  if (typeof e !== 'object') return false\n  if (!e) return false\n  return 'statusCode' in e && 'response' in e\n}\n\nconst POLL_INTERVAL = 5000\n\n// only fetches when the document is visible\nlet visiblePoll$: Observable<number>\nconst getVisiblePoll$ = () => {\n  if (!visiblePoll$) {\n    visiblePoll$ = fromEvent(document, 'visibilitychange').pipe(\n      // add empty emission to have this fire on creation\n      startWith(null),\n      map(() => document.visibilityState === 'visible'),\n      distinctUntilChanged(),\n      switchMap((visible) =>\n        visible\n          ? // using timer instead of interval since timer will emit on creation\n            timer(0, POLL_INTERVAL)\n          : EMPTY,\n      ),\n      shareReplay({refCount: true, bufferSize: 1}),\n    )\n  }\n  return visiblePoll$\n}\n\nexport type ReferringDocuments = {\n  isLoading: boolean\n  totalCount: number\n  projectIds: string[]\n  datasetNames: string[]\n  hasUnknownDatasetNames: boolean\n  internalReferences?: {\n    totalCount: number\n    references: Array<{_id: string; _type: string}>\n  }\n  crossDatasetReferences?: {\n    totalCount: number\n    references: Array<{\n      /**\n       * The project ID of the document that is currently referencing the subject\n       * document. Unlike `documentId` and `datasetName`, this should always be\n       * defined.\n       */\n      projectId: string\n      /**\n       * The ID of the document that is currently referencing the subject\n       * document. This will be omitted if there is no access to the current\n       * project and dataset pair (e.g. if no `sanity-project-token` were\n       * configured)\n       */\n      documentId?: string\n      /**\n       * The dataset name that is currently referencing the subject document.\n       * This will be omitted if there is no access to the current project and\n       * dataset pair (e.g. if no `sanity-project-token` were configured)\n       */\n      datasetName?: string\n    }>\n  }\n}\n\nfunction getDocumentExistence(\n  documentId: string,\n  {versionedClient}: {versionedClient: SanityClient},\n): Observable<string | undefined> {\n  const draftId = getDraftId(documentId)\n  const publishedId = getPublishedId(documentId)\n  const requestOptions = {\n    uri: versionedClient.getDataUrl('doc', `${draftId},${publishedId}`),\n    json: true,\n    query: {excludeContent: 'true'},\n    tag: 'use-referring-documents.document-existence',\n  }\n  return versionedClient.observable.request<AvailabilityResponse>(requestOptions).pipe(\n    map(({omitted}) => {\n      const nonExistant = omitted.filter((doc) => doc.reason === 'existence')\n      if (nonExistant.length === 2) {\n        // None of the documents exist\n        return undefined\n      }\n\n      if (nonExistant.length === 0) {\n        // Both exist, so use the published one\n        return publishedId\n      }\n\n      // If the draft does not exist, use the published ID, and vice versa\n      return nonExistant.some((doc) => doc.id === draftId) ? publishedId : draftId\n    }),\n  )\n}\n\n/**\n * fetches the cross-dataset references using the client observable.request\n * method (for that requests can be automatically cancelled)\n */\nfunction fetchCrossDatasetReferences(\n  documentId: string,\n  context: {versionedClient: SanityClient},\n): Observable<ReferringDocuments['crossDatasetReferences']> {\n  const {versionedClient} = context\n\n  return getVisiblePoll$().pipe(\n    switchMap(() => getDocumentExistence(documentId, context)),\n    switchMap((checkDocumentId) => {\n      if (!checkDocumentId) {\n        return of({totalCount: 0, references: []})\n      }\n\n      const currentDataset = versionedClient.config().dataset\n\n      return versionedClient.observable\n        .request({\n          url: `/data/references/${currentDataset}/documents/${checkDocumentId}/to?excludeInternalReferences=true&excludePaths=true`,\n          tag: 'use-referring-documents.external',\n        })\n        .pipe(\n          catchError((e) => {\n            // it's possible that referencing document doesn't exist yet so the\n            // API will return a 404. In those cases, we want to catch and return\n            // a response with no references\n            if (isClientError(e) && e.statusCode === 404) {\n              return of({totalCount: 0, references: []})\n            }\n\n            throw e\n          }),\n        )\n    }),\n  )\n}\n\nconst useInternalReferences = createHookFromObservableFactory(\n  ([documentId, documentStore]: [string, DocumentStore]) => {\n    const referencesClause = '*[references($documentId)][0...100]{_id,_type}'\n    const totalClause = 'count(*[references($documentId)])'\n    const fetchQuery = `{\"references\":${referencesClause},\"totalCount\":${totalClause}}`\n    const listenQuery = '*[references($documentId)]'\n\n    return documentStore.listenQuery(\n      {fetch: fetchQuery, listen: listenQuery},\n      {documentId},\n      {tag: 'use-referring-documents', transitions: ['appear', 'disappear'], throttleTime: 5000},\n    ) as Observable<ReferringDocuments['internalReferences']>\n  },\n)\n\nconst useCrossDatasetReferences = createHookFromObservableFactory(\n  ([documentId, versionedClient]: [string, SanityClient]) => {\n    // (documentId: string, versionedClient: SanityClient) => {\n    return getVisiblePoll$().pipe(\n      switchMap(() =>\n        fetchCrossDatasetReferences(documentId, {\n          versionedClient,\n        }),\n      ),\n    )\n  },\n)\n\nexport function useReferringDocuments(documentId: string): ReferringDocuments {\n  const versionedClient = useClient(DEFAULT_STUDIO_CLIENT_OPTIONS)\n\n  const documentStore = useDocumentStore()\n  const publishedId = getPublishedId(documentId)\n\n  const [internalReferences, isInternalReferencesLoading] = useInternalReferences(\n    useMemo(() => [publishedId, documentStore], [documentStore, publishedId]),\n  )\n\n  const [crossDatasetReferences, isCrossDatasetReferencesLoading] = useCrossDatasetReferences(\n    useMemo(() => [publishedId, versionedClient], [publishedId, versionedClient]),\n  )\n\n  const projectIds = useMemo(() => {\n    return Array.from(\n      new Set(\n        crossDatasetReferences?.references\n          .map((crossDatasetReference) => crossDatasetReference.projectId)\n          .filter(Boolean),\n      ),\n    ).sort()\n  }, [crossDatasetReferences?.references])\n\n  const datasetNames = useMemo(() => {\n    return Array.from(\n      new Set<string>(\n        crossDatasetReferences?.references\n          // .filter((name) => typeof name === 'string')\n          .map((crossDatasetReference) => crossDatasetReference?.datasetName || '')\n          .filter((datasetName) => Boolean(datasetName) && datasetName !== ''),\n      ),\n    ).sort()\n  }, [crossDatasetReferences?.references])\n\n  const hasUnknownDatasetNames = useMemo(() => {\n    return Boolean(\n      crossDatasetReferences?.references.some(\n        (crossDatasetReference) => typeof crossDatasetReference.datasetName !== 'string',\n      ),\n    )\n  }, [crossDatasetReferences?.references])\n\n  return {\n    totalCount: (internalReferences?.totalCount || 0) + (crossDatasetReferences?.totalCount || 0),\n    projectIds,\n    datasetNames,\n    hasUnknownDatasetNames,\n    internalReferences,\n    crossDatasetReferences,\n    isLoading: isInternalReferencesLoading || isCrossDatasetReferencesLoading,\n  }\n}\n", "import {Box, Flex} from '@sanity/ui'\nimport {useId, useMemo} from 'react'\nimport {LoadingBlock, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Dialog} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {DocTitle} from '../DocTitle'\nimport {ConfirmDeleteDialogBody} from './ConfirmDeleteDialogBody'\nimport {useReferringDocuments} from './useReferringDocuments'\n\n/** @internal */\nexport const DialogBody = styled(Box)`\n  box-sizing: border-box;\n`\n\n/** @internal */\nexport const LoadingContainer = styled(Flex).attrs({\n  align: 'center',\n  direction: 'column',\n  justify: 'center',\n})`\n  height: 110px;\n`\n\n/** @internal */\nexport interface ConfirmDeleteDialogProps {\n  /**\n   * Incoming document ID used to find other referencing documents. This\n   * field respects draft IDs (e.g. if you pass in a published ID when one\n   * doesn't exist the document title may not show up).\n   */\n  id: string\n  /**\n   * The schema typename of the incoming document\n   */\n  type: string\n  /**\n   * The name of the action being done. (e.g. the `'unpublish'` action requires\n   * the same document deletion confirmation).\n   */\n  action?: 'delete' | 'unpublish'\n  onCancel: () => void\n  onConfirm: () => void\n}\n\n/**\n * A confirmation dialog used to prevent unwanted document deletes. Loads all\n * the referencing internal and cross-data references prior to showing the\n * delete button.\n *\n * @internal\n */\nexport function ConfirmDeleteDialog({\n  id,\n  type,\n  action = 'delete',\n  onCancel,\n  onConfirm,\n}: ConfirmDeleteDialogProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const dialogId = `deletion-confirmation-${useId()}`\n  const {\n    internalReferences,\n    crossDatasetReferences,\n    isLoading,\n    totalCount,\n    projectIds,\n    datasetNames,\n    hasUnknownDatasetNames,\n  } = useReferringDocuments(id)\n  const documentTitle = <DocTitle document={useMemo(() => ({_id: id, _type: type}), [id, type])} />\n  const showConfirmButton = !isLoading\n\n  return (\n    <Dialog\n      width={1}\n      id={dialogId}\n      header={t('confirm-delete-dialog.header.text', {context: action})}\n      footer={{\n        cancelButton: {\n          onClick: onCancel,\n          text: t('confirm-delete-dialog.cancel-button.text'),\n        },\n        confirmButton: showConfirmButton\n          ? {\n              text:\n                totalCount > 0\n                  ? t('confirm-delete-dialog.confirm-anyway-button.text', {context: action})\n                  : t('confirm-delete-dialog.confirm-button.text', {context: action}),\n              onClick: onConfirm,\n            }\n          : undefined,\n      }}\n      onClose={onCancel}\n      onClickOutside={onCancel}\n    >\n      <DialogBody>\n        {crossDatasetReferences && internalReferences && !isLoading ? (\n          <ConfirmDeleteDialogBody\n            crossDatasetReferences={crossDatasetReferences}\n            internalReferences={internalReferences}\n            documentTitle={documentTitle}\n            isLoading={isLoading}\n            totalCount={totalCount}\n            action={action}\n            projectIds={projectIds}\n            datasetNames={datasetNames}\n            hasUnknownDatasetNames={hasUnknownDatasetNames}\n            onReferenceLinkClick={onCancel}\n          />\n        ) : (\n          <LoadingContainer data-testid=\"loading-container\">\n            <LoadingBlock showText title={t('confirm-delete-dialog.loading.text')} />\n          </LoadingContainer>\n        )}\n      </DialogBody>\n    </Dialog>\n  )\n}\n", "import {Box, ErrorBoundary, Text} from '@sanity/ui'\nimport {type ComponentProps, useCallback, useId, useState} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Dialog} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {ConfirmDeleteDialog, type ConfirmDeleteDialogProps} from './ConfirmDeleteDialog'\n\nexport type {ConfirmDeleteDialogProps}\n\ntype ArgType<T> = T extends (arg: infer U) => unknown ? U : never\ntype ErrorInfo = ArgType<ComponentProps<typeof ErrorBoundary>['onCatch']>\n\n/** @internal */\nfunction ConfirmDeleteDialogContainer(props: ConfirmDeleteDialogProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const id = useId()\n  const [error, setError] = useState<ErrorInfo | null>(null)\n  const handleRetry = useCallback(() => setError(null), [])\n\n  return error ? (\n    <Dialog\n      id={`dialog-error-${id}`}\n      data-testid=\"confirm-delete-error-dialog\"\n      header={t('confirm-delete-dialog.error.title.text')}\n      footer={{\n        confirmButton: {\n          text: t('confirm-delete-dialog.error.retry-button.text'),\n          onClick: handleRetry,\n          tone: 'default',\n        },\n      }}\n      onClose={props.onCancel}\n    >\n      <Box padding={4}>\n        <Text size={1}>{t('confirm-delete-dialog.error.message.text')}</Text>\n      </Box>\n    </Dialog>\n  ) : (\n    <ErrorBoundary onCatch={setError}>\n      <ConfirmDeleteDialog {...props} />\n    </ErrorBoundary>\n  )\n}\n\nexport {ConfirmDeleteDialogContainer as ConfirmDeleteDialog}\n", "import {type ReactElement, useEffect, useState} from 'react'\n\nexport function Delay({\n  children,\n  ms = 0,\n}: {\n  children?: ReactElement | (() => ReactElement)\n  ms?: number\n}): ReactElement {\n  const [ready, setReady] = useState(ms <= 0)\n\n  useEffect(() => {\n    if (ms <= 0) {\n      return undefined\n    }\n\n    const timeoutId = setTimeout(() => setReady(true), ms)\n\n    return () => {\n      clearTimeout(timeoutId)\n    }\n  }, [ms])\n\n  if (!ready || !children) {\n    return <></>\n  }\n\n  return typeof children === 'function' ? children() : children\n}\n", "/**\n * @internal\n */\nexport const PANE_DEBUG = false\n\n/**\n * @internal\n */\nexport const PANE_COLLAPSED_WIDTH = 51\n\n/**\n * @internal\n */\nexport const PANE_DEFAULT_MIN_WIDTH = PANE_COLLAPSED_WIDTH * 4\n", "import {Layer} from '@sanity/ui'\nimport {useCallback, useState} from 'react'\nimport {styled} from 'styled-components'\n\nimport {usePaneLayout} from './usePaneLayout'\n\nconst Root = styled(Layer)`\n  position: relative;\n  width: 1px;\n  min-width: 1px;\n\n  &:before {\n    content: '';\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    width: 1px;\n    background-color: var(--card-border-color);\n  }\n\n  &:not([data-disabled]) {\n    cursor: ew-resize;\n    width: 9px;\n    min-width: 9px;\n    margin: 0 -4px;\n\n    &:before {\n      left: 4px;\n    }\n\n    &:after {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 9px;\n      bottom: 0;\n      background-color: var(--card-border-color);\n      opacity: 0;\n      transition: opacity 150ms;\n    }\n\n    &[data-dragging]:after,\n    &:hover:after {\n      opacity: 0.2;\n    }\n  }\n`\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneDivider({\n  disabled,\n  element,\n}: {\n  disabled?: boolean\n  element: HTMLElement | null\n}) {\n  const {resize} = usePaneLayout()\n  const [dragging, setDragging] = useState(false)\n\n  const handleMouseDown = useCallback(\n    (event: any) => {\n      if (!element) return\n\n      setDragging(true)\n\n      event.preventDefault()\n\n      const startX = event.pageX\n\n      resize('start', element, 0)\n\n      const handleMouseMove = (e: MouseEvent) => {\n        e.preventDefault()\n\n        const deltaX = e.pageX - startX\n\n        resize('move', element, deltaX)\n      }\n\n      const handleMouseUp = (e: MouseEvent) => {\n        e.preventDefault()\n\n        setDragging(false)\n\n        window.removeEventListener('mousemove', handleMouseMove)\n        window.removeEventListener('mouseup', handleMouseUp)\n\n        resize('end', element, 0)\n      }\n\n      window.addEventListener('mousemove', handleMouseMove)\n      window.addEventListener('mouseup', handleMouseUp)\n    },\n    [element, resize],\n  )\n\n  return (\n    <Root\n      data-disabled={disabled ? '' : undefined}\n      data-dragging={dragging ? '' : undefined}\n      onMouseDown={handleMouseDown}\n    />\n  )\n}\n", "import {\n  BoundaryElementProvider,\n  Card,\n  type CardProps,\n  Code,\n  Flex,\n  useForwardedRef,\n} from '@sanity/ui'\nimport {\n  type ForwardedRef,\n  forwardRef,\n  type HTMLProps,\n  type ReactNode,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react'\nimport {IsLastPaneProvider, LegacyLayerProvider} from 'sanity'\nimport {PaneContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {PANE_COLLAPSED_WIDTH, PANE_DEBUG, PANE_DEFAULT_MIN_WIDTH} from './constants'\nimport {PaneDivider} from './PaneDivider'\nimport {usePaneLayout} from './usePaneLayout'\n\ninterface PaneProps {\n  children?: ReactNode\n  currentMinWidth?: number\n  currentMaxWidth?: number\n  flex?: number\n  id: string\n  minWidth?: number\n  maxWidth?: number\n  selected?: boolean\n}\n\nconst Root = styled(Card)`\n  outline: none;\n\n  // NOTE: This will render a border to the right side of each pane\n  // without taking up physical space.\n  box-shadow: 1px 0 0 var(--card-border-color);\n`\n\n/**\n * @hidden\n * @internal\n */\n// eslint-disable-next-line complexity\nexport const Pane = forwardRef(function Pane(\n  props: PaneProps &\n    Omit<CardProps, 'as' | 'overflow'> &\n    Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'hidden' | 'id' | 'style'>,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {\n    children,\n    currentMinWidth: currentMinWidthProp,\n    currentMaxWidth: currentMaxWidthProp,\n    flex: flexProp = 1,\n    id,\n    minWidth: minWidthProp,\n    maxWidth: maxWidthProp,\n    selected = false,\n    ...restProps\n  } = props\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const {\n    collapse,\n    collapsed: layoutCollapsed,\n    expand,\n    expandedElement,\n    mount,\n    panes,\n  } = usePaneLayout()\n  const pane = panes.find((p) => p.element === rootElement)\n  const paneIndex = pane && panes.indexOf(pane)\n  const nextPane = typeof paneIndex === 'number' ? panes[paneIndex + 1] : undefined\n  const isLast = paneIndex === panes.length - 1\n  const expanded = expandedElement === rootElement\n  const collapsed = layoutCollapsed ? false : pane?.collapsed || false\n  const nextCollapsed = nextPane?.collapsed || false\n  const forwardedRef = useForwardedRef(ref)\n  const flex = pane?.flex ?? flexProp\n  const currentMinWidth = pane?.currentMinWidth ?? currentMinWidthProp\n  const currentMaxWidth = pane?.currentMaxWidth ?? currentMaxWidthProp\n\n  const setRef = useCallback(\n    (refValue: HTMLDivElement | null) => {\n      setRootElement(refValue)\n      forwardedRef.current = refValue\n    },\n    [forwardedRef],\n  )\n\n  useEffect(() => {\n    if (!rootElement) return undefined\n    return mount(rootElement, {\n      currentMinWidth: currentMinWidthProp,\n      currentMaxWidth: currentMaxWidthProp,\n      flex: flexProp,\n      id,\n      minWidth: minWidthProp,\n      maxWidth: maxWidthProp,\n    })\n  }, [\n    currentMinWidthProp,\n    currentMaxWidthProp,\n    flexProp,\n    id,\n    minWidthProp,\n    maxWidthProp,\n    mount,\n    rootElement,\n  ])\n\n  const handleCollapse = useCallback(() => {\n    if (!rootElement) return\n    collapse(rootElement)\n  }, [collapse, rootElement])\n\n  const handleExpand = useCallback(() => {\n    if (!rootElement) return\n    expand(rootElement)\n  }, [expand, rootElement])\n\n  const contextValue = useMemo(\n    () => ({\n      collapse: handleCollapse,\n      collapsed: layoutCollapsed ? false : collapsed,\n      expand: handleExpand,\n      index: paneIndex,\n      isLast,\n      rootElement,\n    }),\n    [collapsed, handleCollapse, handleExpand, isLast, layoutCollapsed, paneIndex, rootElement],\n  )\n\n  const minWidth = useMemo(() => {\n    if (layoutCollapsed) {\n      return undefined\n    }\n\n    if (collapsed) return PANE_COLLAPSED_WIDTH\n\n    if (currentMinWidth === 0) {\n      return minWidthProp || PANE_DEFAULT_MIN_WIDTH\n    }\n\n    if (isLast) {\n      return minWidthProp || PANE_DEFAULT_MIN_WIDTH\n    }\n\n    return currentMinWidth || minWidthProp || PANE_DEFAULT_MIN_WIDTH\n  }, [collapsed, currentMinWidth, isLast, layoutCollapsed, minWidthProp])\n\n  const maxWidth = useMemo(() => {\n    if (collapsed) return PANE_COLLAPSED_WIDTH\n\n    if (layoutCollapsed && isLast) {\n      return undefined\n    }\n\n    if (isLast) {\n      if (maxWidthProp) {\n        return currentMaxWidth ?? maxWidthProp\n      }\n\n      return undefined\n    }\n\n    return currentMaxWidth ?? maxWidthProp\n  }, [collapsed, currentMaxWidth, isLast, layoutCollapsed, maxWidthProp])\n\n  const hidden = layoutCollapsed && !isLast\n\n  const divider = useMemo(\n    () =>\n      !isLast &&\n      !layoutCollapsed && (\n        <LegacyLayerProvider zOffset=\"paneResizer\">\n          <PaneDivider disabled={collapsed || nextCollapsed} element={rootElement} />\n        </LegacyLayerProvider>\n      ),\n    [collapsed, isLast, layoutCollapsed, nextCollapsed, rootElement],\n  )\n\n  const style = useMemo(\n    () => ({\n      flex,\n      minWidth,\n      maxWidth: maxWidth === Infinity ? undefined : maxWidth,\n    }),\n    [flex, minWidth, maxWidth],\n  )\n\n  return (\n    <>\n      <LegacyLayerProvider zOffset=\"pane\">\n        <PaneContext.Provider value={contextValue}>\n          <IsLastPaneProvider isLastPane={isLast}>\n            <Root\n              data-testid=\"pane\"\n              data-ui=\"Pane\"\n              tone=\"inherit\"\n              hidden={hidden}\n              id={id}\n              overflow={layoutCollapsed ? undefined : 'hidden'}\n              {...restProps}\n              data-pane-collapsed={collapsed ? '' : undefined}\n              data-pane-index={paneIndex}\n              data-pane-selected={selected ? '' : undefined}\n              ref={setRef}\n              style={style}\n            >\n              {PANE_DEBUG && (\n                <Card padding={4} tone={expanded ? 'primary' : 'caution'}>\n                  <Code size={1}>\n                    {[\n                      `#${paneIndex}`,\n                      `collapsed=${collapsed}`,\n                      `currentMinWidth=${currentMinWidth}`,\n                      `currentMaxWidth=${currentMaxWidth}`,\n                      `flex=${flex}`,\n                      `minWidth=${minWidth}`,\n                      `maxWidth=${maxWidth}`,\n                    ].join('\\n')}\n                  </Code>\n                </Card>\n              )}\n\n              <BoundaryElementProvider element={rootElement}>\n                {!hidden && (\n                  <Flex direction=\"column\" height=\"fill\">\n                    {children}\n                  </Flex>\n                )}\n              </BoundaryElementProvider>\n            </Root>\n          </IsLastPaneProvider>\n        </PaneContext.Provider>\n      </LegacyLayerProvider>\n\n      {divider}\n    </>\n  )\n})\n", "import {Card} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const Root = styled(Card)`\n  position: relative;\n  outline: none;\n`\n\nRoot.displayName = 'PaneContent__root'\n", "import {useContext} from 'react'\nimport {PaneContext} from 'sanity/_singletons'\n\nimport {type PaneContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function usePane(): PaneContextValue {\n  const pane = useContext(PaneContext)\n\n  if (!pane) {\n    throw new Error('Pane: missing context value')\n  }\n\n  return pane\n}\n", "import {type BoxOverflow} from '@sanity/ui'\nimport {type ElementType, type ForwardedRef, forwardRef, type HTMLProps} from 'react'\n\nimport {Root} from './PaneContent.styles'\nimport {usePane} from './usePane'\nimport {usePaneLayout} from './usePaneLayout'\n\ninterface PaneContentProps {\n  as?: ElementType | keyof JSX.IntrinsicElements\n  overflow?: BoxOverflow\n  padding?: number | number[]\n}\n\n/**\n * @hidden\n * @internal\n */\nexport const PaneContent = forwardRef(function PaneContent(\n  props: PaneContentProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref'>,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {as, children, overflow, padding, ...restProps} = props\n  const {collapsed} = usePane()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n\n  return (\n    <Root\n      data-testid=\"pane-content\"\n      forwardedAs={as}\n      {...restProps}\n      flex={1}\n      hidden={collapsed}\n      overflow={layoutCollapsed ? undefined : overflow}\n      padding={padding}\n      ref={ref}\n      tone=\"inherit\"\n    >\n      {children}\n    </Root>\n  )\n})\n", "import {CheckmarkIcon} from '@sanity/icons'\nimport {MenuDivider, Text} from '@sanity/ui'\nimport {type MouseEvent, useCallback} from 'react'\nimport {TooltipOfDisabled, useGetI18nText, useI18nText} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\n\nimport {MenuGroup, MenuItem, type PopoverProps} from '../../../ui-components'\nimport {type Intent} from '../../structureBuilder'\nimport {type _PaneMenuItem, type _PaneMenuNode} from './types'\n\nconst MENU_GROUP_POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'left-start',\n  portal: true,\n}\n\nexport function PaneMenuButtonItem(props: {\n  disabled?: boolean\n  isAfterGroup: boolean\n  node: _PaneMenuNode\n}) {\n  const {disabled, isAfterGroup, node} = props\n  const getI18nText = useGetI18nText('i18n' in node ? node : undefined)\n\n  if (node.type === 'divider') {\n    return <MenuDivider />\n  }\n\n  const {title} = getI18nText(node)\n\n  if (node.type === 'group') {\n    if (node.children.length === 0) {\n      return null\n    }\n\n    if (node.expanded) {\n      return (\n        <>\n          {isAfterGroup && <MenuDivider />}\n          {node.children.map((child, childIndex) => (\n            <PaneMenuButtonItem\n              disabled={disabled || Boolean(node.disabled)}\n              isAfterGroup={node.children[childIndex - 1]?.type === 'group'}\n              key={child.key}\n              node={child}\n            />\n          ))}\n        </>\n      )\n    }\n\n    return (\n      <>\n        {isAfterGroup && <MenuDivider />}\n        <MenuGroup\n          disabled={disabled}\n          icon={node.icon}\n          popover={MENU_GROUP_POPOVER_PROPS}\n          text={title}\n        >\n          {node.children.map((child, childIndex) => (\n            <PaneMenuButtonItem\n              disabled={disabled || Boolean(node.disabled)}\n              isAfterGroup={node.children[childIndex - 1]?.type === 'group'}\n              key={child.key}\n              node={child}\n            />\n          ))}\n        </MenuGroup>\n      </>\n    )\n  }\n\n  return (\n    <>\n      {isAfterGroup && <MenuDivider />}\n      <PaneContextMenuItemResolver disabled={disabled} node={node} />\n    </>\n  )\n}\n\nfunction PaneContextMenuItemResolver(props: {disabled?: boolean; node: _PaneMenuItem}) {\n  const {node} = props\n\n  if (node.intent) {\n    return <PaneContextIntentMenuItem {...props} intent={node.intent} />\n  }\n\n  return <PaneContextMenuItem {...props} />\n}\n\nfunction PaneContextMenuItem(props: {disabled?: boolean; node: _PaneMenuItem}) {\n  const {disabled, node} = props\n  const tooltipContent = typeof node.disabled === 'object' && (\n    <Text size={1}>{node.disabled.reason}</Text>\n  )\n  const {title} = useI18nText(node)\n\n  return (\n    <TooltipOfDisabled content={tooltipContent} placement=\"left\">\n      <MenuItem\n        disabled={disabled || Boolean(node.disabled)}\n        hotkeys={node.hotkey?.split('+')}\n        icon={node.icon}\n        iconRight={node.iconRight || (node.selected && CheckmarkIcon)}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClick={node.onAction}\n        pressed={node.selected}\n        text={title}\n        tone={node.tone}\n      />\n    </TooltipOfDisabled>\n  )\n}\n\nfunction PaneContextIntentMenuItem(props: {\n  disabled?: boolean\n  intent: Intent\n  node: _PaneMenuItem\n}) {\n  const {disabled, intent, node} = props\n  const tooltipContent = typeof node.disabled === 'object' && (\n    <Text size={1}>{node.disabled.reason}</Text>\n  )\n  const intentLink = useIntentLink({intent: intent.type, params: intent.params})\n\n  const handleClick = useCallback(\n    (event: MouseEvent<HTMLDivElement>) => {\n      intentLink.onClick(event)\n      node.onAction()\n    },\n    [intentLink, node],\n  )\n\n  const {title} = useI18nText(node)\n\n  return (\n    <TooltipOfDisabled content={tooltipContent} placement=\"left\">\n      <MenuItem\n        as=\"a\"\n        disabled={disabled || Boolean(node.disabled)}\n        hotkeys={node.hotkey?.split('+')}\n        href={intentLink.href}\n        icon={node.icon}\n        iconRight={node.selected ? CheckmarkIcon : undefined}\n        onClick={handleClick}\n        pressed={node.selected}\n        text={title}\n        tone={node.tone}\n      />\n    </TooltipOfDisabled>\n  )\n}\n", "import {Menu, MenuDivider} from '@sanity/ui'\nimport {type ReactNode, useId} from 'react'\nimport {ContextMenuButton} from 'sanity'\n\nimport {MenuButton, type PopoverProps} from '../../../ui-components'\nimport {PaneMenuButtonItem} from './PaneMenuButtonItem'\nimport {type _PaneMenuItem, type _PaneMenuNode} from './types'\n\ninterface PaneContextMenuButtonProps {\n  nodes: _PaneMenuNode[]\n  actionsNodes?: ReactNode\n}\n\nconst CONTEXT_MENU_POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'bottom',\n  portal: true,\n}\n\nfunction nodesHasTone(nodes: _PaneMenuNode[], tone: NonNullable<_PaneMenuItem['tone']>): boolean {\n  return nodes.some((node) => {\n    return (\n      (node.type === 'item' && node.tone === tone) ||\n      (node.type === 'group' && nodesHasTone(node.children, tone))\n    )\n  })\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneContextMenuButton(props: PaneContextMenuButtonProps) {\n  const {nodes, actionsNodes} = props\n  const id = useId()\n\n  const hasCritical = nodesHasTone(nodes, 'critical')\n  const hasCaution = nodesHasTone(nodes, 'caution')\n\n  return (\n    <MenuButton\n      button={\n        <ContextMenuButton\n          // eslint-disable-next-line no-nested-ternary\n          tone={hasCritical ? 'critical' : hasCaution ? 'caution' : undefined}\n          data-testid=\"pane-context-menu-button\"\n        />\n      }\n      id={id}\n      menu={\n        <Menu>\n          {actionsNodes && (\n            <>\n              {actionsNodes}\n              <MenuDivider />\n            </>\n          )}\n          {nodes.map((node, nodeIndex) => {\n            const isAfterGroup = nodes[nodeIndex - 1]?.type === 'group'\n            return <PaneMenuButtonItem isAfterGroup={isAfterGroup} key={node.key} node={node} />\n          })}\n        </Menu>\n      }\n      popover={CONTEXT_MENU_POPOVER_PROPS}\n    />\n  )\n}\n", "import {Card, Layer} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const Root = styled(Layer)`\n  position: sticky;\n  bottom: 0;\n\n  &:before {\n    content: '';\n    display: block;\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: -1px;\n    border-bottom: 1px solid var(--card-border-color);\n  }\n`\n\nexport const RootCard = styled(Card)`\n  padding-bottom: env(safe-area-inset-bottom);\n`\n", "import {Box} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef, type ReactNode} from 'react'\nimport {LegacyLayerProvider} from 'sanity'\n\nimport {Root, RootCard} from './PaneFooter.styles'\nimport {usePane} from './usePane'\n\ninterface PaneFooterProps {\n  children?: ReactNode\n  padding?: number | number[]\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneFooter = forwardRef(function PaneFooter(\n  props: PaneFooterProps,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {children, padding} = props\n  const {collapsed} = usePane()\n\n  return (\n    <LegacyLayerProvider zOffset=\"paneFooter\">\n      <Root data-testid=\"pane-footer\" hidden={collapsed} ref={ref}>\n        <RootCard tone=\"inherit\">\n          <Box padding={padding}>{children}</Box>\n        </RootCard>\n      </Root>\n    </LegacyLayerProvider>\n  )\n})\n", "import {Box, Card, Flex, Layer, rgba, Text, TextSkeleton, type Theme} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\ninterface RootProps {\n  $border?: boolean\n}\n\nexport const Root = styled(Layer)<RootProps>(({$border}) => {\n  return css`\n    line-height: 0;\n    position: sticky;\n    top: 0;\n\n    &:not([data-collapsed]):after {\n      content: '';\n      display: block;\n      position: absolute;\n      left: 0;\n      right: 0;\n      bottom: -1px;\n      border-bottom: 1px solid ${$border ? 'var(--card-border-color)' : 'transparent'};\n      opacity: 1;\n    }\n  `\n})\n\nexport const Layout = styled(Flex)`\n  transform-origin: calc(51px / 2);\n\n  [data-collapsed] > div > & {\n    transform: rotate(90deg);\n  }\n`\n\nexport const TitleCard = styled(Card)(({theme}: {theme: Theme}) => {\n  const {fg, bg} = theme.sanity.color.card.enabled\n\n  // Disable color updates on hover\n  return css`\n    background-color: ${bg};\n\n    [data-ui='Text'] {\n      color: ${fg};\n    }\n  `\n})\n\nexport const TitleTextSkeleton = styled(TextSkeleton)`\n  width: 66%;\n  max-width: 175px;\n`\n\nexport const TitleText = styled(Text)`\n  cursor: default;\n  outline: none;\n`\n\nexport const TabsBox = styled(Box)(({theme}: {theme: Theme}) => {\n  const {color, space} = theme.sanity\n\n  return css`\n    overflow: hidden;\n    overflow: clip;\n    position: relative;\n\n    & > div {\n      white-space: nowrap;\n      overflow: auto;\n      /* Hide scrollbars */\n      scrollbar-width: none;\n      &::-webkit-scrollbar {\n        width: 0;\n        height: 0;\n      }\n    }\n\n    /* right padding */\n    & > div:after {\n      content: '';\n      display: inline-block;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      width: ${space[3]}px;\n      height: 1px;\n    }\n\n    /* Gradient that makes it look like tabs disappear into nothing (looks nicer) */\n    &:after {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      background: linear-gradient(to right, ${rgba(color.base.bg, 0)}, var(--card-bg-color));\n      width: ${space[3]}px;\n      pointer-events: none;\n    }\n  `\n})\n", "import {Box, Card, Flex, LayerProvider, useElementRect} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef, type ReactNode, useCallback, useMemo} from 'react'\nimport {LegacyLayerProvider} from 'sanity'\n\nimport {Layout, Root, TabsBox, TitleCard, TitleText, TitleTextSkeleton} from './PaneHeader.styles'\nimport {usePane} from './usePane'\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport interface PaneHeaderProps {\n  actions?: ReactNode\n  backButton?: ReactNode\n  border?: boolean\n  contentAfter?: ReactNode\n  loading?: boolean\n  subActions?: ReactNode\n  tabIndex?: number\n  tabs?: ReactNode\n  title: ReactNode\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneHeader = forwardRef(function PaneHeader(\n  props: PaneHeaderProps,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {actions, backButton, border, contentAfter, loading, subActions, tabs, tabIndex, title} =\n    props\n  const {collapse, collapsed, expand, rootElement: paneElement} = usePane()\n  const paneRect = useElementRect(paneElement || null)\n\n  const layoutStyle = useMemo(\n    () => ({\n      width: collapsed ? paneRect?.height || window.innerHeight : undefined,\n    }),\n    [collapsed, paneRect],\n  )\n\n  const handleTitleClick = useCallback(() => {\n    if (collapsed) return\n    collapse()\n  }, [collapse, collapsed])\n\n  const handleLayoutClick = useCallback(() => {\n    if (!collapsed) return\n    expand()\n  }, [collapsed, expand])\n\n  const showTabsOrSubActions = Boolean(!collapsed && (tabs || subActions))\n\n  return (\n    <LayerProvider zOffset={100}>\n      <Root\n        $border={border}\n        data-collapsed={collapsed ? '' : undefined}\n        data-testid=\"pane-header\"\n        ref={ref}\n      >\n        <LegacyLayerProvider zOffset=\"paneHeader\">\n          <Card data-collapsed={collapsed ? '' : undefined} tone=\"inherit\">\n            <Layout\n              gap={1}\n              onClick={handleLayoutClick}\n              padding={3}\n              paddingBottom={collapsed ? 3 : 2}\n              sizing=\"border\"\n              style={layoutStyle}\n            >\n              {backButton && <Box flex=\"none\">{backButton}</Box>}\n\n              <TitleCard\n                __unstable_focusRing\n                flex={1}\n                forwardedAs=\"button\"\n                onClick={handleTitleClick}\n                paddingLeft={backButton ? 1 : 2}\n                padding={2}\n                tabIndex={tabIndex}\n              >\n                {loading && <TitleTextSkeleton animated radius={1} size={1} />}\n                {!loading && (\n                  <TitleText size={1} textOverflow=\"ellipsis\" weight=\"semibold\">\n                    {title}\n                  </TitleText>\n                )}\n              </TitleCard>\n\n              {actions && (\n                <Flex align=\"center\" hidden={collapsed}>\n                  <LegacyLayerProvider zOffset=\"paneHeader\">{actions}</LegacyLayerProvider>\n                </Flex>\n              )}\n            </Layout>\n\n            {showTabsOrSubActions && (\n              <Flex\n                align=\"center\"\n                hidden={collapsed}\n                overflow=\"auto\"\n                paddingBottom={3}\n                paddingX={3}\n              >\n                <TabsBox flex={1} marginRight={subActions ? 3 : 0}>\n                  {tabs}\n                </TabsBox>\n\n                {subActions && subActions}\n              </Flex>\n            )}\n\n            {!collapsed && contentAfter && contentAfter}\n          </Card>\n        </LegacyLayerProvider>\n      </Root>\n    </LayerProvider>\n  )\n})\n", "import {UnknownIcon} from '@sanity/icons'\nimport {Menu} from '@sanity/ui'\nimport {type MouseEvent, useCallback, useId} from 'react'\nimport {StatusButton, useI18nText, useTranslation} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\n\nimport {Button, MenuButton} from '../../../ui-components'\nimport {type Intent} from '../../structureBuilder'\nimport {PaneMenuButtonItem} from './PaneMenuButtonItem'\nimport {type _PaneMenuGroup, type _PaneMenuItem} from './types'\n\nfunction getDisabledReason(node: _PaneMenuItem) {\n  if (!node.disabled) {\n    return {disabledReason: undefined, ariaLabel: undefined, isDisabled: false}\n  }\n\n  /**\n   * This component supports receiving a `reason: string | react.ReactNode`.\n   * We are casting it as string, to avoid the ts error, as content will be rendered into the tooltip which only accepts string, but it won't crash if it's a ReactNode.\n   * For the aria label, we want to check if it's actually a string, to avoid generating an aria-label with the value `[object Object]`.\n   */\n  const disabledReason =\n    typeof node.disabled === 'object' ? (node.disabled.reason as string) : undefined\n  const ariaLabel =\n    typeof node.disabled === 'object' && typeof node.disabled?.reason === 'string'\n      ? node.disabled.reason\n      : 'This is disabled'\n\n  return {disabledReason, ariaLabel, isDisabled: Boolean(node.disabled)}\n}\nexport interface PaneHeaderActionButtonProps {\n  node: _PaneMenuItem | _PaneMenuGroup\n}\n\nexport function PaneHeaderActionButton(props: PaneHeaderActionButtonProps) {\n  const {node} = props\n\n  if (node.type === 'item') {\n    return <PaneHeaderMenuItemActionButton node={node} />\n  }\n\n  if (node.type === 'group') {\n    return <PaneHeaderMenuGroupActionButton node={node} />\n  }\n\n  console.warn('unknown menu node (expected `type: \"item\" | \"group\"`):', node)\n\n  return null\n}\n\nexport interface PaneHeaderMenuItemActionButtonProps {\n  node: _PaneMenuItem\n}\n\nexport function PaneHeaderMenuItemActionButton(props: PaneHeaderMenuItemActionButtonProps) {\n  const {node} = props\n  const {title} = useI18nText(node)\n  const {t} = useTranslation()\n\n  if (node.intent) {\n    return <PaneHeaderActionIntentButton {...props} intent={node.intent} />\n  }\n\n  const {disabledReason, ariaLabel, isDisabled} = getDisabledReason(node)\n\n  return (\n    <StatusButton\n      disabled={isDisabled}\n      icon={node.icon}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClick={node.onAction}\n      selected={node.selected}\n      tone={node.tone}\n      aria-label={ariaLabel || title || t('status-button.aria-label')}\n      tooltipProps={{\n        hotkeys: !isDisabled && node.hotkey ? node.hotkey.split('+') : undefined,\n        content: isDisabled ? disabledReason : title,\n      }}\n    />\n  )\n}\n\nfunction PaneHeaderActionIntentButton(props: {intent: Intent; node: _PaneMenuItem}) {\n  const {intent, node} = props\n  const intentLink = useIntentLink({intent: intent.type, params: intent.params})\n  const {t} = useTranslation()\n\n  const handleClick = useCallback(\n    (event: MouseEvent<HTMLButtonElement>) => {\n      intentLink.onClick(event)\n      node.onAction()\n    },\n    [intentLink, node],\n  )\n\n  const {disabledReason, ariaLabel, isDisabled} = getDisabledReason(node)\n\n  return (\n    <StatusButton\n      forwardedAs=\"a\"\n      disabled={isDisabled}\n      href={intentLink.href}\n      icon={node.icon}\n      onClick={handleClick}\n      selected={node.selected}\n      tone={node.tone}\n      aria-label={ariaLabel || node.title || t('status-button.aria-label')}\n      tooltipProps={{\n        hotkeys: !isDisabled && node.hotkey ? node.hotkey.split('+') : undefined,\n        content: isDisabled ? disabledReason : node.title,\n        placement: 'bottom',\n        portal: true,\n      }}\n    />\n  )\n}\n\nexport interface PaneHeaderMenuGroupActionButtonProps {\n  node: _PaneMenuGroup\n}\n\nfunction PaneHeaderMenuGroupActionButton(props: PaneHeaderMenuGroupActionButtonProps) {\n  const {node} = props\n  const {title} = useI18nText(node)\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          disabled={!!node.disabled}\n          icon={node.icon ?? UnknownIcon}\n          label={title}\n          mode=\"bleed\"\n          tooltipProps={{content: node.title, portal: true}}\n        />\n      }\n      id={useId()}\n      menu={\n        <Menu>\n          {node.children.map((child, idx) => {\n            return (\n              <PaneMenuButtonItem\n                disabled={Boolean(node.disabled)}\n                isAfterGroup={node.children[idx - 1]?.type === 'group'}\n                key={child.key}\n                node={child}\n              />\n            )\n          })}\n        </Menu>\n      }\n    />\n  )\n}\n", "import {Card} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const Root = styled(Card)`\n  transition: opacity 200ms;\n  position: relative;\n  z-index: 1;\n  padding-left: env(safe-area-inset-left);\n  padding-right: env(safe-area-inset-right);\n  opacity: 0;\n\n  &:not([hidden]) {\n    display: flex;\n  }\n\n  &:not([data-collapsed]) {\n    overflow: auto;\n  }\n\n  &[data-mounted] {\n    opacity: 1;\n  }\n\n  &[data-resizing] {\n    pointer-events: none;\n  }\n`\n", "import {PANE_DEFAULT_MIN_WIDTH} from '../constants'\nimport {type PaneConfigOpts, type PaneResizeCache} from '../types'\n\nexport function _calcPaneResize(\n  cache: PaneResizeCache,\n  left: PaneConfigOpts,\n  right: PaneConfigOpts,\n  deltaX: number,\n): {leftFlex: number; leftW: number; rightFlex: number; rightW: number} {\n  const sum = {\n    flex: cache.left.flex + cache.right.flex,\n    width: cache.left.width + cache.right.width,\n  }\n\n  const leftMinWidth = left.minWidth ?? PANE_DEFAULT_MIN_WIDTH\n  const rightMinWidth = right.minWidth ?? PANE_DEFAULT_MIN_WIDTH\n\n  const leftMaxWidth = Math.min(left.maxWidth || Infinity, sum.width - rightMinWidth)\n  const rightMaxWidth = Math.min(right.maxWidth || Infinity, sum.width - leftMinWidth)\n\n  // Get min. delta X\n  let minDeltaX = leftMinWidth - cache.left.width\n  const rightMinDeltaX = cache.right.width - rightMaxWidth\n  if (minDeltaX < rightMinDeltaX) {\n    minDeltaX = rightMinDeltaX\n  }\n\n  // Get max. delta X\n  let maxDeltaX = cache.right.width - rightMinWidth\n  const leftMaxDeltaX = leftMaxWidth - cache.left.width\n  if (maxDeltaX > leftMaxDeltaX) {\n    maxDeltaX = leftMaxDeltaX\n  }\n\n  const _deltaX = Math.min(Math.max(deltaX, minDeltaX), maxDeltaX)\n\n  const leftW = cache.left.width + _deltaX\n  const rightW = cache.right.width - _deltaX\n\n  const leftFlex = (leftW / sum.width) * sum.flex\n  const rightFlex = (rightW / sum.width) * sum.flex\n\n  return {leftFlex, leftW, rightFlex, rightW}\n}\n", "/**\n * @internal\n */\nexport function _getDOMPath(rootElement: HTMLElement, el: HTMLElement): number[] {\n  const path: number[] = []\n\n  let e = el\n\n  while (e !== rootElement) {\n    const parentElement = e.parentElement\n\n    if (!parentElement) return path\n\n    const children = Array.from(parentElement.childNodes)\n    const index = children.indexOf(e)\n\n    path.unshift(index)\n\n    if (parentElement === rootElement) {\n      return path\n    }\n\n    e = parentElement\n  }\n\n  return path\n}\n", "import {_getDOMPath} from './_getDOMPath'\n\nconst EMPTY_PATH: number[] = []\n\n/**\n * @internal\n */\nexport function _sortElements(rootElement: HTMLElement, elements: HTMLElement[]): void {\n  // Create a map containing the DOM path of each pane element.\n  // The DOM path is relative to the `rootElement`, and is used in the next step for sorting.\n  const map = new WeakMap<HTMLElement, number[]>()\n\n  for (const element of elements) {\n    map.set(element, _getDOMPath(rootElement, element))\n  }\n\n  const _sortByElementPath = (a: HTMLElement, b: HTMLElement) => {\n    const _a = map.get(a) || EMPTY_PATH\n    const _b = map.get(b) || EMPTY_PATH\n\n    const len = Math.max(_a.length, _b.length)\n\n    // Loop until there are different indexes\n    for (let i = 0; i < len; i += 1) {\n      const aIndex = _a[i] || -1\n      const bIndex = _b[i] || -1\n\n      if (aIndex !== bIndex) {\n        return aIndex - bIndex\n      }\n    }\n\n    return 0\n  }\n\n  elements.sort(_sortByElementPath)\n}\n", "import {PANE_COLLAPSED_WIDTH, PANE_DEFAULT_MIN_WIDTH} from './constants'\nimport {_calcPaneResize, _sortElements} from './helpers'\nimport {\n  type PaneConfigOpts,\n  type PaneData,\n  type PaneResizeCache,\n  type PaneResizeData,\n} from './types'\n\nexport interface PaneLayoutState {\n  expandedElement: HTMLElement | null\n  panes: PaneData[]\n  resizing: boolean\n}\n\nexport type PaneLayoutStateObserver = (state: PaneLayoutState) => void\n\nexport interface PaneLayoutController {\n  collapse: (element: HTMLElement) => void\n  expand: (element: HTMLElement) => void\n  mount: (element: HTMLElement, options: PaneConfigOpts) => () => void\n  resize: (type: 'start' | 'move' | 'end', leftElement: HTMLElement, deltaX: number) => void\n  setRootElement: (nextRootElement: HTMLElement | null) => void\n  setRootWidth: (nextRootWidth: number) => void\n  subscribe: (observer: PaneLayoutStateObserver) => () => void\n}\n\nexport function createPaneLayoutController(): PaneLayoutController {\n  const observers: PaneLayoutStateObserver[] = []\n  const elements: HTMLElement[] = []\n  const optionsMap = new WeakMap<HTMLElement, PaneConfigOpts & {original: PaneConfigOpts}>()\n  const userCollapsedElementSet = new Set<HTMLElement>()\n  const cache: Partial<PaneResizeCache> = {}\n\n  // Mutable internal state\n  let rootElement: HTMLElement | null = null\n  let rootWidth = 0\n  let expandedElement: HTMLElement | null = null\n  let resizeDataMap = new Map<HTMLElement, PaneResizeData>()\n  let resizing = false\n\n  function collapse(element: HTMLElement) {\n    userCollapsedElementSet.add(element)\n\n    if (expandedElement === element) {\n      expandedElement = null\n    }\n\n    _notifyObservers()\n  }\n\n  function expand(element: HTMLElement) {\n    userCollapsedElementSet.delete(element)\n\n    expandedElement = element\n\n    _notifyObservers()\n  }\n\n  function mount(element: HTMLElement, options: PaneConfigOpts) {\n    optionsMap.set(element, {...options, original: options})\n\n    elements.push(element)\n\n    if (rootElement) {\n      _sortElements(rootElement, elements)\n    }\n\n    expand(element)\n\n    return () => {\n      const idx = elements.indexOf(element)\n\n      if (idx > -1) {\n        elements.splice(idx, 1)\n      }\n\n      optionsMap.delete(element)\n\n      _notifyObservers()\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  function resize(type: 'start' | 'move' | 'end', leftElement: HTMLElement, deltaX: number) {\n    const leftIndex = elements.indexOf(leftElement)\n    const leftOptions = optionsMap.get(leftElement)\n\n    if (!leftOptions) return\n\n    const rightElement = elements[leftIndex + 1]\n    const rightOptions = optionsMap.get(rightElement)\n\n    if (!rightOptions) return\n\n    if (type === 'start') {\n      resizing = true\n\n      cache.left = {\n        element: leftElement,\n        flex: leftOptions.flex || 1,\n        width: leftElement.offsetWidth,\n      }\n\n      cache.right = {\n        element: rightElement,\n        flex: rightOptions.flex || 1,\n        width: rightElement.offsetWidth,\n      }\n\n      _notifyObservers()\n    }\n\n    if (type === 'move' && cache.left && cache.right) {\n      resizeDataMap = new Map<HTMLElement, PaneResizeData>()\n\n      const {leftW, rightW, leftFlex, rightFlex} = _calcPaneResize(\n        cache as PaneResizeCache,\n        leftOptions,\n        rightOptions,\n        deltaX,\n      )\n\n      // update resize cache\n      resizeDataMap.set(leftElement, {flex: leftFlex, width: leftW})\n      resizeDataMap.set(rightElement, {flex: rightFlex, width: rightW})\n\n      _notifyObservers()\n    }\n\n    if (type === 'end') {\n      resizing = false\n\n      const leftResizeData = resizeDataMap.get(leftElement)\n      const rightResizeData = resizeDataMap.get(rightElement)\n\n      // Update left options\n      optionsMap.set(leftElement, {\n        ...leftOptions,\n        currentMinWidth: 0,\n        currentMaxWidth: leftOptions.maxWidth ?? Infinity,\n        flex: leftResizeData?.flex ?? leftOptions.flex,\n      })\n\n      // Update right options\n      optionsMap.set(rightElement, {\n        ...rightOptions,\n        currentMinWidth: 0,\n        currentMaxWidth: leftOptions.maxWidth ?? Infinity,\n        flex: rightResizeData?.flex ?? rightOptions.flex,\n      })\n\n      // Reset resize data map\n      resizeDataMap = new Map()\n\n      // Reset cache\n      delete cache.left\n      delete cache.right\n\n      _notifyObservers()\n    }\n  }\n\n  function setRootElement(nextRootElement: HTMLElement | null) {\n    rootElement = nextRootElement\n  }\n\n  function setRootWidth(nextRootWidth: number) {\n    rootWidth = nextRootWidth\n    _notifyObservers()\n  }\n\n  function subscribe(observer: PaneLayoutStateObserver) {\n    observers.push(observer)\n\n    return () => {\n      const idx = observers.push(observer)\n\n      if (idx > -1) {\n        observers.splice(idx, 1)\n      }\n    }\n  }\n\n  return {collapse, expand, mount, resize, setRootElement, setRootWidth, subscribe}\n\n  // eslint-disable-next-line complexity\n  function _notifyObservers() {\n    if (!rootWidth) return\n\n    // Create a reversed array of pane elements, so we can loop over them backwards.\n    // Place the expanded element first (so it has the least chance of being collapsed).\n    const _elements: HTMLElement[] = []\n    for (const element of elements) {\n      if (element !== expandedElement) {\n        _elements.unshift(element)\n      }\n    }\n    if (expandedElement) {\n      _elements.unshift(expandedElement)\n    }\n\n    const dataMap = new WeakMap<HTMLElement, PaneData>()\n    const len = _elements.length\n    const lastElement = _elements[0]\n    const collapsedWidth = (len - 1) * PANE_COLLAPSED_WIDTH\n\n    let remaingWidth = rootWidth - collapsedWidth\n\n    for (const element of _elements) {\n      const options = optionsMap.get(element)\n\n      if (!options) {\n        continue\n      }\n\n      const minWidth = options.currentMinWidth || options.minWidth || PANE_DEFAULT_MIN_WIDTH\n      const isLast = element === lastElement\n\n      // A pane is collapsed if:\n      // - it’s explictly collapsed by the user\n      const userCollapsed = userCollapsedElementSet.has(element)\n      // - it’s minimum width is larger than the remaining width\n      const sizeCollapsed = minWidth > remaingWidth\n      // - if the element is not the last (expanded pane)\n      const collapsed = isLast ? false : userCollapsed || sizeCollapsed\n\n      const resizeData = resizeDataMap.get(element)\n\n      // Collect pane data\n      dataMap.set(element, {\n        element: element,\n        collapsed: collapsed,\n        currentMinWidth: resizeData?.width ?? options.currentMinWidth,\n        currentMaxWidth: resizeData?.width ?? options.currentMaxWidth,\n        flex: resizeData?.flex ?? options.flex ?? 1,\n      })\n\n      // Update remaining width\n      if (collapsed) {\n        remaingWidth -= PANE_COLLAPSED_WIDTH\n      } else {\n        remaingWidth -= minWidth - PANE_COLLAPSED_WIDTH\n      }\n    }\n\n    const panes: PaneData[] = []\n\n    for (const element of elements) {\n      const data = dataMap.get(element)\n\n      if (data) panes.push(data)\n    }\n\n    for (const observer of observers) {\n      observer({\n        expandedElement: expandedElement || elements[elements.length - 1] || null,\n        panes,\n        resizing,\n      })\n    }\n  }\n}\n", "import {type CardProps, useElementRect} from '@sanity/ui'\nimport {type HTMLProps, useEffect, useMemo, useState} from 'react'\nimport {PaneLayoutContext} from 'sanity/_singletons'\n\nimport {Root} from './PaneLayout.styles'\nimport {createPaneLayoutController, type PaneLayoutState} from './paneLayoutController'\nimport {type PaneLayoutContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport interface PaneLayoutProps {\n  minWidth?: number\n  onCollapse?: () => void\n  onExpand?: () => void\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneLayout(\n  props: PaneLayoutProps &\n    CardProps &\n    Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref' | 'wrap'>,\n) {\n  const {children, minWidth, onCollapse, onExpand, ...restProps} = props\n  const controller = useMemo(() => createPaneLayoutController(), [])\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const rootRect = useElementRect(rootElement)\n  const width = rootRect?.width || 0\n  const collapsed = width === undefined || !minWidth ? undefined : width < minWidth\n  const [state, setState] = useState<PaneLayoutState>({\n    expandedElement: null,\n    panes: [],\n    resizing: false,\n  })\n\n  // Set root element\n  useEffect(() => controller.setRootElement(rootElement), [controller, rootElement])\n\n  // Set root size\n  useEffect(() => controller.setRootWidth(width), [controller, width])\n\n  // Subscribe to state changes\n  useEffect(() => controller.subscribe(setState), [controller])\n\n  // Call the `onCollapse` and `onExpand` callbacks as the `collapsed` boolean changes\n  useEffect(() => {\n    if (collapsed === undefined) return\n    if (collapsed && onCollapse) onCollapse()\n    if (!collapsed && onExpand) onExpand()\n  }, [collapsed, onCollapse, onExpand])\n\n  // This is the context value that gives each pane the information they need\n  const paneLayout: PaneLayoutContextValue = useMemo(\n    () => ({\n      collapse: controller.collapse,\n      collapsed,\n      expand: controller.expand,\n      expandedElement: state.expandedElement,\n      mount: controller.mount,\n      panes: state.panes,\n      resize: controller.resize,\n      resizing: state.resizing,\n    }),\n    [collapsed, controller, state.expandedElement, state.panes, state.resizing],\n  )\n\n  return (\n    <PaneLayoutContext.Provider value={paneLayout}>\n      <Root\n        data-ui=\"PaneLayout\"\n        {...restProps}\n        data-collapsed={collapsed ? '' : undefined}\n        // The `data-resizing` attribute is used to improve cursor behavior\n        data-resizing={state.resizing ? '' : undefined}\n        // The `data-mounted` attribute is used to fade in the layout and prevent flash of\n        // non-collapsed panes\n        data-mounted={width ? '' : undefined}\n        ref={setRootElement}\n      >\n        {children}\n      </Root>\n    </PaneLayoutContext.Provider>\n  )\n}\n", "/* eslint-disable camelcase */\n\nimport {negate} from 'lodash'\n\nimport {type _PaneMenuGroup, type _PaneMenuItem, type _PaneMenuNode} from './components/pane/types'\nimport {type DocumentFieldMenuActionNode, type PaneMenuItem, type PaneMenuItemGroup} from './types'\n\nexport function isMenuNodeButton(node: _PaneMenuNode): node is _PaneMenuItem | _PaneMenuGroup {\n  return (node.type === 'item' || node.type === 'group') && node.renderAsButton\n}\n\nexport const isNotMenuNodeButton = negate(isMenuNodeButton)\n\nexport function resolveMenuNodes(params: {\n  actionHandler: (item: PaneMenuItem) => void\n  fieldActions?: DocumentFieldMenuActionNode[]\n  menuItems: PaneMenuItem[]\n  menuItemGroups: PaneMenuItemGroup[]\n}): _PaneMenuNode[] {\n  const {fieldActions = [], menuItems, menuItemGroups} = params\n\n  const nodes: _PaneMenuNode[] = []\n\n  let keyOffset = 0\n\n  for (let i = 0; i < fieldActions.length; i += 1) {\n    const a = fieldActions[i]\n\n    nodes.push(mapFieldActionToPaneMenuNode(a, `${i}-${a.type}`))\n  }\n\n  keyOffset += nodes.length\n\n  const groups: _PaneMenuGroup[] = []\n\n  for (const itemGroup of menuItemGroups) {\n    const group = groups.find((g) => g.key === itemGroup.id)\n\n    if (!group) {\n      groups.push({\n        type: 'group',\n        key: itemGroup.id,\n\n        children: [],\n        expanded: true,\n        renderAsButton: false,\n        title: itemGroup.title,\n        i18n: itemGroup.i18n,\n      })\n    }\n  }\n\n  const ungroupedItems: _PaneMenuItem[] = []\n\n  for (let i = 0; i < menuItems.length; i += 1) {\n    const item = menuItems[i]\n\n    let group = item.group && groups.find((g) => g.key === item.group)\n\n    if (item.group && !group) {\n      group = {\n        type: 'group',\n        key: item.group,\n\n        expanded: true,\n        icon: item.icon,\n        title: item.group,\n        children: [],\n        renderAsButton: false,\n      }\n      groups.push(group)\n    }\n\n    if (group) {\n      group.children.push({\n        type: 'item',\n        key: `${keyOffset + i}-item`,\n\n        hotkey: item.shortcut,\n        icon: item.icon,\n        intent: item.intent,\n        onAction: () => params.actionHandler(item),\n        renderAsButton: item.showAsAction ?? false,\n        selected: item.selected,\n        title: item.title,\n        i18n: item.i18n,\n        tone: item.tone,\n      })\n    } else {\n      ungroupedItems.push({\n        type: 'item',\n        key: `${keyOffset + i}-item`,\n\n        hotkey: item.shortcut,\n        icon: item.icon,\n        intent: item.intent,\n        onAction: () => params.actionHandler(item),\n        renderAsButton: item.showAsAction ?? false,\n        selected: item.selected,\n        title: item.title,\n        i18n: item.i18n,\n        tone: item.tone,\n      })\n    }\n  }\n\n  return [...ungroupedItems, ...groups, ...nodes]\n}\n\nfunction mapFieldActionToPaneMenuNode(a: DocumentFieldMenuActionNode, key: string): _PaneMenuNode {\n  if (a.type === 'divider') {\n    return {\n      type: 'divider',\n      key,\n    }\n  }\n\n  if (a.type === 'group') {\n    return {\n      type: 'group',\n      key,\n\n      children: a.children.map((child, childIdx) =>\n        mapFieldActionToPaneMenuNode(child, `${key}-${childIdx}-${child.type}`),\n      ),\n      disabled: a.disabled,\n      expanded: a.expanded ?? true,\n      icon: a.icon,\n      title: a.title,\n      i18n: a.i18n,\n      renderAsButton: a.renderAsButton ?? false,\n    }\n  }\n\n  return {\n    type: 'item',\n    key,\n    intent: a.intent,\n    disabled: a.disabled,\n    icon: a.icon,\n    iconRight: a.iconRight,\n    onAction: a.onAction,\n    renderAsButton: a.renderAsButton ?? false,\n    selected: a.selected,\n    title: a.title,\n    i18n: a.i18n,\n    tone: a.tone,\n  }\n}\n", "import {type ComponentProps, type ForwardedRef, forwardRef, type ReactNode, useMemo} from 'react'\nimport {IntentLink} from 'sanity/router'\n\nimport {Button, type ButtonProps} from '../../ui-components'\nimport {type PaneMenuItem} from '../types'\n\ntype RouterIntent = NonNullable<PaneMenuItem['intent']>\n\nexport const IntentButton = forwardRef(function IntentButton(\n  props: {\n    intent: RouterIntent\n  } & ButtonProps &\n    Omit<ComponentProps<typeof Button>, 'as' | 'href' | 'type'>,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {intent, ...restProps} = props\n\n  const Link = useMemo(\n    () =>\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      forwardRef(function Link(\n        linkProps: {children: ReactNode},\n        linkRef: ForwardedRef<HTMLAnchorElement>,\n      ) {\n        return (\n          <IntentLink {...linkProps} intent={intent.type} params={intent.params} ref={linkRef} />\n        )\n      }),\n    [intent],\n  )\n\n  return props.disabled ? (\n    <Button {...restProps} as=\"a\" role=\"link\" aria-disabled=\"true\" />\n  ) : (\n    <Button {...restProps} as={Link} data-as=\"a\" ref={ref as ForwardedRef<HTMLButtonElement>} />\n  )\n})\n", "import {type ComponentProps, type ReactNode} from 'react'\nimport {InsufficientPermissionsMessage, useCurrentUser, useTranslation} from 'sanity'\n\nimport {Tooltip} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\n\ninterface InsufficientPermissionsMessageTooltipProps {\n  reveal: boolean\n  /**\n   * delegates to `InsufficientPermissionsMessage`'s `context` prop\n   * @see InsufficientPermissionsMessage\n   */\n  context: ComponentProps<typeof InsufficientPermissionsMessage>['context']\n  loading: boolean\n  children: ReactNode\n}\n\nexport function InsufficientPermissionsMessageTooltip({\n  reveal,\n  context,\n  loading,\n  children,\n}: InsufficientPermissionsMessageTooltipProps) {\n  const currentUser = useCurrentUser()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (!reveal) {\n    return <>{children}</>\n  }\n\n  return (\n    <Tooltip\n      content={\n        loading ? (\n          t('insufficient-permissions-message-tooltip.loading-text')\n        ) : (\n          <InsufficientPermissionsMessage context={context} currentUser={currentUser} />\n        )\n      }\n      portal\n    >\n      {/* this wrapping div is to allow mouse events */}\n      {/* while the child element is disabled */}\n      <div>{children}</div>\n    </Tooltip>\n  )\n}\n", "import {AddIcon} from '@sanity/icons'\nimport {type Schema} from '@sanity/types'\nimport {Menu} from '@sanity/ui'\nimport {type ComponentProps, type ForwardedRef, forwardRef, useMemo} from 'react'\nimport {\n  type InitialValueTemplateItem,\n  type Template,\n  type TemplatePermissionsResult,\n  useGetI18nText,\n  useSchema,\n  useTemplatePermissions,\n  useTemplates,\n  useTranslation,\n} from 'sanity'\nimport {IntentLink} from 'sanity/router'\n\nimport {Button, MenuButton, MenuItem, type PopoverProps} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {IntentButton} from '../IntentButton'\nimport {InsufficientPermissionsMessageTooltip} from './InsufficientPermissionsMessageTooltip'\n\nexport type PaneHeaderIntentProps = ComponentProps<typeof IntentButton>['intent']\n\nconst POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'bottom',\n  portal: true,\n}\n\nconst getIntent = (\n  schema: Schema,\n  templates: Template[],\n  item: InitialValueTemplateItem,\n): PaneHeaderIntentProps | null => {\n  const typeName = templates.find((t) => t.id === item.templateId)?.schemaType\n  if (!typeName) return null\n\n  const baseParams = {\n    template: item.templateId,\n    type: typeName,\n    id: item.initialDocumentId,\n  }\n\n  return {\n    type: 'create',\n    params: item.parameters ? [baseParams, item.parameters] : baseParams,\n  }\n}\n\ninterface PaneHeaderCreateButtonProps {\n  templateItems: InitialValueTemplateItem[]\n}\n\nexport function PaneHeaderCreateButton({templateItems}: PaneHeaderCreateButtonProps) {\n  const schema = useSchema()\n  const templates = useTemplates()\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const getI18nText = useGetI18nText([...templateItems, ...templates])\n\n  const [templatePermissions, isTemplatePermissionsLoading] = useTemplatePermissions({\n    templateItems,\n  })\n\n  const nothingGranted = useMemo(() => {\n    return (\n      !isTemplatePermissionsLoading &&\n      templatePermissions?.every((permission) => !permission.granted)\n    )\n  }, [isTemplatePermissionsLoading, templatePermissions])\n\n  const permissionsById = useMemo(() => {\n    if (!templatePermissions) return {}\n    return templatePermissions.reduce<Record<string, TemplatePermissionsResult | undefined>>(\n      (acc, permission) => {\n        acc[permission.id] = permission\n        return acc\n      },\n      {},\n    )\n  }, [templatePermissions])\n\n  if (nothingGranted) {\n    return (\n      <InsufficientPermissionsMessageTooltip\n        context=\"create-document-type\"\n        reveal\n        loading={isTemplatePermissionsLoading}\n      >\n        <Button\n          aria-label={t('pane-header.disabled-created-button.aria-label')}\n          icon={AddIcon}\n          data-testid=\"action-intent-button\"\n          disabled\n          mode=\"bleed\"\n          // This button handles the tooltip in a special way, won't reuse the forced tooltip.\n          tooltipProps={null}\n        />\n      </InsufficientPermissionsMessageTooltip>\n    )\n  }\n\n  if (templateItems.length === 1) {\n    const firstItem = templateItems[0]\n    const permissions = permissionsById[firstItem.id]\n    const disabled = !permissions?.granted\n    const intent = getIntent(schema, templates, firstItem)\n    if (!intent) return null\n\n    return (\n      <InsufficientPermissionsMessageTooltip\n        reveal={disabled}\n        loading={isTemplatePermissionsLoading}\n        context=\"create-document-type\"\n      >\n        <IntentButton\n          aria-label={getI18nText(firstItem).title}\n          icon={firstItem.icon || AddIcon}\n          intent={intent}\n          mode=\"bleed\"\n          disabled={disabled}\n          data-testid=\"action-intent-button\"\n          tooltipProps={disabled ? null : {content: t('pane-header.create-new-button.tooltip')}}\n        />\n      </InsufficientPermissionsMessageTooltip>\n    )\n  }\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          icon={AddIcon}\n          mode=\"bleed\"\n          data-testid=\"multi-action-intent-button\"\n          tooltipProps={{content: t('pane-header.create-new-button.tooltip')}}\n        />\n      }\n      id=\"create-menu\"\n      menu={\n        <Menu>\n          {templateItems.map((item, itemIndex) => {\n            const permissions = permissionsById[item.id]\n            const disabled = !permissions?.granted\n            const intent = getIntent(schema, templates, item)\n            const template = templates.find((i) => i.id === item.templateId)\n            if (!template || !intent) return null\n\n            const Link = forwardRef((linkProps, linkRef: ForwardedRef<never>) =>\n              disabled ? (\n                <button type=\"button\" disabled {...linkProps} ref={linkRef} />\n              ) : (\n                <IntentLink\n                  {...linkProps}\n                  intent={intent.type}\n                  params={intent.params}\n                  ref={linkRef}\n                />\n              ),\n            )\n\n            Link.displayName = 'Link'\n\n            const {title} = getI18nText({\n              ...item,\n              // replace the title with the template title\n              title: item.title || getI18nText(template).title,\n            })\n\n            return (\n              <InsufficientPermissionsMessageTooltip\n                context=\"create-document-type\"\n                key={item.id}\n                reveal={disabled}\n                loading={isTemplatePermissionsLoading}\n              >\n                <MenuItem\n                  as={Link}\n                  data-as={disabled ? 'button' : 'a'}\n                  text={title}\n                  aria-label={\n                    disabled ? t('pane-header.disabled-created-button.aria-label') : title\n                  }\n                  disabled={disabled}\n                  data-testid={`action-intent-button-${itemIndex}`}\n                />\n              </InsufficientPermissionsMessageTooltip>\n            )\n          })}\n        </Menu>\n      }\n      popover={POPOVER_PROPS}\n    />\n  )\n}\n", "import {Flex} from '@sanity/ui'\nimport {uniqBy} from 'lodash'\nimport {memo, useCallback, useMemo} from 'react'\nimport {EMPTY_ARRAY, EMPTY_OBJECT, type InitialValueTemplateItem, useTemplates} from 'sanity'\n\nimport {isMenuNodeButton, isNotMenuNodeButton, resolveMenuNodes} from '../../menuNodes'\nimport {\n  type PaneMenuItem,\n  type PaneMenuItemGroup,\n  type StructureToolPaneActionHandler,\n} from '../../types'\nimport {PaneContextMenuButton} from '../pane/PaneContextMenuButton'\nimport {PaneHeaderActionButton} from '../pane/PaneHeaderActionButton'\nimport {PaneHeaderCreateButton} from './PaneHeaderCreateButton'\n\nfunction isNonNullable<T>(value: T): value is NonNullable<T> {\n  return value !== null && value !== undefined\n}\n\n/**\n * hashes an object to a string where the order of the keys don't matter\n */\nconst hashObject = (value: unknown) => {\n  const sortObject = (v: unknown): unknown => {\n    if (typeof v !== 'object' || !v) return v\n    if (Array.isArray(v)) return v.map(sortObject)\n    return Object.entries(v).sort(([keyA], [keyB]) => keyA.localeCompare(keyB, 'en'))\n  }\n\n  const normalize = (v: unknown) => JSON.parse(JSON.stringify(v))\n\n  return JSON.stringify(sortObject(normalize(value)))\n}\n\ninterface PaneHeaderActionsProps {\n  initialValueTemplateItems?: InitialValueTemplateItem[]\n  menuItems?: PaneMenuItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  actionHandlers?: Record<string, StructureToolPaneActionHandler>\n}\n\nexport const PaneHeaderActions = memo(function PaneHeaderActions(props: PaneHeaderActionsProps) {\n  const {\n    initialValueTemplateItems: initialValueTemplateItemsFromStructure = EMPTY_ARRAY,\n    menuItems = EMPTY_ARRAY,\n    menuItemGroups = EMPTY_ARRAY,\n    actionHandlers = EMPTY_OBJECT as Record<string, StructureToolPaneActionHandler>,\n  } = props\n\n  const templates = useTemplates()\n\n  const handleAction = useCallback(\n    (item: PaneMenuItem) => {\n      if (typeof item.action === 'string' && !(item.action in actionHandlers)) {\n        console.warn('No handler for action:', item.action)\n        return false\n      }\n\n      const handler =\n        // eslint-disable-next-line no-nested-ternary\n        typeof item.action === 'function'\n          ? item.action\n          : typeof item.action === 'string'\n            ? actionHandlers[item.action]\n            : null\n\n      if (handler) {\n        handler(item.params as Record<string, string>)\n        return true\n      }\n\n      return false\n    },\n    [actionHandlers],\n  )\n\n  const menuNodes = useMemo(\n    () =>\n      resolveMenuNodes({\n        actionHandler: handleAction,\n        menuItemGroups,\n        menuItems: menuItems\n          // remove items with `create` intents because those will get combined\n          // into one action button (see `initialValueTemplateItemFromMenuItems`)\n          .filter((item) => item.intent?.type !== 'create'),\n      }),\n    [handleAction, menuItemGroups, menuItems],\n  )\n\n  const actionNodes = useMemo(() => menuNodes.filter(isMenuNodeButton), [menuNodes])\n  const contextMenuNodes = useMemo(() => menuNodes.filter(isNotMenuNodeButton), [menuNodes])\n\n  const initialValueTemplateItemFromMenuItems = useMemo(() => {\n    return menuItems\n      .map((item, menuItemIndex) => {\n        if (item.intent?.type !== 'create') return null\n\n        const {params} = item.intent\n        if (!params) return null\n\n        const intentParams = Array.isArray(params) ? params[0] : params\n        const templateParams = Array.isArray(params) ? params[1] : undefined\n\n        // fallback to the schema type name as the template ID.\n        // by default, the initial template values are populated from every\n        // document type in the schema\n        const templateId = intentParams.template || intentParams.type\n        if (!templateId) return null\n\n        // eslint-disable-next-line max-nested-callbacks\n        const template = templates.find((t) => t.id === templateId)\n        // the template doesn't exist then the action might be disabled\n        if (!template) return null\n\n        const initialDocumentId = intentParams.id\n\n        return {\n          item,\n          template,\n          templateParams,\n          menuItemIndex,\n          initialDocumentId,\n        }\n      })\n      .filter(isNonNullable)\n      .map(({initialDocumentId, item, template, menuItemIndex, templateParams}) => {\n        const initialValueTemplateItem: InitialValueTemplateItem = {\n          id: `menuItem${menuItemIndex}`,\n          initialDocumentId,\n          templateId: template.id,\n          type: 'initialValueTemplateItem',\n          title: item.title || template.title,\n          i18n: item.i18n || template.i18n,\n          icon: item.icon as InitialValueTemplateItem['icon'],\n          description: template.description,\n          parameters: templateParams,\n          schemaType: template.schemaType,\n        }\n\n        return initialValueTemplateItem\n      })\n  }, [menuItems, templates])\n\n  const combinedInitialValueTemplates = useMemo(() => {\n    // this de-dupes create actions\n    return uniqBy(\n      [...initialValueTemplateItemFromMenuItems, ...initialValueTemplateItemsFromStructure],\n      (item) => hashObject([item.initialDocumentId, item.templateId, item.parameters]),\n    )\n  }, [initialValueTemplateItemFromMenuItems, initialValueTemplateItemsFromStructure])\n\n  return (\n    <Flex gap={1}>\n      {combinedInitialValueTemplates.length > 0 && (\n        <PaneHeaderCreateButton templateItems={combinedInitialValueTemplates} />\n      )}\n\n      {actionNodes.map((node) => (\n        <PaneHeaderActionButton key={node.key} node={node} />\n      ))}\n\n      {contextMenuNodes.length > 0 && <PaneContextMenuButton nodes={contextMenuNodes} />}\n    </Flex>\n  )\n})\n", "import {WarningOutlineIcon} from '@sanity/icons'\nimport {type SanityDocument} from '@sanity/types'\nimport {type GeneralPreviewLayoutKey, SanityDefaultPreview, Translate, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\n\nexport interface MissingSchemaTypeProps {\n  layout?: GeneralPreviewLayoutKey\n  value: SanityDocument\n}\n\nexport function MissingSchemaType(props: MissingSchemaTypeProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {layout, value} = props\n\n  return (\n    <SanityDefaultPreview\n      title={\n        <em>\n          <Translate\n            t={t}\n            i18nKey=\"pane-item.missing-schema-type.title\"\n            components={{Code: 'code'}}\n            values={{documentType: value._type}}\n          />\n        </em>\n      }\n      subtitle={\n        <Translate\n          t={t}\n          i18nKey=\"pane-item.missing-schema-type.subtitle\"\n          components={{Code: 'code'}}\n          values={{documentId: value._id}}\n        />\n      }\n      // eslint-disable-next-line react/jsx-no-bind\n      media={() => <WarningOutlineIcon />}\n      layout={layout}\n    />\n  )\n}\n", "import {ChevronRightIcon, DocumentIcon, FolderIcon} from '@sanity/icons'\nimport {\n  isSanityDocument,\n  type PreviewValue,\n  type SanityDocument,\n  type SchemaType,\n} from '@sanity/types'\nimport {Box, type CardProps, Text} from '@sanity/ui'\nimport {\n  type ComponentType,\n  type MouseEvent,\n  type ReactNode,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react'\nimport {\n  type FIXME,\n  type GeneralPreviewLayoutKey,\n  PreviewCard,\n  SanityDefaultPreview,\n  useDocumentPresence,\n  useDocumentPreviewStore,\n  useSchema,\n} from 'sanity'\n\nimport {MissingSchemaType} from '../MissingSchemaType'\nimport {usePaneRouter} from '../paneRouter'\nimport {PaneItemPreview} from './PaneItemPreview'\n\ninterface PaneItemProps {\n  id: string\n  layout?: GeneralPreviewLayoutKey\n  icon?: ComponentType<any> | false\n  pressed?: boolean\n  selected?: boolean\n  title?: string\n  value?: PreviewValue | SanityDocument\n  schemaType?: SchemaType\n  margin?: CardProps['margin']\n  marginBottom?: CardProps['marginBottom']\n  marginTop?: CardProps['marginTop']\n}\n\n/**\n * Return `false` if we explicitly disable the icon.\n * Otherwise return the passed icon or the schema type icon as a backup.\n */\nexport function getIconWithFallback(\n  icon: ComponentType<any> | false | undefined,\n  schemaType: SchemaType | undefined,\n  defaultIcon: ComponentType<any>,\n): ComponentType<any> | false {\n  if (icon === false) {\n    return false\n  }\n\n  return icon || (schemaType && schemaType.icon) || defaultIcon || false\n}\n\nexport function PaneItem(props: PaneItemProps) {\n  const {\n    icon,\n    id,\n    layout = 'default',\n    pressed,\n    schemaType,\n    selected,\n    title,\n    value,\n    margin,\n    marginBottom,\n    marginTop,\n  } = props\n  const schema = useSchema()\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {ChildLink} = usePaneRouter()\n  const documentPresence = useDocumentPresence(id)\n  const hasSchemaType = Boolean(schemaType && schemaType.name && schema.get(schemaType.name))\n  const [clicked, setClicked] = useState<boolean>(false)\n\n  const preview = useMemo(() => {\n    if (value && isSanityDocument(value)) {\n      if (!schemaType || !hasSchemaType) {\n        return <MissingSchemaType value={value} />\n      }\n\n      return (\n        <PaneItemPreview\n          documentPreviewStore={documentPreviewStore}\n          icon={getIconWithFallback(icon, schemaType, DocumentIcon)}\n          layout={layout}\n          schemaType={schemaType}\n          value={value}\n          presence={documentPresence}\n        />\n      )\n    }\n\n    // Always render non-document values as compact previews\n    return (\n      <SanityDefaultPreview\n        status={\n          <Box style={{opacity: 0.5}}>\n            <Text muted size={1}>\n              <ChevronRightIcon />\n            </Text>\n          </Box>\n        }\n        icon={getIconWithFallback(icon, schemaType, FolderIcon)}\n        layout=\"compact\"\n        title={title}\n      />\n    )\n  }, [\n    documentPreviewStore,\n    hasSchemaType,\n    icon,\n    layout,\n    schemaType,\n    title,\n    value,\n    documentPresence,\n  ])\n\n  const Link = useMemo(\n    () =>\n      function LinkComponent(linkProps: {children: ReactNode}) {\n        return <ChildLink {...linkProps} childId={id} />\n      },\n    [ChildLink, id],\n  )\n\n  const handleClick = useCallback((e: MouseEvent<HTMLElement>) => {\n    if (e.metaKey) {\n      setClicked(false)\n      return\n    }\n\n    setClicked(true)\n  }, [])\n\n  // Reset `clicked` state when `selected` prop changes\n  useEffect(() => setClicked(false), [selected])\n\n  return (\n    <PreviewCard\n      data-testid={`pane-item-${title}`}\n      __unstable_focusRing\n      as={Link as FIXME}\n      data-as=\"a\"\n      margin={margin}\n      marginBottom={marginBottom}\n      marginTop={marginTop}\n      onClick={handleClick}\n      pressed={pressed}\n      radius={2}\n      selected={selected || clicked}\n      sizing=\"border\"\n      tabIndex={-1}\n      tone=\"inherit\"\n    >\n      {preview}\n    </PreviewCard>\n  )\n}\n", "import {type ReactNode} from 'react'\nimport {\n  type DocumentActionDescription,\n  type DocumentActionGroup,\n  type DocumentActionProps,\n  GetHookCollectionState,\n} from 'sanity'\n\n/** @internal */\nexport interface Action<Args, Description> {\n  (args: Args): Description | null\n}\n\n/** @internal */\nexport interface RenderActionCollectionProps {\n  actions: Action<DocumentActionProps, DocumentActionDescription>[]\n  actionProps: Omit<DocumentActionProps, 'onComplete'>\n  children: (props: {states: DocumentActionDescription[]}) => ReactNode\n  onActionComplete?: () => void\n  group?: DocumentActionGroup\n}\n\n/** @internal */\nexport const RenderActionCollectionState = (props: RenderActionCollectionProps) => {\n  const {actions, children, actionProps, onActionComplete, group} = props\n\n  return (\n    <GetHookCollectionState\n      onReset={onActionComplete}\n      hooks={actions}\n      args={actionProps}\n      group={group}\n    >\n      {children}\n    </GetHookCollectionState>\n  )\n}\n", "import {type ReactNode} from 'react'\nimport {\n  type DocumentBadgeDescription,\n  type DocumentBadgeProps,\n  type EditStateFor,\n  GetHookCollectionState,\n} from 'sanity'\n\n/** @internal */\nexport interface Badge<Args, Description> {\n  (args: Args): Description | null\n}\n\n/** @internal */\nexport interface RenderBadgeCollectionProps {\n  badges: Badge<DocumentBadgeProps, DocumentBadgeDescription>[]\n  badgeProps: EditStateFor\n  children: (props: {states: DocumentBadgeDescription[]}) => ReactNode\n  onActionComplete?: () => void\n}\n\n/** @internal */\nexport const RenderBadgeCollectionState = (props: RenderBadgeCollectionProps) => {\n  const {badges, children, badgeProps, ...rest} = props\n\n  return (\n    <GetHookCollectionState {...rest} hooks={badges} args={badgeProps}>\n      {children}\n    </GetHookCollectionState>\n  )\n}\n", "import {Box, type CardTone} from '@sanity/ui'\n\nimport {Pane, PaneContent, PaneHeader} from '../../components/pane'\n\n/**\n * @internal\n */\nexport function ErrorPane(props: {\n  children?: React.ReactNode\n  currentMinWidth?: number\n  flex?: number\n  minWidth?: number\n  paneKey: string\n  title?: React.ReactNode\n  tone?: CardTone\n}) {\n  const {\n    children,\n    currentMinWidth,\n    flex,\n    minWidth,\n    paneKey,\n    title = 'Error',\n    tone = 'critical',\n  } = props\n\n  return (\n    <Pane\n      currentMinWidth={currentMinWidth}\n      flex={flex}\n      id={paneKey}\n      minWidth={minWidth}\n      tone={tone}\n    >\n      <PaneHeader title={title} />\n      <PaneContent overflow=\"auto\">\n        <Box paddingX={4} paddingY={5}>\n          {children}\n        </Box>\n      </PaneContent>\n    </Pane>\n  )\n}\n", "import {merge, type Observable, of} from 'rxjs'\nimport {delay, mapTo} from 'rxjs/operators'\nimport {isDev} from 'sanity'\n\n/**\n * @internal\n */\nexport type WaitMessage = {messageKey: string} | {message: string}\n\n/**\n * @internal\n */\nexport function getWaitMessages(path: string[]): Observable<WaitMessage> {\n  const thresholds: (WaitMessage & {ms: number})[] = [\n    {ms: 300, messageKey: 'panes.resolving.default-message'},\n    {ms: 5000, messageKey: 'panes.resolving.slow-resolve-message'},\n  ]\n\n  if (isDev) {\n    const message = [\n      'Check console for errors?',\n      'Is your observable/promise resolving?',\n      path.length > 0 ? `Structure path: ${path.join(' ➝ ')}` : '',\n    ]\n\n    thresholds.push({\n      ms: 10000,\n      message: message.join('\\n'),\n    })\n  }\n\n  const src = of(null)\n\n  return merge(\n    ...thresholds.map((threshold) =>\n      src.pipe(\n        mapTo(\n          'messageKey' in threshold\n            ? {messageKey: threshold.messageKey}\n            : {message: threshold.message},\n        ),\n        delay(threshold.ms),\n      ),\n    ),\n  )\n}\n", "import {_raf2, type CardTone, Flex} from '@sanity/ui'\nimport {memo, useEffect, useMemo, useState} from 'react'\nimport {type Observable} from 'rxjs'\nimport {LoadingBlock, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Delay} from '../../components/Delay'\nimport {Pane, PaneContent} from '../../components/pane'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {getWaitMessages, type WaitMessage} from './getWaitMessages'\n\ninterface LoadingPaneProps {\n  delay?: number\n  flex?: number\n  message?: string | ((p: string[]) => string | Observable<WaitMessage>)\n  minWidth?: number\n  paneKey: string\n  path?: string\n  selected?: boolean\n  title?: string\n  tone?: CardTone\n}\n\nconst DELAY = false\nconst DEFAULT_MESSAGE_KEY = 'panes.resolving.default-message'\n\nconst Content = styled(Flex)`\n  opacity: 0;\n  transition: opacity 200ms;\n\n  &[data-mounted] {\n    opacity: 1;\n  }\n`\n\n/**\n * @internal\n */\nexport const LoadingPane = memo((props: LoadingPaneProps) => {\n  const {\n    delay = 300,\n    flex,\n    message: messageProp = getWaitMessages,\n    minWidth,\n    paneKey,\n    path,\n    selected,\n    title,\n    tone,\n  } = props\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const resolvedMessage = useMemo(() => {\n    if (typeof messageProp === 'function') {\n      return messageProp(path ? path.split(';') : [])\n    }\n\n    return messageProp\n  }, [messageProp, path])\n\n  const [currentMessage, setCurrentMessage] = useState<string | null>(() => {\n    if (typeof resolvedMessage === 'string') return resolvedMessage\n    return t(DEFAULT_MESSAGE_KEY)\n  })\n\n  useEffect(() => {\n    if (typeof resolvedMessage !== 'object') return undefined\n    if (typeof resolvedMessage.subscribe !== 'function') return undefined\n\n    const sub = resolvedMessage.subscribe((message) => {\n      setCurrentMessage('messageKey' in message ? t(message.messageKey) : message.message)\n    })\n\n    return () => sub.unsubscribe()\n  }, [resolvedMessage, t])\n\n  const [contentElement, setContentElement] = useState<HTMLDivElement | null>(null)\n  const [mounted, setMounted] = useState(false)\n\n  useEffect(() => {\n    if (!contentElement) return undefined\n    return _raf2(() => setMounted(true))\n  }, [contentElement])\n\n  const content = (\n    <Content\n      align=\"center\"\n      data-mounted={mounted ? '' : undefined}\n      direction=\"column\"\n      height=\"fill\"\n      justify=\"center\"\n      ref={setContentElement}\n    >\n      <LoadingBlock showText title={title || currentMessage} />\n    </Content>\n  )\n\n  return (\n    <Pane flex={flex} id={paneKey} minWidth={minWidth} selected={selected} tone={tone}>\n      <PaneContent>{DELAY ? <Delay ms={delay}>{content}</Delay> : content}</PaneContent>\n    </Pane>\n  )\n})\n\nLoadingPane.displayName = 'LoadingPane'\n", "import {useContext} from 'react'\nimport {DocumentPaneContext} from 'sanity/_singletons'\n\nimport {type DocumentPaneContextValue} from './DocumentPaneContext'\n\n/** @internal */\nexport function useDocumentPane(): DocumentPaneContextValue {\n  const documentPane = useContext(DocumentPaneContext)\n\n  if (!documentPane) {\n    throw new Error('DocumentPane: missing context value')\n  }\n\n  return documentPane\n}\n", "import {useCallback, useLayoutEffect, useRef} from 'react'\nimport {\n  COMMENTS_INSPECTOR_NAME,\n  CommentsEnabledProvider,\n  CommentsProvider,\n  useCommentsEnabled,\n} from 'sanity'\nimport {usePaneRouter} from 'sanity/structure'\n\nimport {useDocumentPane} from '../useDocumentPane'\n\ninterface CommentsWrapperProps {\n  children: React.ReactNode\n  documentId: string\n  documentType: string\n}\n\n/**\n * @internal\n * A wrapper that conditionally wraps the document layout in a comments provider\n * if the feature is enabled for the project and the current document.\n */\nexport function CommentsWrapper(props: CommentsWrapperProps) {\n  const {children, documentId, documentType} = props\n\n  return (\n    <CommentsEnabledProvider documentId={documentId} documentType={documentType}>\n      <CommentsProviderWrapper documentId={documentId} documentType={documentType}>\n        {children}\n      </CommentsProviderWrapper>\n    </CommentsEnabledProvider>\n  )\n}\n\nfunction CommentsProviderWrapper(props: CommentsWrapperProps) {\n  const {children, documentId, documentType} = props\n\n  const {enabled} = useCommentsEnabled()\n  const {connectionState, onPathOpen, inspector, openInspector} = useDocumentPane()\n  const {params, setParams, createPathWithParams} = usePaneRouter()\n\n  const selectedCommentId = params?.comment\n  const paramsRef = useRef(params)\n\n  useLayoutEffect(() => {\n    paramsRef.current = params\n  }, [params])\n\n  const getCommentLink = useCallback(\n    (commentId: string) => {\n      // Generate a path based on the current pane params.\n      // We force a value for `inspect` to ensure that this is included in URLs when comments\n      // are created outside of the inspector context (i.e. directly on the field)\n      // @todo: consider filtering pane router params and culling all non-active RHS panes prior to generating this link\n      const path = createPathWithParams({\n        ...paramsRef.current,\n        comment: commentId,\n        inspect: COMMENTS_INSPECTOR_NAME,\n      })\n      return `${window.location.origin}${path}`\n    },\n    [createPathWithParams],\n  )\n\n  const handleClearSelectedComment = useCallback(() => {\n    setParams({...paramsRef.current, comment: undefined})\n  }, [setParams])\n\n  const handleOpenCommentsInspector = useCallback(() => {\n    if (inspector?.name === COMMENTS_INSPECTOR_NAME) return\n\n    openInspector(COMMENTS_INSPECTOR_NAME)\n  }, [inspector?.name, openInspector])\n\n  // If comments are not enabled, render the default document layout\n  if (!enabled) {\n    return <>{children}</>\n  }\n\n  return (\n    <CommentsProvider\n      documentId={documentId}\n      documentType={documentType}\n      getCommentLink={getCommentLink}\n      isCommentsOpen={inspector?.name === COMMENTS_INSPECTOR_NAME}\n      isConnecting={connectionState === 'connecting'}\n      onClearSelectedComment={handleClearSelectedComment}\n      onCommentsOpen={handleOpenCommentsInspector}\n      onPathOpen={onPathOpen}\n      selectedCommentId={selectedCommentId}\n      sortOrder=\"desc\"\n      type=\"field\"\n    >\n      {children}\n    </CommentsProvider>\n  )\n}\n", "/**\n * @internal\n */\nexport const _DEBUG = false\n\nexport const EMPTY_PARAMS = {}\nexport const LOADING_PANE = Symbol('LOADING_PANE')\n\nexport const DOCUMENT_PANEL_PORTAL_ELEMENT = 'documentPanelPortalElement'\n", "import {useContext} from 'react'\nimport {StructureToolContext} from 'sanity/_singletons'\n\nimport {type StructureToolContextValue} from './types'\n\n/** @internal */\nexport function useStructureTool(): StructureToolContextValue {\n  const structureTool = useContext(StructureToolContext)\n\n  if (!structureTool) throw new Error(`StructureTool: missing context value`)\n\n  return structureTool\n}\n", "import {type PaneRouterContextValue} from '../../components'\nimport {type PaneMenuItemGroup} from '../../types'\n\nexport const DOCUMENT_PANEL_MIN_WIDTH = 320\nexport const DOCUMENT_PANEL_INITIAL_MIN_WIDTH = 600\n\nexport const DOCUMENT_INSPECTOR_MIN_WIDTH = 320\nexport const DOCUMENT_INSPECTOR_MAX_WIDTH = 540\n\nexport const EMPTY_PARAMS: NonNullable<PaneRouterContextValue['params']> = {}\n\nexport const INSPECT_ACTION_PREFIX = 'inspect:'\n\nexport const DEFAULT_MENU_ITEM_GROUPS: PaneMenuItemGroup[] = [{id: 'inspectors'}, {id: 'links'}]\n\n// inspectors\nexport const HISTORY_INSPECTOR_NAME = 'sanity/structure/history'\nexport const VALIDATION_INSPECTOR_NAME = 'sanity/structure/validation'\n", "import {memo, useCallback, useEffect, useRef, useState} from 'react'\nimport {type DocumentInspector, type DocumentInspectorMenuItem, useUnique} from 'sanity'\n\ninterface InspectorMenuItemProps {\n  documentId: string\n  documentType: string\n  index: number\n  setMenuItem: (index: number, node: DocumentInspectorMenuItem) => void\n  useMenuItem: NonNullable<DocumentInspector['useMenuItem']>\n}\n\nconst InspectorMenuItem = memo(function InspectorMenuItem(props: InspectorMenuItemProps) {\n  const {documentId, documentType, index, setMenuItem, useMenuItem} = props\n\n  const node = useUnique(\n    useMenuItem({\n      documentId,\n      documentType,\n    }),\n  )\n\n  useEffect(() => {\n    setMenuItem(index, node)\n  }, [index, node, setMenuItem])\n\n  return <></>\n})\n\ninterface DocumentInspectorMenuItemsResolverProps {\n  documentId: string\n  documentType: string\n  inspectors: DocumentInspector[]\n  onMenuItems: (items: DocumentInspectorMenuItem[]) => void\n}\n\n// The menu item in a document inspector are resolved in a React hook (`useMenuItem`).\n// This means that the menu item needs to be resolved in a React component (in accordance with the rules of hooks).\n// In this component, we map over the configured inspectors and render a `InspectorMenuItem` for each.\n// The `InspectorMenuItem` will resolve the menu item in a React hook and call the `setMenuItem` callback\n// with the resolved menu item and the index of the inspector.\n// Finally, we call the `onMenuItems` callback with the resolved menu items.\nexport function DocumentInspectorMenuItemsResolver(props: DocumentInspectorMenuItemsResolverProps) {\n  const {documentId, documentType, inspectors, onMenuItems} = props\n\n  const len = inspectors.length\n  const lenRef = useRef(len)\n\n  const [menuItems, setMenuItems] = useState<DocumentInspectorMenuItem[]>(() =>\n    Array.from(new Array(len)),\n  )\n\n  const menuItemsRef = useRef(menuItems)\n\n  useEffect(() => {\n    if (lenRef.current !== len) {\n      const newFieldActions = Array.from(new Array(len))\n\n      for (let i = 0; i < len; i++) {\n        newFieldActions[i] = menuItemsRef.current[i]\n      }\n\n      lenRef.current = len\n\n      setMenuItems(() => {\n        menuItemsRef.current = newFieldActions\n        return newFieldActions\n      })\n    }\n  }, [len])\n\n  const setMenuItem = useCallback((index: number, node: DocumentInspectorMenuItem) => {\n    setMenuItems((prev) => {\n      const next = [...prev]\n      next[index] = node\n      menuItemsRef.current = next\n      return next\n    })\n  }, [])\n\n  useEffect(() => {\n    onMenuItems(menuItems.filter(Boolean))\n  }, [menuItems, onMenuItems])\n\n  return (\n    <>\n      {inspectors.map(\n        (inspector, inspectorIndex) =>\n          inspector.useMenuItem && (\n            <InspectorMenuItem\n              documentId={documentId}\n              documentType={documentType}\n              index={inspectorIndex}\n              key={inspector.name}\n              setMenuItem={setMenuItem}\n              useMenuItem={inspector.useMenuItem}\n            />\n          ),\n      )}\n    </>\n  )\n}\n", "import {unstable_useValuePreview as useValuePreview} from 'sanity'\n\nimport {useDocumentPane} from './useDocumentPane'\n\n/**\n * useDocumentTitle hook return type.\n *\n * @beta\n * @hidden\n */\ninterface UseDocumentTitle {\n  error?: string\n  title?: string\n}\n\n/**\n * React hook that returns the document title for the current document in the document pane.\n *\n * @beta\n * @hidden\n *\n * @returns The document title or error. See {@link UseDocumentTitle}\n */\nexport function useDocumentTitle(): UseDocumentTitle {\n  const {connectionState, schemaType, title, value: documentValue} = useDocumentPane()\n  const subscribed = Boolean(documentValue) && connectionState !== 'connecting'\n\n  const {error, value} = useValuePreview({\n    enabled: subscribed,\n    schemaType,\n    value: documentValue,\n  })\n\n  if (connectionState === 'connecting') {\n    return {error: undefined, title: undefined}\n  }\n\n  if (title) {\n    return {error: undefined, title}\n  }\n\n  if (!documentValue) {\n    return {error: undefined, title: `New ${schemaType?.title || schemaType?.name}`}\n  }\n\n  if (error) {\n    return {error: `Error: ${error.message}`, title: undefined}\n  }\n\n  return {error: undefined, title: value?.title}\n}\n", "import {useToast} from '@sanity/ui'\nimport {memo, useEffect, useRef} from 'react'\nimport {Translate, useDocumentOperationEvent, useTranslation} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {useDocumentPane} from './useDocumentPane'\nimport {useDocumentTitle} from './useDocumentTitle'\n\nconst IGNORE_OPS = ['patch', 'commit']\n\nexport const DocumentOperationResults = memo(function DocumentOperationResults() {\n  const {push: pushToast} = useToast()\n  const {documentId, documentType} = useDocumentPane()\n  const {title} = useDocumentTitle()\n  const event: any = useDocumentOperationEvent(documentId, documentType)\n  const prevEvent = useRef(event)\n  const paneRouter = usePaneRouter()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  //Truncate the document title and add \"...\" if it is over 25 characters\n  const documentTitleBase = title || t('panes.document-operation-results.operation-undefined-title')\n  const documentTitle =\n    documentTitleBase.length > 25 ? `${documentTitleBase.slice(0, 25)}...` : documentTitleBase\n\n  useEffect(() => {\n    if (!event || event === prevEvent.current) return\n\n    let cleanupId: number | undefined\n\n    if (event.type === 'error') {\n      pushToast({\n        closable: true,\n        duration: 30000, // 30s\n        status: 'error',\n        title: t('panes.document-operation-results.operation-error', {context: event.op}),\n        description: (\n          <details>\n            <summary>{t('panes.document-operation-results.error.summary.title')}</summary>\n            {event.error.message}\n          </details>\n        ),\n      })\n    }\n\n    if (event.type === 'success' && !IGNORE_OPS.includes(event.op)) {\n      pushToast({\n        closable: true,\n        status: 'success',\n        title: (\n          <Translate\n            context={event.op}\n            i18nKey=\"panes.document-operation-results.operation-success\"\n            t={t}\n            values={{\n              title: documentTitle,\n            }}\n            components={{\n              Strong: 'strong',\n            }}\n          />\n        ),\n      })\n    }\n\n    /**\n     * If the document was deleted successfully, close the pane.\n     */\n    if (event.type === 'success' && event.op === 'delete') {\n      // Wait until next tick to allow deletion toasts to appear first\n      cleanupId = setTimeout(() => paneRouter.closeCurrentAndAfter(), 0) as any as number\n    }\n\n    prevEvent.current = event\n\n    // eslint-disable-next-line consistent-return\n    return () => clearTimeout(cleanupId)\n  }, [event, paneRouter, pushToast, t, documentTitle])\n\n  return null\n})\n", "import {CloseIcon} from '@sanity/icons'\nimport {Box, Card, type CardProps, Flex, Text} from '@sanity/ui'\nimport {type HTMLProps, type ReactNode} from 'react'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button} from '../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../i18n'\n\nexport interface DocumentInspectorHeaderProps {\n  as?: CardProps['as']\n  closeButtonLabel: string\n  flex?: CardProps['flex']\n  onClose: () => void\n  title: ReactNode\n}\n\nconst Root = styled(Card)({\n  position: 'relative',\n  zIndex: 1,\n  lineHeight: 0,\n})\n\n/** @internal */\nexport function DocumentInspectorHeader(\n  props: DocumentInspectorHeaderProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref'>,\n) {\n  const {as: forwardedAs, children, closeButtonLabel, onClose, title, ...restProps} = props\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <Root {...restProps} as={forwardedAs}>\n      <Flex padding={2}>\n        <Box flex={1} padding={3}>\n          <Text as=\"h1\" size={1} weight=\"medium\">\n            {title}\n          </Text>\n        </Box>\n        <Box flex=\"none\" padding={1}>\n          <Button\n            aria-label={closeButtonLabel}\n            icon={CloseIcon}\n            mode=\"bleed\"\n            onClick={onClose}\n            tooltipProps={{content: t('document-inspector.close-button.tooltip')}}\n          />\n        </Box>\n      </Flex>\n      {children}\n    </Root>\n  )\n}\n", "import {type MouseEvent, useCallback, useRef} from 'react'\nimport {styled} from 'styled-components'\n\nconst Root = styled.div`\n  position: absolute;\n  top: 0;\n  left: -4px;\n  bottom: 0;\n  width: 9px;\n  z-index: 201;\n  cursor: ew-resize;\n\n  /* Border */\n  & > span:nth-child(1) {\n    display: block;\n    border-left: 1px solid var(--card-border-color);\n    position: absolute;\n    top: 0;\n    left: 4px;\n    bottom: 0;\n    transition: opacity 200ms;\n  }\n\n  /* Hover effect */\n  & > span:nth-child(2) {\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 9px;\n    bottom: 0;\n    background-color: var(--card-border-color);\n    opacity: 0;\n    transition: opacity 150ms;\n  }\n\n  @media (hover: hover) {\n    &:hover > span:nth-child(2) {\n      opacity: 0.2;\n    }\n  }\n`\n\nexport function Resizer(props: {onResize: (delta: number) => void; onResizeStart: () => void}) {\n  const {onResize, onResizeStart} = props\n\n  const mouseXRef = useRef(0)\n\n  const handleMouseDown = useCallback(\n    (event: MouseEvent) => {\n      event.preventDefault()\n\n      mouseXRef.current = event.pageX\n\n      onResizeStart()\n\n      const handleMouseMove = (e: globalThis.MouseEvent) => {\n        e.preventDefault()\n        onResize(e.pageX - mouseXRef.current)\n      }\n\n      const handleMouseUp = () => {\n        window.removeEventListener('mousemove', handleMouseMove)\n        window.removeEventListener('mouseup', handleMouseUp)\n      }\n\n      window.addEventListener('mousemove', handleMouseMove)\n      window.addEventListener('mouseup', handleMouseUp)\n    },\n    [onResize, onResizeStart],\n  )\n\n  return (\n    <Root onMouseDown={handleMouseDown}>\n      {/* Hover effect */}\n      <span />\n\n      {/* Border */}\n      <span />\n    </Root>\n  )\n}\n", "import {Box, type BoxProps} from '@sanity/ui'\nimport {type HTMLProps, useCallback, useMemo, useRef, useState} from 'react'\nimport {styled} from 'styled-components'\n\nimport {Resizer} from './Resizer'\n\nexport interface ResizableProps {\n  minWidth: number\n  maxWidth: number\n}\n\nconst Root = styled(Box)`\n  position: relative;\n  flex: 1;\n  padding-left: 1px;\n`\n\nexport function Resizable(\n  props: ResizableProps & BoxProps & Omit<HTMLProps<HTMLDivElement>, 'as'>,\n) {\n  const {as: forwardedAs, children, minWidth, maxWidth, ...restProps} = props\n  const [element, setElement] = useState<HTMLDivElement | null>(null)\n  const elementWidthRef = useRef<number>()\n  const [targetWidth, setTargetWidth] = useState<number>()\n\n  const handleResizeStart = useCallback(() => {\n    elementWidthRef.current = element?.offsetWidth\n  }, [element])\n\n  const handleResize = useCallback(\n    (deltaX: number) => {\n      const w = elementWidthRef.current\n\n      if (!w) return\n\n      setTargetWidth(Math.min(Math.max(w - deltaX, minWidth), maxWidth))\n    },\n    [minWidth, maxWidth],\n  )\n\n  const style = useMemo(\n    () => (targetWidth ? {flex: 'none', width: targetWidth} : {minWidth, maxWidth}),\n    [minWidth, maxWidth, targetWidth],\n  )\n\n  return (\n    <Root as={forwardedAs} {...restProps} ref={setElement} style={style}>\n      {children}\n      <Resizer onResize={handleResize} onResizeStart={handleResizeStart} />\n    </Root>\n  )\n}\n", "import {Box} from '@sanity/ui'\nimport {createElement, type ReactElement, useCallback} from 'react'\n\nimport {usePane} from '../../../components'\nimport {useStructureTool} from '../../../useStructureTool'\nimport {DOCUMENT_INSPECTOR_MAX_WIDTH, DOCUMENT_INSPECTOR_MIN_WIDTH} from '../constants'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {Resizable} from './Resizable'\n\ninterface DocumentInspectorPanelProps {\n  documentId: string\n  documentType: string\n  flex?: number | number[]\n}\n\nexport function DocumentInspectorPanel(props: DocumentInspectorPanelProps): ReactElement | null {\n  const {documentId, documentType, flex} = props\n  const {collapsed} = usePane()\n  const {closeInspector, inspector} = useDocumentPane()\n  const {features} = useStructureTool()\n\n  const handleClose = useCallback(() => {\n    if (inspector) closeInspector(inspector.name)\n  }, [closeInspector, inspector])\n\n  if (collapsed || !inspector) return null\n\n  const element = createElement(inspector.component, {\n    onClose: handleClose,\n    documentId,\n    documentType,\n  })\n\n  if (features.resizablePanes) {\n    return (\n      <Resizable\n        as=\"aside\"\n        data-ui=\"DocumentInspectorPanel\"\n        flex={flex}\n        maxWidth={DOCUMENT_INSPECTOR_MAX_WIDTH}\n        minWidth={DOCUMENT_INSPECTOR_MIN_WIDTH}\n      >\n        {element}\n      </Resizable>\n    )\n  }\n\n  return (\n    <Box as=\"aside\" data-ui=\"DocumentInspectorPanel\" flex={flex}>\n      {element}\n    </Box>\n  )\n}\n", "import {useCallback, useEffect, useMemo, useState} from 'react'\nimport {map, startWith} from 'rxjs/operators'\nimport {useKeyValueStore} from 'sanity'\n\nconst STRUCTURE_TOOL_NAMESPACE = 'studio.structure-tool'\n\n/**\n * @internal\n */\nexport function useStructureToolSetting<ValueType>(\n  namespace: string,\n  key: string | null,\n  defaultValue?: ValueType,\n): [ValueType | undefined, (_value: ValueType) => void] {\n  const keyValueStore = useKeyValueStore()\n  const [value, setValue] = useState<ValueType | undefined>(defaultValue)\n\n  const keyValueStoreKey = [STRUCTURE_TOOL_NAMESPACE, namespace, key].filter(Boolean).join('.')\n\n  const settings = useMemo(() => {\n    return keyValueStore.getKey(keyValueStoreKey)\n  }, [keyValueStore, keyValueStoreKey])\n\n  useEffect(() => {\n    const sub = settings\n      .pipe(\n        startWith(defaultValue),\n        map((fetchedValue) => {\n          return fetchedValue === null ? defaultValue : fetchedValue\n        }),\n      )\n      .subscribe({\n        next: setValue as any,\n      })\n\n    return () => sub?.unsubscribe()\n  }, [defaultValue, keyValueStoreKey, settings])\n\n  const set = useCallback(\n    (newValue: ValueType) => {\n      if (newValue !== value) {\n        setValue(newValue)\n        keyValueStore.setKey(keyValueStoreKey, newValue as string)\n      }\n    },\n    [keyValueStore, keyValueStoreKey, value],\n  )\n\n  return useMemo(() => [value, set], [set, value])\n}\n", "export const VIEW_MODE_PARSED = {id: 'parsed', title: 'document-inspector.view-mode.parsed'}\nexport const VIEW_MODE_RAW = {id: 'raw', title: 'document-inspector.view-mode.raw-json'}\nexport const VIEW_MODES = [VIEW_MODE_PARSED, VIEW_MODE_RAW]\n", "import {type SanityDocumentLike} from '@sanity/types'\nimport LRU from 'quick-lru'\nimport {isRecord, isString} from 'sanity'\n\nconst lru = new LRU({maxSize: 1000})\n\nexport function isExpanded(keyPath: any, value: any): any {\n  const cached = lru.get(keyPath)\n\n  if (cached === undefined) {\n    lru.set(keyPath, Array.isArray(value) || isRecord(value))\n    return isExpanded(keyPath, value)\n  }\n\n  return cached\n}\n\nexport function toggleExpanded(event: any): void {\n  const {path} = event\n  const current = lru.get(path)\n\n  if (current === undefined) {\n    // something is wrong\n    return\n  }\n\n  lru.set(path, !current)\n}\n\nexport function selectElement(element: HTMLElement): void {\n  const sel = window.getSelection()\n\n  if (sel) {\n    const range = document.createRange()\n\n    sel.removeAllRanges()\n    range.selectNodeContents(element)\n    sel.addRange(range)\n  }\n}\n\nexport function select(event: any): void {\n  selectElement(event.currentTarget)\n}\n\nexport function maybeSelectAll(event: any): void {\n  const selectAll = event.keyCode === 65 && (event.metaKey || event.ctrlKey)\n\n  if (!selectAll) {\n    return\n  }\n\n  event.preventDefault()\n\n  selectElement(event.currentTarget)\n}\n\nexport function isDocumentLike(value: unknown): value is SanityDocumentLike {\n  return isRecord(value) && isString(value._id) && isString(value._type)\n}\n", "import {rem, type Theme} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\nexport const JSONInspectorWrapper = styled.div(({theme}: {theme: Theme}) => {\n  const {color, fonts, space} = theme.sanity\n\n  return css`\n    & .json-inspector,\n    & .json-inspector .json-inspector__selection {\n      font-family: ${fonts.code.family};\n      font-size: ${fonts.code.sizes[1].fontSize}px;\n      line-height: ${fonts.code.sizes[1].lineHeight}px;\n      color: var(--card-code-fg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf {\n      padding-left: ${rem(space[4])};\n    }\n\n    & .json-inspector .json-inspector__leaf.json-inspector__leaf_root {\n      padding-top: ${rem(space[3])};\n      padding-left: 0;\n    }\n\n    & .json-inspector > .json-inspector__leaf_root > .json-inspector__line > .json-inspector__key {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__line {\n      display: block;\n      position: relative;\n      cursor: default;\n    }\n\n    & .json-inspector .json-inspector__line::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: -200px;\n      right: -50px;\n      bottom: 0;\n      z-index: -1;\n      pointer-events: none;\n    }\n\n    & .json-inspector .json-inspector__line:hover::after {\n      background: var(--card-code-bg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line {\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line::before {\n      content: '▸ ';\n      margin-left: calc(0 - ${rem(space[4])} + 3px);\n      font-size: ${fonts.code.sizes[1].fontSize}px;\n      line-height: ${fonts.code.sizes[1].lineHeight}px;\n    }\n\n    &\n      .json-inspector\n      .json-inspector__leaf_expanded.json-inspector__leaf_composite\n      > .json-inspector__line::before {\n      content: '▾ ';\n      font-size: ${fonts.code.sizes[1].fontSize}px;\n      line-height: ${fonts.code.sizes[1].lineHeight}px;\n    }\n\n    & .json-inspector .json-inspector__radio,\n    & .json-inspector .json-inspector__flatpath {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__value {\n      margin-left: ${rem(space[4] / 2)};\n    }\n\n    &\n      .json-inspector\n      > .json-inspector__leaf_root\n      > .json-inspector__line\n      > .json-inspector__key\n      + .json-inspector__value {\n      margin: 0;\n    }\n\n    & .json-inspector .json-inspector__key {\n      color: ${color.syntax.property};\n    }\n\n    & .json-inspector .json-inspector__value_helper,\n    & .json-inspector .json-inspector__value_null {\n      color: ${color.syntax.constant};\n    }\n\n    & .json-inspector .json-inspector__not-found {\n      padding-top: ${rem(space[3])};\n    }\n\n    & .json-inspector .json-inspector__value_string {\n      color: ${color.syntax.string};\n    }\n\n    & .json-inspector .json-inspector__value_boolean {\n      color: ${color.syntax.boolean};\n    }\n\n    & .json-inspector .json-inspector__value_number {\n      color: ${color.syntax.number};\n    }\n\n    & .json-inspector .json-inspector__show-original {\n      display: inline-block;\n      padding: 0 6px;\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__show-original:hover {\n      color: inherit;\n    }\n\n    & .json-inspector .json-inspector__show-original::before {\n      content: '↔';\n    }\n\n    & .json-inspector .json-inspector__show-original:hover::after {\n      content: ' expand';\n    }\n  `\n})\n", "import {SearchIcon} from '@sanity/icons'\nimport {TextInput} from '@sanity/ui'\nimport {type ChangeEvent, useCallback} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../i18n'\n\nexport function Search(props: {onChange: (q: string) => void; query: string}) {\n  const {onChange, query} = props\n\n  const handleChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => onChange(event.target.value),\n    [onChange],\n  )\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <TextInput\n      icon={SearchIcon}\n      onChange={handleChange}\n      placeholder={t('document-inspector.search.placeholder')}\n      radius={2}\n      value={query || ''}\n    />\n  )\n}\n", "import JSONInspector from '@rexxars/react-json-inspector'\nimport {type SanityDocument} from '@sanity/types'\nimport {Card, Code, Flex, TabList, TabPanel} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {Translate, useTranslation} from 'sanity'\n\nimport {Dialog, Tab} from '../../../../ui-components'\nimport {DocTitle} from '../../../components'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {useStructureToolSetting} from '../../../useStructureToolSetting'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {VIEW_MODE_PARSED, VIEW_MODE_RAW, VIEW_MODES} from './constants'\nimport {isDocumentLike, isExpanded, maybeSelectAll, select, toggleExpanded} from './helpers'\nimport {JSONInspectorWrapper} from './InspectDialog.styles'\nimport {Search} from './Search'\n\ninterface InspectDialogProps {\n  value: Partial<SanityDocument> | null\n}\n\nexport function InspectDialog(props: InspectDialogProps) {\n  const {value} = props\n  const {onInspectClose, paneKey} = useDocumentPane()\n  const dialogIdPrefix = `${paneKey}_inspect_`\n\n  /* this creates a view mode (the default that it opens with is the parsed tab) that is saved based on the paneKey\n  where the inspect dialog lives.\n  This also means that when a page is loaded, the state of the tabs remains and doesn't revert to the pane tab */\n  const [viewModeId, onViewModeChange] = useStructureToolSetting(\n    'inspect-view-mode',\n    null,\n    'parsed',\n  )\n\n  /* based on the view mode it shows the right tab content */\n  const viewMode = VIEW_MODES.find((mode) => mode.id === viewModeId)\n\n  const setParsedViewMode = useCallback(() => {\n    onViewModeChange(VIEW_MODE_PARSED.id)\n  }, [onViewModeChange])\n\n  const setRawViewMode = useCallback(() => {\n    onViewModeChange(VIEW_MODE_RAW.id)\n  }, [onViewModeChange])\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <Dialog\n      bodyHeight=\"fill\"\n      id={`${dialogIdPrefix}dialog`}\n      header={\n        isDocumentLike(value) ? (\n          <Translate\n            t={t}\n            i18nKey=\"document-inspector.dialog.title\"\n            components={{\n              DocumentTitle: () => (\n                <em>\n                  <DocTitle document={value} />\n                </em>\n              ),\n            }}\n          />\n        ) : (\n          <em>{t('document-inspector.dialog.title-no-value')}</em>\n        )\n      }\n      onClose={onInspectClose}\n      onClickOutside={onInspectClose}\n      padding={false}\n      width={2}\n    >\n      <Flex direction=\"column\" height=\"fill\">\n        <Card\n          padding={3}\n          paddingTop={0}\n          shadow={1}\n          style={{position: 'sticky', bottom: 0, zIndex: 3}}\n        >\n          <TabList space={1}>\n            <Tab\n              aria-controls={`${dialogIdPrefix}tabpanel`}\n              id={`${dialogIdPrefix}tab-${VIEW_MODE_PARSED.id}`}\n              label={t(VIEW_MODE_PARSED.title)}\n              onClick={setParsedViewMode}\n              selected={viewMode === VIEW_MODE_PARSED}\n            />\n            <Tab\n              aria-controls={`${dialogIdPrefix}tabpanel`}\n              id={`${dialogIdPrefix}tab-${VIEW_MODE_RAW.id}`}\n              label={t(VIEW_MODE_RAW.title)}\n              onClick={setRawViewMode}\n              selected={viewMode === VIEW_MODE_RAW}\n            />\n          </TabList>\n        </Card>\n\n        <TabPanel\n          aria-labelledby={`${dialogIdPrefix}tab-${viewModeId}`}\n          flex={1}\n          id={`${dialogIdPrefix}tabpanel`}\n          overflow=\"auto\"\n          padding={4}\n          style={{outline: 'none'}}\n        >\n          {viewMode === VIEW_MODE_PARSED && (\n            <JSONInspectorWrapper>\n              <JSONInspector\n                data={value}\n                isExpanded={isExpanded}\n                onClick={toggleExpanded}\n                search={Search}\n                filterOptions={{ignoreCase: true}}\n              />\n            </JSONInspectorWrapper>\n          )}\n\n          {viewMode === VIEW_MODE_RAW && (\n            <Code\n              language=\"json\"\n              tabIndex={0}\n              onKeyDown={maybeSelectAll}\n              onDoubleClick={select}\n              onFocus={select}\n              size={1}\n            >\n              {JSON.stringify(value, null, 2)}\n            </Code>\n          )}\n        </TabPanel>\n      </Flex>\n    </Dialog>\n  )\n}\n", "import {Button, type ButtonProps} from '../../../ui-components'\n\ninterface SpacerButtonProps {\n  size?: ButtonProps['size']\n}\n\n/**\n * This renders a visually hidden <Button> component that is still contributes\n * to document layout.\n *\n * It's used to simplify padding in Sanity UI components that contain buttons which\n * may not always be rendered.\n *\n * TODO: let's find a more elegant solve to this layout shift problem\n *\n * @internal\n */\nexport function SpacerButton({size}: SpacerButtonProps) {\n  return (\n    <Button\n      aria-hidden\n      disabled\n      size={size}\n      style={{\n        pointerEvents: 'none',\n        visibility: 'hidden',\n        width: 0,\n      }}\n      text=\"-\"\n    />\n  )\n}\n", "import {type ButtonTone, Card, type CardTone, Flex, Text} from '@sanity/ui'\nimport {type ComponentType, type ElementType, type JSX, type ReactNode} from 'react'\n\nimport {Button} from '../../../../../ui-components'\nimport {SpacerButton} from '../../../../components/spacerButton'\n\ninterface BannerProps {\n  action?: {\n    as?: ElementType | keyof JSX.IntrinsicElements\n    icon?: ComponentType\n    onClick?: () => void\n    text: string\n    tone?: ButtonTone\n  }\n  content: ReactNode\n  icon?: ComponentType\n  tone?: CardTone\n}\n\nexport function Banner(props: BannerProps) {\n  const {action, content, icon: Icon, tone = 'transparent', ...rest} = props\n\n  return (\n    <Card borderBottom paddingX={4} paddingY={2} tone={tone} {...rest}>\n      <Flex align=\"center\" gap={3}>\n        {Icon && (\n          <Text size={0}>\n            <Icon />\n          </Text>\n        )}\n\n        <Flex align=\"center\" flex={1} gap={2} paddingY={3}>\n          {content}\n        </Flex>\n\n        <SpacerButton />\n\n        {action && (\n          <Button\n            as={action?.as}\n            mode=\"ghost\"\n            onClick={action?.onClick}\n            text={action.text}\n            tone={action.tone || 'default'}\n          />\n        )}\n      </Flex>\n    </Card>\n  )\n}\n", "import {ReadOnlyIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {useDocumentOperation, useTranslation} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\ninterface DeletedDocumentBannerProps {\n  revisionId?: string | null\n}\n\nexport function DeletedDocumentBanner({revisionId}: DeletedDocumentBannerProps) {\n  const {documentId, documentType} = useDocumentPane()\n  const {restore} = useDocumentOperation(documentId, documentType)\n  const {navigateIntent} = useRouter()\n  const handleRestore = useCallback(() => {\n    if (revisionId) {\n      restore.execute(revisionId)\n      navigateIntent('edit', {id: documentId, type: documentType})\n    }\n  }, [documentId, documentType, navigateIntent, restore, revisionId])\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <Banner\n      action={\n        revisionId\n          ? {\n              onClick: handleRestore,\n              text: t('banners.deleted-document-banner.restore-button.text'),\n            }\n          : undefined\n      }\n      content={\n        <Text size={1} weight=\"medium\">\n          {t('banners.deleted-document-banner.text')}\n        </Text>\n      }\n      data-testid=\"deleted-document-banner\"\n      icon={ReadOnlyIcon}\n    />\n  )\n}\n", "import {ErrorOutlineIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {isDeprecatedSchemaType, Translate, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function DeprecatedDocumentTypeBanner() {\n  const {schemaType} = useDocumentPane()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (!isDeprecatedSchemaType(schemaType)) {\n    return null\n  }\n\n  return (\n    <Banner\n      content={\n        <Text size={1} weight=\"medium\">\n          <Translate t={t} i18nKey=\"banners.deprecated-document-type-banner.text\" />{' '}\n          {schemaType.deprecated.reason}\n        </Text>\n      }\n      data-testid=\"deprecated-document-type-banner\"\n      icon={ErrorOutlineIcon}\n    />\n  )\n}\n", "import {ReadOnlyIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {Translate, useCurrentUser, useListFormat, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\ninterface PermissionCheckBannerProps {\n  granted: boolean\n  requiredPermission: 'update' | 'create'\n}\n\nexport function PermissionCheckBanner({granted, requiredPermission}: PermissionCheckBannerProps) {\n  const currentUser = useCurrentUser()\n  const listFormat = useListFormat({style: 'short'})\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (granted) return null\n\n  const roleTitles = (currentUser?.roles || []).map((role) => role.title)\n  const roles = listFormat\n    .formatToParts(roleTitles)\n    .map((part) =>\n      part.type === 'element' ? <code key={part.value}>{part.value}</code> : part.value,\n    )\n\n  return (\n    <Banner\n      content={\n        <Text size={1} weight=\"medium\">\n          <Translate\n            t={t}\n            i18nKey=\"banners.permission-check-banner.missing-permission\"\n            components={{Roles: () => <>{roles}</>}}\n            values={{count: roles.length, roles: roleTitles}}\n            context={requiredPermission}\n          />\n        </Text>\n      }\n      data-testid=\"permission-check-banner\"\n      icon={ReadOnlyIcon}\n    />\n  )\n}\n", "import {CloseIcon, SyncIcon, WarningOutlineIcon} from '@sanity/icons'\nimport {type KeyedSegment, type Reference} from '@sanity/types'\nimport {Text} from '@sanity/ui'\nimport {fromString as pathFromString, get as pathGet} from '@sanity/util/paths'\nimport {memo, useCallback, useMemo} from 'react'\nimport {useMemoObservable} from 'react-rx'\nimport {concat, type Observable, of} from 'rxjs'\nimport {debounceTime, map} from 'rxjs/operators'\nimport {\n  type DocumentAvailability,\n  getPublishedId,\n  useDocumentPreviewStore,\n  useTranslation,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../../../components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {type RouterPaneGroup} from '../../../../types'\nimport {Banner} from './Banner'\n\ninterface ParentReferenceInfo {\n  loading: boolean\n  result?: {\n    availability: {draft: DocumentAvailability; published: DocumentAvailability}\n    refValue: string | undefined\n  }\n}\n\nexport const ReferenceChangedBanner = memo(() => {\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {params, groupIndex, routerPanesState, replaceCurrent, BackLink} = usePaneRouter()\n  const routerReferenceId = routerPanesState[groupIndex]?.[0].id\n  const parentGroup = routerPanesState[groupIndex - 1] as RouterPaneGroup | undefined\n  const parentSibling = parentGroup?.[0]\n  const parentId = parentSibling?.id\n  const hasHistoryOpen = Boolean(parentSibling?.params?.rev)\n  const parentRefPath = useMemo(() => {\n    return (params?.parentRefPath && pathFromString(params.parentRefPath)) || null\n  }, [params?.parentRefPath])\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  /**\n   * Loads information regarding the reference field of the parent pane. This\n   * is only applicable to child references (aka references-in-place).\n   *\n   * It utilizes the pane ID of the parent pane (which is a document ID) along\n   * with the `parentRefPath` router param on the current pane to find the\n   * current value of the reference field on the parent document.\n   *\n   * This is used to compare with the current pane's document ID. If the IDs\n   * don't match then this banner should reveal itself\n   */\n  const referenceInfo = useMemoObservable(\n    (): Observable<ParentReferenceInfo> => {\n      const parentRefPathSegment = parentRefPath?.[0] as string | undefined\n\n      // short-circuit: this document pane is not a child reference pane\n      if (!parentId || !parentRefPathSegment || !parentRefPath) {\n        return of({loading: false})\n      }\n\n      const publishedId = getPublishedId(parentId)\n      const path = pathFromString(parentRefPathSegment)\n\n      // note: observePaths doesn't support keyed path segments, so we need to select the nearest parent\n      const keyedSegmentIndex = path.findIndex(\n        (p): p is KeyedSegment => typeof p == 'object' && '_key' in p,\n      )\n\n      return concat(\n        // emit a loading state instantly\n        of({loading: true}),\n        // then emit the values from watching the published ID's path\n        documentPreviewStore\n          .unstable_observePathsDocumentPair(\n            publishedId,\n            (keyedSegmentIndex === -1 ? path : path.slice(0, keyedSegmentIndex)) as string[][],\n          )\n          .pipe(\n            // this debounce time is needed to prevent flashing banners due to\n            // the router state updating faster than the content-lake state. we\n            // debounce to wait for more emissions because the value pulled\n            // initially could be stale.\n            debounceTime(750),\n            map(\n              ({draft, published}): ParentReferenceInfo => ({\n                loading: false,\n                result: {\n                  availability: {\n                    draft: draft.availability,\n                    published: published.availability,\n                  },\n                  refValue: pathGet<Reference>(draft.snapshot || published.snapshot, parentRefPath)\n                    ?._ref,\n                },\n              }),\n            ),\n          ),\n      )\n    },\n    [documentPreviewStore, parentId, parentRefPath],\n    {loading: true},\n  )\n\n  const handleReloadReference = useCallback(() => {\n    if (referenceInfo.loading) return\n\n    if (referenceInfo.result?.refValue) {\n      replaceCurrent({\n        id: referenceInfo.result.refValue,\n        params: params as Record<string, string>,\n      })\n    }\n  }, [referenceInfo.loading, referenceInfo.result, replaceCurrent, params])\n\n  const shouldHide =\n    // if `parentId` or `parentRefPath` is not present then this banner is n/a\n    !parentId ||\n    !parentRefPath ||\n    // if viewing this pane via history, then hide\n    hasHistoryOpen ||\n    // if loading, hide\n    referenceInfo.loading ||\n    // if the parent document is not available (e.g. due to permission denied or\n    // not found) we don't want to display a warning here, but instead rely on the\n    // parent view to display the appropriate message\n    (!referenceInfo.result?.availability.draft.available &&\n      !referenceInfo.result?.availability.published.available) ||\n    // if the references are the same, then hide the reference changed banner\n    referenceInfo.result?.refValue === routerReferenceId\n\n  if (shouldHide) return null\n\n  return (\n    <Banner\n      action={\n        referenceInfo.result?.refValue\n          ? {\n              onClick: handleReloadReference,\n              icon: SyncIcon,\n              text: t('banners.reference-changed-banner.reason-changed.reload-button.text'),\n            }\n          : {\n              as: BackLink,\n              icon: CloseIcon,\n              text: t('banners.reference-changed-banner.reason-removed.close-button.text'),\n            }\n      }\n      data-testid=\"reference-changed-banner\"\n      content={\n        <Text size={1} weight=\"medium\">\n          {referenceInfo.result?.refValue\n            ? t('banners.reference-changed-banner.reason-changed.text')\n            : t('banners.reference-changed-banner.reason-removed.text')}\n        </Text>\n      }\n      icon={WarningOutlineIcon}\n      tone=\"caution\"\n    />\n  )\n})\n\nReferenceChangedBanner.displayName = 'ReferenceChangedBanner'\n", "import {type ObjectSchemaType} from '@sanity/types'\nimport {Heading, Stack, Text} from '@sanity/ui'\nimport {useTranslation} from 'react-i18next'\nimport {css, styled} from 'styled-components'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\n\ninterface DocumentHeaderProps {\n  documentId: string\n  schemaType: ObjectSchemaType\n  title?: string\n}\n\n/**\n * Use CSS container queries to conditionally render headings at different sizes.\n * We hide this entire container (including the document type) if container queries\n * not supported in the current browser.\n *\n * Note that usage of container queries in `styled-components` is only supported in `6.x`.\n * As such, studios that include `\"styled-components\": \"<6\"` as a dependency will only see\n * the largest heading size here, even if their browser supports it!\n */\n\nexport const TitleContainer = styled(Stack)`\n  ${({theme}) => {\n    return css`\n      @supports not (container-type: inline-size) {\n        display: none !important;\n      }\n\n      container-type: inline-size;\n\n      [data-heading] {\n        font-size: ${theme.sanity.fonts.heading.sizes[4].fontSize}px;\n        line-height: ${theme.sanity.fonts.heading.sizes[4].lineHeight}px;\n        overflow-wrap: break-word;\n        text-wrap: pretty;\n      }\n\n      @container (max-width: 560px) {\n        [data-heading] {\n          font-size: ${theme.sanity.fonts.heading.sizes[3].fontSize}px;\n          line-height: ${theme.sanity.fonts.heading.sizes[3].lineHeight}px;\n        }\n      }\n\n      @container (max-width: 420px) {\n        [data-heading] {\n          font-size: ${theme.sanity.fonts.heading.sizes[2].fontSize}px;\n          line-height: ${theme.sanity.fonts.heading.sizes[2].lineHeight}px;\n        }\n      }\n    `\n  }}\n`\n\n/**\n * Header containing current document title and type.\n * Document type is hidden if the document `_id` matches the current document `_type`.\n * The entire header is hidden if container queries are not supported.\n */\nexport const FormHeader = ({documentId, schemaType, title}: DocumentHeaderProps) => {\n  const isSingleton = documentId === schemaType.name\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (schemaType.__experimental_formPreviewTitle === false) {\n    return null\n  }\n\n  return (\n    <TitleContainer marginBottom={6} space={4}>\n      {!isSingleton && (\n        <Text muted size={1}>\n          {schemaType.title ?? schemaType.name}\n        </Text>\n      )}\n\n      <Heading as=\"h2\" data-heading muted={!title} data-testid=\"document-panel-document-title\">\n        {title ?? t('document-view.form-view.form-title-fallback')}\n      </Heading>\n    </TitleContainer>\n  )\n}\n", "import {type ToastParams, useToast} from '@sanity/ui'\nimport {useEffect, useRef} from 'react'\n\nfunction usePrevious<T>(value: T) {\n  const ref = useRef<T>()\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n  return ref.current\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/setTimeout#maximum_delay_value\nconst LONG_ENOUGH_BUT_NOT_TOO_LONG = 1000 * 60 * 60 * 24 * 24\n\n/**\n * Workaround to support conditional toast (e.g. a toast that is visible as long as a condition holds true)\n */\nexport function useConditionalToast(params: ToastParams & {id: string; enabled?: boolean}) {\n  const toast = useToast()\n\n  const wasEnabled = usePrevious(params.enabled)\n  // note1: there's a `duration || 0` in Sanity UI's pushToast(), so make it non-falsey\n  // note2: cannot use `Infinity` as duration, since it exceeds setTimeout's maximum delay value\n  useEffect(() => {\n    if (!wasEnabled && params.enabled) {\n      toast.push({...params, duration: LONG_ENOUGH_BUT_NOT_TOO_LONG})\n    }\n    if (wasEnabled && !params.enabled) {\n      toast.push({\n        ...params,\n        // Note: @sanity/ui fallbacks to the default duration of 4s in case of falsey values\n        duration: 0.01,\n      })\n    }\n  }, [params, toast, wasEnabled])\n}\n", "/* eslint-disable no-nested-ternary */\nimport {Box, Container, Flex, focusFirstDescendant, Spinner, Text} from '@sanity/ui'\nimport {type FormEvent, forwardRef, useCallback, useEffect, useMemo, useState} from 'react'\nimport {tap} from 'rxjs/operators'\nimport {\n  createPatchChannel,\n  type DocumentMutationEvent,\n  type DocumentRebaseEvent,\n  FormBuilder,\n  type FormDocumentValue,\n  fromMutationPatches,\n  type PatchMsg,\n  PresenceOverlay,\n  useDocumentPresence,\n  useDocumentStore,\n  useTranslation,\n} from 'sanity'\n\nimport {Delay} from '../../../../components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {useDocumentTitle} from '../../useDocumentTitle'\nimport {FormHeader} from './FormHeader'\nimport {useConditionalToast} from './useConditionalToast'\n\ninterface FormViewProps {\n  hidden: boolean\n  margins: [number, number, number, number]\n}\n\nconst preventDefault = (ev: FormEvent) => ev.preventDefault()\n\nexport const FormView = forwardRef<HTMLDivElement, FormViewProps>(function FormView(props, ref) {\n  const {hidden, margins} = props\n\n  const {\n    collapsedFieldSets,\n    collapsedPaths,\n    displayed: value,\n    editState,\n    documentId,\n    documentType,\n    fieldActions,\n    onChange,\n    validation,\n    ready,\n    formState,\n    onFocus,\n    connectionState,\n    onBlur,\n    onSetCollapsedPath,\n    onPathOpen,\n    onSetCollapsedFieldSet,\n    onSetActiveFieldGroup,\n  } = useDocumentPane()\n  const documentStore = useDocumentStore()\n  const presence = useDocumentPresence(documentId)\n  const {title} = useDocumentTitle()\n\n  // The `patchChannel` is an INTERNAL publish/subscribe channel that we use to notify form-builder\n  // nodes about both remote and local patches.\n  // - Used by the Portable Text input to modify selections.\n  // - Used by `withDocument` to reset value.\n  const patchChannel = useMemo(() => createPatchChannel(), [])\n\n  const isLocked = editState?.transactionSyncLock?.enabled\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  useConditionalToast({\n    id: `sync-lock-${documentId}`,\n    status: 'warning',\n    enabled: isLocked,\n    title: t('document-view.form-view.sync-lock-toast.title'),\n    description: t('document-view.form-view.sync-lock-toast.description'),\n  })\n\n  useEffect(() => {\n    const sub = documentStore.pair\n      .documentEvents(documentId, documentType)\n      .pipe(\n        tap((event) => {\n          if (event.type === 'mutation') {\n            patchChannel.publish(prepareMutationEvent(event))\n          }\n\n          if (event.type === 'rebase') {\n            patchChannel.publish(prepareRebaseEvent(event))\n          }\n        }),\n      )\n      .subscribe()\n\n    return () => {\n      sub.unsubscribe()\n    }\n  }, [documentId, documentStore, documentType, patchChannel])\n\n  const hasRev = Boolean(value?._rev)\n  useEffect(() => {\n    if (hasRev) {\n      // this is a workaround for an issue that caused the document pushed to withDocument to get\n      // stuck at the first initial value.\n      // This effect is triggered only when the document goes from not having a revision, to getting one\n      // so it will kick in as soon as the document is received from the backend\n      patchChannel.publish({\n        type: 'mutation',\n        patches: [],\n        snapshot: value,\n      })\n    }\n    // React to changes in hasRev only\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [hasRev])\n\n  const [formRef, setFormRef] = useState<null | HTMLDivElement>(null)\n\n  useEffect(() => {\n    // Only focus on the first descendant if there is not already a focus path\n    // This is to avoid stealing focus from intent links\n    if (ready && !formState?.focusPath.length && formRef) {\n      focusFirstDescendant(formRef)\n    }\n    // We only want to run it on first mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ready])\n\n  const setRef = useCallback(\n    (node: HTMLDivElement | null) => {\n      setFormRef(node)\n      if (typeof ref === 'function') {\n        ref(node)\n      } else if (ref) {\n        ref.current = node\n      }\n    },\n    [ref],\n  )\n\n  // const after = useMemo(\n  //   () =>\n  //     Array.isArray(afterEditorComponents) &&\n  //     afterEditorComponents.map(\n  //       (AfterEditorComponent: ComponentType<{documentId: string}>, idx: number) => (\n  //         <AfterEditorComponent key={String(idx)} documentId={documentId} />\n  //       )\n  //     ),\n  //   [documentId]\n  // )\n\n  return (\n    <Container\n      hidden={hidden}\n      paddingX={4}\n      paddingTop={5}\n      paddingBottom={9}\n      sizing=\"border\"\n      width={1}\n    >\n      <PresenceOverlay margins={margins}>\n        <Box as=\"form\" onSubmit={preventDefault} ref={setRef}>\n          {connectionState === 'connecting' ? (\n            <Delay ms={300}>\n              {/* TODO: replace with loading block */}\n              <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n                <Spinner muted />\n                <Box marginTop={3}>\n                  <Text align=\"center\" muted size={1}>\n                    {t('document-view.form-view.loading')}\n                  </Text>\n                </Box>\n              </Flex>\n            </Delay>\n          ) : formState === null || hidden ? (\n            <Box padding={2}>\n              <Text>{t('document-view.form-view.form-hidden')}</Text>\n            </Box>\n          ) : (\n            <>\n              <FormHeader documentId={documentId} schemaType={formState.schemaType} title={title} />\n              <FormBuilder\n                __internal_fieldActions={fieldActions}\n                __internal_patchChannel={patchChannel}\n                collapsedFieldSets={collapsedFieldSets}\n                collapsedPaths={collapsedPaths}\n                focusPath={formState.focusPath}\n                changed={formState.changed}\n                focused={formState.focused}\n                groups={formState.groups}\n                id=\"root\"\n                members={formState.members}\n                onChange={onChange}\n                onFieldGroupSelect={onSetActiveFieldGroup}\n                onPathBlur={onBlur}\n                onPathFocus={onFocus}\n                onPathOpen={onPathOpen}\n                onSetFieldSetCollapsed={onSetCollapsedFieldSet}\n                onSetPathCollapsed={onSetCollapsedPath}\n                presence={presence}\n                readOnly={connectionState === 'reconnecting' || formState.readOnly}\n                schemaType={formState.schemaType}\n                validation={validation}\n                value={\n                  // note: the form state doesn't have a typed concept of a \"document\" value\n                  // but these should be compatible\n                  formState.value as FormDocumentValue\n                }\n              />\n            </>\n          )}\n        </Box>\n      </PresenceOverlay>\n    </Container>\n  )\n})\n\nfunction prepareMutationEvent(event: DocumentMutationEvent): PatchMsg {\n  const patches = event.mutations.map((mut) => mut.patch).filter(Boolean)\n\n  return {\n    type: 'mutation',\n    snapshot: event.document,\n    patches: fromMutationPatches(event.origin, patches),\n  }\n}\n\nfunction prepareRebaseEvent(event: DocumentRebaseEvent): PatchMsg {\n  const remotePatches = event.remoteMutations.map((mut) => mut.patch).filter(Boolean)\n  const localPatches = event.localMutations.map((mut) => mut.patch).filter(Boolean)\n\n  return {\n    type: 'rebase',\n    snapshot: event.document,\n    patches: fromMutationPatches('remote', remotePatches).concat(\n      fromMutationPatches('local', localPatches),\n    ),\n  }\n}\n", "import {BoundaryElementProvider, Box, Flex, PortalProvider, usePortal} from '@sanity/ui'\nimport {createElement, useEffect, useMemo, useRef, useState} from 'react'\nimport {ScrollContainer, useTimelineSelector, VirtualizerScrollInstanceProvider} from 'sanity'\nimport {css, styled} from 'styled-components'\n\nimport {PaneContent, usePane, usePaneLayout} from '../../../components'\nimport {useStructureTool} from '../../../useStructureTool'\nimport {DocumentInspectorPanel} from '../documentInspector'\nimport {InspectDialog} from '../inspectDialog'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {\n  DeletedDocumentBanner,\n  DeprecatedDocumentTypeBanner,\n  PermissionCheckBanner,\n  ReferenceChangedBanner,\n} from './banners'\nimport {FormView} from './documentViews'\n\ninterface DocumentPanelProps {\n  footerHeight: number | null\n  headerHeight: number | null\n  isInspectOpen: boolean\n  rootElement: HTMLDivElement | null\n  setDocumentPanelPortalElement: (el: HTMLElement | null) => void\n}\n\nconst DocumentBox = styled(Box)({\n  position: 'relative',\n})\n\nconst Scroller = styled(ScrollContainer)<{$disabled: boolean}>(({$disabled}) => {\n  if ($disabled) {\n    return {height: '100%'}\n  }\n\n  return css`\n    height: 100%;\n    overflow: auto;\n    position: relative;\n    scroll-behavior: smooth;\n    outline: none;\n  `\n})\n\nexport const DocumentPanel = function DocumentPanel(props: DocumentPanelProps) {\n  const {footerHeight, headerHeight, isInspectOpen, rootElement, setDocumentPanelPortalElement} =\n    props\n  const {\n    activeViewId,\n    displayed,\n    documentId,\n    editState,\n    inspector,\n    value,\n    views,\n    ready,\n    schemaType,\n    permissions,\n    isPermissionsLoading,\n    isDeleting,\n    isDeleted,\n    timelineStore,\n  } = useDocumentPane()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const {collapsed} = usePane()\n  const parentPortal = usePortal()\n  const {features} = useStructureTool()\n  const portalRef = useRef<HTMLDivElement | null>(null)\n  const [documentScrollElement, setDocumentScrollElement] = useState<HTMLDivElement | null>(null)\n  const formContainerElement = useRef<HTMLDivElement | null>(null)\n\n  const requiredPermission = value._createdAt ? 'update' : 'create'\n\n  const activeView = useMemo(\n    () => views.find((view) => view.id === activeViewId) || views[0] || {type: 'form'},\n    [activeViewId, views],\n  )\n\n  // Use a local portal container when split panes is supported\n  const portalElement: HTMLElement | null = features.splitPanes\n    ? portalRef.current || parentPortal.element\n    : parentPortal.element\n\n  // Calculate the height of the header\n  const margins: [number, number, number, number] = useMemo(() => {\n    if (layoutCollapsed) {\n      return [headerHeight || 0, 0, footerHeight ? footerHeight + 2 : 2, 0]\n    }\n\n    return [0, 0, 2, 0]\n  }, [layoutCollapsed, footerHeight, headerHeight])\n\n  const formViewHidden = activeView.type !== 'form'\n\n  const activeViewNode = useMemo(\n    () =>\n      activeView.type === 'component' &&\n      activeView.component &&\n      createElement(activeView.component, {\n        document: {\n          draft: editState?.draft || null,\n          displayed: displayed || value,\n          historical: displayed,\n          published: editState?.published || null,\n        },\n        documentId,\n        options: activeView.options,\n        schemaType,\n      }),\n    [activeView, displayed, documentId, editState?.draft, editState?.published, schemaType, value],\n  )\n\n  const lastNonDeletedRevId = useTimelineSelector(\n    timelineStore,\n    (state) => state.lastNonDeletedRevId,\n  )\n\n  // Scroll to top as `documentId` changes\n  useEffect(() => {\n    if (!documentScrollElement?.scrollTo) return\n    documentScrollElement.scrollTo(0, 0)\n  }, [documentId, documentScrollElement])\n\n  // Pass portal element to `DocumentPane`\n  useEffect(() => {\n    if (portalElement) {\n      setDocumentPanelPortalElement(portalElement)\n    }\n  }, [portalElement, setDocumentPanelPortalElement])\n\n  const inspectDialog = useMemo(() => {\n    return isInspectOpen ? <InspectDialog value={displayed || value} /> : null\n  }, [isInspectOpen, displayed, value])\n\n  const showInspector = Boolean(!collapsed && inspector)\n\n  return (\n    <PaneContent>\n      <Flex height=\"fill\">\n        {(features.resizablePanes || !showInspector) && (\n          <DocumentBox flex={2} overflow=\"hidden\">\n            <PortalProvider\n              element={portalElement}\n              __unstable_elements={{documentScrollElement: documentScrollElement}}\n            >\n              <BoundaryElementProvider element={documentScrollElement}>\n                <VirtualizerScrollInstanceProvider\n                  scrollElement={documentScrollElement}\n                  containerElement={formContainerElement}\n                >\n                  {activeView.type === 'form' && !isPermissionsLoading && ready && (\n                    <>\n                      <PermissionCheckBanner\n                        granted={Boolean(permissions?.granted)}\n                        requiredPermission={requiredPermission}\n                      />\n                      {!isDeleting && isDeleted && (\n                        <DeletedDocumentBanner revisionId={lastNonDeletedRevId} />\n                      )}\n                      <ReferenceChangedBanner />\n                      <DeprecatedDocumentTypeBanner />\n                    </>\n                  )}\n\n                  <Scroller\n                    $disabled={layoutCollapsed || false}\n                    data-testid=\"document-panel-scroller\"\n                    ref={setDocumentScrollElement}\n                  >\n                    <FormView\n                      hidden={formViewHidden}\n                      key={documentId + (ready ? '_ready' : '_pending')}\n                      margins={margins}\n                      ref={formContainerElement}\n                    />\n                    {activeViewNode}\n                  </Scroller>\n\n                  {inspectDialog}\n\n                  <div data-testid=\"document-panel-portal\" ref={portalRef} />\n                </VirtualizerScrollInstanceProvider>\n              </BoundaryElementProvider>\n            </PortalProvider>\n          </DocumentBox>\n        )}\n\n        {showInspector && (\n          <BoundaryElementProvider element={rootElement}>\n            <DocumentInspectorPanel\n              documentId={documentId}\n              documentType={schemaType.name}\n              flex={1}\n            />\n          </BoundaryElementProvider>\n        )}\n      </Flex>\n    </PaneContent>\n  )\n}\n", "import {type Placement} from '@sanity/ui'\n\nimport {type DialogProps} from '../../../../../ui-components'\n\nexport const POPOVER_FALLBACK_PLACEMENTS: Placement[] = ['left', 'bottom']\n\nexport const DIALOG_WIDTH_TO_UI_WIDTH: {[key: string]: DialogProps['width']} = {\n  small: 0,\n  medium: 1,\n  large: 2,\n  full: 'auto',\n}\n", "import {\n  Box,\n  Button, // eslint-disable-line no-restricted-imports\n  Flex,\n  Grid,\n  Popover, // eslint-disable-line no-restricted-imports\n  Text,\n  useClickOutside,\n  useGlobalKeyDown,\n  useLayer,\n} from '@sanity/ui'\nimport {useCallback, useState} from 'react'\nimport {type DocumentActionConfirmDialogProps, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {POPOVER_FALLBACK_PLACEMENTS} from './constants'\n\nexport function ConfirmDialog(props: {\n  dialog: DocumentActionConfirmDialogProps\n  referenceElement: HTMLElement | null\n}) {\n  const {dialog, referenceElement} = props\n\n  return (\n    <Popover\n      content={<ConfirmDialogContent dialog={dialog} />}\n      fallbackPlacements={POPOVER_FALLBACK_PLACEMENTS}\n      open\n      placement=\"top\"\n      portal\n      preventOverflow\n      referenceElement={referenceElement}\n    />\n  )\n}\n\n/**\n * Dialog rendered by custom document actions of dialog type `confirm`.\n * As these are user configurable with public facing APIs, internal studio ui-components are not used.\n */\nfunction ConfirmDialogContent(props: {dialog: DocumentActionConfirmDialogProps}) {\n  const {dialog} = props\n  const {\n    cancelButtonIcon,\n    cancelButtonText,\n    confirmButtonIcon,\n    confirmButtonText,\n    // color,\n    message,\n    onCancel,\n    onConfirm,\n    tone,\n  } = dialog\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {isTopLayer} = useLayer()\n  const [element, setElement] = useState<HTMLElement | null>(null)\n\n  const handleClickOutside = useCallback(() => {\n    if (isTopLayer) onCancel()\n  }, [isTopLayer, onCancel])\n\n  const handleGlobalKeyDown = useCallback(\n    (event: any) => {\n      if (event.key === 'Escape' && isTopLayer) onCancel()\n    },\n    [isTopLayer, onCancel],\n  )\n\n  useClickOutside(handleClickOutside, [element])\n  useGlobalKeyDown(handleGlobalKeyDown)\n\n  return (\n    <Flex direction=\"column\" ref={setElement} style={{minWidth: 320 - 16, maxWidth: 400}}>\n      <Box flex={1} overflow=\"auto\" padding={4}>\n        <Text>{message}</Text>\n      </Box>\n      <Box paddingX={4} paddingY={3} style={{borderTop: '1px solid var(--card-border-color)'}}>\n        <Grid columns={2} gap={2}>\n          <Button\n            icon={cancelButtonIcon}\n            onClick={onCancel}\n            mode=\"ghost\"\n            text={cancelButtonText || t('confirm-dialog.cancel-button.fallback-text')}\n          />\n          <Button\n            icon={confirmButtonIcon}\n            onClick={onConfirm}\n            text={confirmButtonText || t('confirm-dialog.confirm-button.fallback-text')}\n            tone={tone}\n          />\n        </Grid>\n      </Box>\n    </Flex>\n  )\n}\n", "import {\n  Box,\n  Dialog, // eslint-disable-line no-restricted-imports\n} from '@sanity/ui'\nimport {useId} from 'react'\nimport {type DocumentActionModalDialogProps, LegacyLayerProvider} from 'sanity'\n\nimport {DIALOG_WIDTH_TO_UI_WIDTH} from './constants'\n\n/**\n * Dialog rendered by custom document actions of dialog type `dialog`.\n * As these are user configurable with public facing APIs, internal studio ui-components are not used.\n */\nexport function ModalDialog(props: {dialog: DocumentActionModalDialogProps}) {\n  const {dialog} = props\n  const dialogId = useId()\n\n  const footer = dialog.footer && (\n    <Box paddingX={4} paddingY={3}>\n      {dialog.footer}\n    </Box>\n  )\n\n  return (\n    <LegacyLayerProvider zOffset=\"fullscreen\">\n      <Dialog\n        animate\n        __unstable_hideCloseButton={dialog.showCloseButton === false}\n        footer={footer}\n        header={dialog.header}\n        id={dialogId}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClose={dialog.onClose}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClickOutside={dialog.onClose}\n        width={dialog.width === undefined ? 1 : DIALOG_WIDTH_TO_UI_WIDTH[dialog.width]}\n      >\n        <Box padding={4}>{dialog.content}</Box>\n      </Dialog>\n    </LegacyLayerProvider>\n  )\n}\n", "import {\n  Popover, // eslint-disable-line no-restricted-imports\n  useClickOutside,\n  useGlobalKeyDown,\n  useLayer,\n} from '@sanity/ui'\nimport {useCallback, useState} from 'react'\nimport {type DocumentActionPopoverDialogProps} from 'sanity'\n\nimport {POPOVER_FALLBACK_PLACEMENTS} from './constants'\n\nexport function PopoverDialog(props: {\n  dialog: DocumentActionPopoverDialogProps\n  referenceElement: HTMLElement | null\n}) {\n  const {dialog, referenceElement} = props\n\n  return (\n    <Popover\n      content={<PopoverDialogContent dialog={dialog} />}\n      fallbackPlacements={POPOVER_FALLBACK_PLACEMENTS}\n      open\n      placement=\"top\"\n      portal\n      preventOverflow\n      referenceElement={referenceElement}\n    />\n  )\n}\n\n/**\n * Popover rendered by custom document actions of dialog type `popover`.\n * As these are user configurable with public facing APIs, internal studio ui-components are not used.\n */\nfunction PopoverDialogContent(props: {dialog: DocumentActionPopoverDialogProps}) {\n  const {dialog} = props\n  const {content, onClose} = dialog\n  const {isTopLayer} = useLayer()\n  const [element, setElement] = useState<HTMLElement | null>(null)\n\n  const handleClickOutside = useCallback(() => {\n    if (isTopLayer) onClose()\n  }, [isTopLayer, onClose])\n\n  const handleGlobalKeyDown = useCallback(\n    (event: any) => {\n      if (event.key === 'Escape' && isTopLayer) onClose()\n    },\n    [isTopLayer, onClose],\n  )\n\n  useClickOutside(handleClickOutside, [element])\n  useGlobalKeyDown(handleGlobalKeyDown)\n\n  return <div ref={setElement}>{content}</div>\n}\n", "import {PortalProvider, Text, usePortal} from '@sanity/ui'\nimport {type ReactNode, useId} from 'react'\nimport {type DocumentActionDialogProps} from 'sanity'\n\nimport {Dialog} from '../../../../ui-components'\nimport {DOCUMENT_PANEL_PORTAL_ELEMENT} from '../../../constants'\nimport {ConfirmDialog} from './dialogs/ConfirmDialog'\nimport {ModalDialog} from './dialogs/ModalDialog'\nimport {PopoverDialog} from './dialogs/PopoverDialog'\n\nexport interface ActionStateDialogProps {\n  dialog: DocumentActionDialogProps\n  referenceElement?: HTMLElement | null\n}\n\n// A portal provider that uses the document panel portal element if it exists\n// as the portal element so that dialogs are scoped to the document panel\nfunction DocumentActionPortalProvider(props: {children: ReactNode}) {\n  const {children} = props\n  const {element, elements} = usePortal()\n  const portalElement = elements?.[DOCUMENT_PANEL_PORTAL_ELEMENT] || element\n\n  return <PortalProvider element={portalElement}>{children}</PortalProvider>\n}\n\nexport function ActionStateDialog(props: ActionStateDialogProps) {\n  const {dialog, referenceElement = null} = props\n  const modalId = useId()\n\n  if (dialog.type === 'confirm') {\n    return <ConfirmDialog dialog={dialog} referenceElement={referenceElement} />\n  }\n\n  if (dialog.type === 'popover') {\n    return <PopoverDialog dialog={dialog} referenceElement={referenceElement} />\n  }\n\n  if (dialog.type === 'dialog' || !dialog.type) {\n    return (\n      <DocumentActionPortalProvider>\n        <ModalDialog dialog={dialog} />\n      </DocumentActionPortalProvider>\n    )\n  }\n\n  if (dialog.type === 'custom') {\n    return <DocumentActionPortalProvider>{dialog?.component}</DocumentActionPortalProvider>\n  }\n\n  // @todo: add validation?\n  const unknownModal: any = dialog\n\n  // eslint-disable-next-line no-console\n  console.warn(`Unsupported modal type ${unknownModal.type}`)\n\n  return (\n    <Dialog\n      id={modalId}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClose={unknownModal.onClose}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClickOutside={unknownModal.onClose}\n      width={1}\n    >\n      {unknownModal.content || (\n        // eslint-disable-next-line i18next/no-literal-string\n        <Text size={1}>\n          Unexpected modal type (<code>{unknownModal.type}</code>)\n        </Text>\n      )}\n    </Dialog>\n  )\n}\n", "import {Menu} from '@sanity/ui'\nimport {type ReactNode, useCallback, useId, useMemo, useState} from 'react'\nimport {\n  ContextMenuButton,\n  type DocumentActionDescription,\n  LegacyLayerProvider,\n  useTranslation,\n} from 'sanity'\n\nimport {MenuButton, MenuItem, type PopoverProps} from '../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {ActionStateDialog} from './ActionStateDialog'\n\nexport interface ActionMenuButtonProps {\n  actionStates: DocumentActionDescription[]\n  disabled: boolean\n}\n\n/**\n * @internal\n */\nexport function ActionDialogWrapper({\n  actionStates,\n  children,\n  referenceElement,\n}: {\n  actionStates: DocumentActionDescription[]\n  children: ({handleAction}: {handleAction: (idx: number) => void}) => ReactNode\n  referenceElement?: HTMLElement | null\n}) {\n  const [actionIndex, setActionIndex] = useState(-1)\n  const currentAction = actionStates[actionIndex]\n\n  const handleAction = useCallback((idx: number) => {\n    setActionIndex(idx)\n  }, [])\n\n  return (\n    <>\n      {currentAction && currentAction.dialog && (\n        <LegacyLayerProvider zOffset=\"paneFooter\">\n          <ActionStateDialog dialog={currentAction.dialog} referenceElement={referenceElement} />\n        </LegacyLayerProvider>\n      )}\n      {children({handleAction})}\n    </>\n  )\n}\n\n/**\n * @internal\n */\nexport function ActionMenuButton(props: ActionMenuButtonProps) {\n  const {actionStates, disabled} = props\n  const idPrefix = useId()\n\n  const [referenceElement, setReferenceElement] = useState<HTMLButtonElement | null>(null)\n\n  const popoverProps: PopoverProps = useMemo(\n    () => ({\n      placement: 'top-end',\n      portal: true,\n      preventOverflow: true,\n    }),\n    [],\n  )\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <ActionDialogWrapper actionStates={actionStates} referenceElement={referenceElement}>\n      {({handleAction}) => (\n        <MenuButton\n          id={`${idPrefix}-action-menu`}\n          button={\n            <ContextMenuButton\n              aria-label={t('buttons.action-menu-button.aria-label')}\n              disabled={disabled}\n              data-testid=\"action-menu-button\"\n              size=\"large\"\n              tooltipProps={{content: t('buttons.action-menu-button.tooltip')}}\n            />\n          }\n          menu={\n            <Menu padding={1}>\n              {actionStates.map((actionState, idx) => (\n                <ActionMenuListItem\n                  actionState={actionState}\n                  disabled={disabled}\n                  index={idx}\n                  // eslint-disable-next-line react/no-array-index-key\n                  key={idx}\n                  onAction={handleAction}\n                />\n              ))}\n            </Menu>\n          }\n          popover={popoverProps}\n          ref={setReferenceElement}\n        />\n      )}\n    </ActionDialogWrapper>\n  )\n}\n\ninterface ActionMenuListItemProps {\n  actionState: DocumentActionDescription\n  disabled: boolean\n  index: number\n  onAction: (idx: number) => void\n}\n\nexport function ActionMenuListItem(props: ActionMenuListItemProps) {\n  const {actionState, disabled, index, onAction} = props\n  const {onHandle} = actionState\n\n  const handleClick = useCallback(() => {\n    onAction(index)\n    if (onHandle) onHandle()\n  }, [index, onAction, onHandle])\n\n  const hotkeys = useMemo(() => {\n    return actionState.shortcut\n      ? String(actionState.shortcut)\n          .split('+')\n          .map((s) => s.slice(0, 1).toUpperCase() + s.slice(1))\n      : undefined\n  }, [actionState.shortcut])\n\n  return (\n    <MenuItem\n      data-testid={`action-${actionState.label.replace(' ', '')}`}\n      disabled={disabled || Boolean(actionState.disabled)}\n      hotkeys={hotkeys}\n      icon={actionState.icon}\n      onClick={handleClick}\n      text={actionState.label}\n      tone={actionState.tone}\n      {...(actionState.disabled && {tooltipProps: {content: actionState.title}})}\n    />\n  )\n}\n", "import {\n  AddCircleIcon,\n  CloseIcon,\n  EditIcon,\n  type IconComponent,\n  PublishIcon,\n  TrashIcon,\n  UnpublishIcon,\n} from '@sanity/icons'\n\nexport const TIMELINE_ICON_COMPONENTS: {[key: string]: IconComponent | undefined} = {\n  create: AddCircleIcon,\n  delete: TrashIcon,\n  discardDraft: CloseIcon,\n  initial: AddCircleIcon,\n  editDraft: EditIcon,\n  editLive: EditIcon,\n  publish: PublishIcon,\n  unpublish: UnpublishIcon,\n}\n", "import {type IconComponent} from '@sanity/icons'\nimport {type ChunkType} from 'sanity'\n\nimport {TIMELINE_ICON_COMPONENTS} from './constants'\n\nexport function getTimelineEventIconComponent(type: ChunkType): IconComponent | undefined {\n  return TIMELINE_ICON_COMPONENTS[type]\n}\n", "import {Box, Flex, Stack} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\nexport const StackWrapper = styled(Stack)`\n  max-width: 200px;\n`\n\nexport const ListWrapper = styled(Flex)`\n  max-height: calc(100vh - 198px);\n  min-width: 244px;\n`\n\nexport const Root = styled(Box)<{$visible?: boolean}>(({$visible}) => {\n  return css`\n    opacity: 0;\n    pointer-events: none;\n\n    ${$visible &&\n    css`\n      opacity: 1;\n      pointer-events: auto;\n    `}\n  `\n})\n", "import {type ChunkType, type StudioLocaleResourceKeys} from 'sanity'\n\n/**\n * Maps from a chunk type to an i18n key for the operation\n *\n * @internal\n */\nexport const TIMELINE_ITEM_I18N_KEY_MAPPING: Record<ChunkType, StudioLocaleResourceKeys> = {\n  initial: 'timeline.operation.created-initial',\n  create: 'timeline.operation.created',\n  publish: 'timeline.operation.published',\n  editLive: 'timeline.operation.edited-live',\n  editDraft: 'timeline.operation.edited-draft',\n  unpublish: 'timeline.operation.unpublished',\n  discardDraft: 'timeline.operation.draft-discarded',\n  delete: 'timeline.operation.deleted',\n}\n", "import {\n  Box,\n  // eslint-disable-next-line no-restricted-imports\n  Button, // Button with specific styling and children behavior.\n  Flex,\n  rem,\n} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\nexport const IconWrapper = styled(Flex)(({theme}) => {\n  const borderColor = theme.sanity.color.base.skeleton?.from\n\n  return css`\n    --timeline-hairline-width: 1px;\n    position: relative;\n    z-index: 2;\n    margin: 0;\n    padding: 0;\n\n    &::before {\n      position: absolute;\n      content: '';\n      height: 100%;\n      width: var(--timeline-hairline-width);\n      background: ${borderColor};\n      top: 0;\n      left: calc((100% - var(--timeline-hairline-width)) / 2);\n      z-index: 1;\n    }\n  `\n})\n\nexport const Root = styled(Button)<{\n  $selected: boolean\n  $disabled: boolean\n}>(({$selected, $disabled}) => {\n  return css`\n    position: relative;\n    width: 100%;\n\n    /* Line styling */\n    &[data-first] ${IconWrapper}::before {\n      height: 50%;\n      top: unset;\n      bottom: 0;\n    }\n\n    &[data-last] ${IconWrapper}::before {\n      height: 50%;\n    }\n\n    ${$selected &&\n    css`\n      ${IconWrapper}::before {\n        background: transparent;\n      }\n    `}\n\n    ${$disabled &&\n    css`\n      cursor: not-allowed;\n    `}\n  `\n})\n\nexport const IconBox = styled(Box)`\n  background: var(--card-bg-color);\n  border-radius: 50px;\n  position: relative;\n  z-index: 2;\n`\n\nexport const TimestampBox = styled(Box)`\n  min-width: 1rem;\n  margin-left: ${({theme}) => `-${rem(theme.sanity.space[1])}`};\n`\n", "import {AvatarStack} from '@sanity/ui'\nimport {UserAvatar} from 'sanity'\n\ninterface UserAvatarStackProps {\n  maxLength?: number\n  userIds: string[]\n}\n\nexport function UserAvatarStack({maxLength, userIds}: UserAvatarStackProps) {\n  return (\n    <AvatarStack maxLength={maxLength}>\n      {userIds.map((userId) => (\n        <UserAvatar key={userId} user={userId} withTooltip />\n      ))}\n    </AvatarStack>\n  )\n}\n", "import {Box, Card, Flex, Stack, Text} from '@sanity/ui'\nimport {createElement, type MouseEvent, useCallback, useMemo} from 'react'\nimport {type Chunk, type ChunkType, useDateTimeFormat, useTranslation} from 'sanity'\n\nimport {type ButtonProps} from '../../../../ui-components'\nimport {getTimelineEventIconComponent} from './helpers'\nimport {TIMELINE_ITEM_I18N_KEY_MAPPING} from './timelineI18n'\nimport {IconBox, IconWrapper, Root, TimestampBox} from './timelineItem.styled'\nimport {UserAvatarStack} from './userAvatarStack'\n\nconst TIMELINE_ITEM_EVENT_TONE: Record<ChunkType | 'withinSelection', ButtonProps['tone']> = {\n  initial: 'primary',\n  create: 'primary',\n  publish: 'positive',\n  editLive: 'caution',\n  editDraft: 'caution',\n  unpublish: 'critical',\n  discardDraft: 'critical',\n  delete: 'critical',\n  withinSelection: 'primary',\n}\n\ninterface TimelineItemProps {\n  chunk: Chunk\n  isFirst: boolean\n  isLast: boolean\n  isLatest: boolean\n  isSelected: boolean\n  onSelect: (chunk: Chunk) => void\n  timestamp: string\n  type: ChunkType\n}\n\nexport function TimelineItem({\n  chunk,\n  isFirst,\n  isLast,\n  isLatest,\n  isSelected,\n  onSelect,\n  timestamp,\n  type,\n}: TimelineItemProps) {\n  const {t} = useTranslation('studio')\n\n  const iconComponent = getTimelineEventIconComponent(type)\n  const authorUserIds = Array.from(chunk.authors)\n  const isSelectable = type !== 'delete'\n  const dateFormat = useDateTimeFormat({dateStyle: 'medium', timeStyle: 'short'})\n  const formattedTimestamp = useMemo(() => {\n    const parsedDate = new Date(timestamp)\n    const formattedDate = dateFormat.format(parsedDate)\n\n    return formattedDate\n  }, [timestamp, dateFormat])\n\n  const handleClick = useCallback(\n    (evt: MouseEvent<HTMLButtonElement>) => {\n      evt.preventDefault()\n      evt.stopPropagation()\n\n      if (isSelectable) {\n        onSelect(chunk)\n      }\n    },\n    [onSelect, chunk, isSelectable],\n  )\n\n  return (\n    <Root\n      $selected={isSelected}\n      $disabled={!isSelectable}\n      data-chunk-id={chunk.id}\n      data-first={isFirst ? true : undefined}\n      data-last={isLast ? true : undefined}\n      data-ui=\"timelineItem\"\n      mode={isSelected ? 'default' : 'bleed'}\n      onClick={handleClick}\n      padding={0}\n      radius={2}\n      tone={isSelected ? 'primary' : TIMELINE_ITEM_EVENT_TONE[chunk.type]}\n    >\n      <Box paddingX={2}>\n        <Flex align=\"stretch\">\n          <IconWrapper align=\"center\">\n            <IconBox padding={2}>\n              <Text size={2}>{iconComponent && createElement(iconComponent)}</Text>\n            </IconBox>\n          </IconWrapper>\n\n          <Stack space={2} margin={2}>\n            {isLatest && (\n              <Flex>\n                <Card\n                  padding={1}\n                  radius={2}\n                  shadow={1}\n                  tone={isSelected ? 'primary' : TIMELINE_ITEM_EVENT_TONE[chunk.type]}\n                >\n                  <Text muted size={0} weight=\"medium\">\n                    {t('timeline.latest')}\n                  </Text>\n                </Card>\n              </Flex>\n            )}\n            <Box>\n              <Text size={1} weight=\"medium\">\n                {t(TIMELINE_ITEM_I18N_KEY_MAPPING[type]) || <code>{type}</code>}\n              </Text>\n            </Box>\n            <TimestampBox paddingX={1}>\n              <Text as=\"time\" size={0} muted dateTime={timestamp}>\n                {formattedTimestamp}\n              </Text>\n            </TimestampBox>\n          </Stack>\n          <Flex flex={1} justify=\"flex-end\" align=\"center\">\n            <UserAvatarStack maxLength={3} userIds={authorUserIds} />\n          </Flex>\n        </Flex>\n      </Box>\n    </Root>\n  )\n}\n", "import {Box, Text} from '@sanity/ui'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  type Chunk,\n  CommandList,\n  type CommandListRenderItemCallback,\n  LoadingBlock,\n  useTranslation,\n} from 'sanity'\n\nimport {ListWrapper, Root, StackWrapper} from './timeline.styled'\nimport {TimelineItem} from './timelineItem'\n\ninterface TimelineProps {\n  chunks: Chunk[]\n  disabledBeforeFirstChunk?: boolean\n  firstChunk?: Chunk | null\n  hasMoreChunks: boolean | null\n  lastChunk?: Chunk | null\n  onLoadMore: () => void\n  onSelect: (chunk: Chunk) => void\n}\n\nexport const Timeline = ({\n  chunks,\n  disabledBeforeFirstChunk,\n  hasMoreChunks,\n  lastChunk,\n  onLoadMore,\n  onSelect,\n  firstChunk,\n}: TimelineProps) => {\n  const [mounted, setMounted] = useState(false)\n  const {t} = useTranslation('studio')\n\n  const filteredChunks = useMemo(() => {\n    return chunks.filter((c) => {\n      if (disabledBeforeFirstChunk && firstChunk) {\n        return c.index < firstChunk.index\n      }\n      return true\n    })\n  }, [chunks, disabledBeforeFirstChunk, firstChunk])\n\n  const selectedIndex = useMemo(\n    () => (lastChunk?.id ? filteredChunks.findIndex((c) => c.id === lastChunk.id) : -1),\n    [lastChunk?.id, filteredChunks],\n  )\n\n  const renderItem = useCallback<CommandListRenderItemCallback<Chunk>>(\n    (chunk, {activeIndex}) => {\n      const isFirst = activeIndex === 0\n      const isLast = (filteredChunks && activeIndex === filteredChunks.length - 1) || false\n      return (\n        <Box paddingBottom={isLast ? 1 : 0} paddingTop={isFirst ? 1 : 0} paddingX={1}>\n          <TimelineItem\n            chunk={chunk}\n            isFirst={isFirst}\n            isLast={isLast}\n            isLatest={activeIndex === 0 && !disabledBeforeFirstChunk}\n            isSelected={activeIndex === selectedIndex}\n            onSelect={onSelect}\n            timestamp={chunk.endTimestamp}\n            type={chunk.type}\n          />\n          {activeIndex === filteredChunks.length - 1 && hasMoreChunks && <LoadingBlock />}\n        </Box>\n      )\n    },\n    [disabledBeforeFirstChunk, filteredChunks, hasMoreChunks, onSelect, selectedIndex],\n  )\n\n  useEffect(() => setMounted(true), [])\n\n  return (\n    <Root\n      /**\n       * We delay initial rendering if `selectedIndex` is present.\n       * This is a _temporary_ workaround to allow the virtual <CommandList>\n       * to scroll to a specific index prior to being displayed.\n       *\n       * Without this, there'll be a noticeable 'flash' where the virtual list\n       * will render with its child items at the top and then scroll into position.\n       */\n      $visible={!selectedIndex || mounted}\n      data-ui=\"timeline\"\n    >\n      {filteredChunks.length === 0 && (\n        <StackWrapper padding={3} space={3}>\n          <Text size={1} weight=\"medium\">\n            {t('timeline.error.no-document-history-title')}\n          </Text>\n          <Text muted size={1}>\n            {t('timeline.error.no-document-history-description')}\n          </Text>\n        </StackWrapper>\n      )}\n\n      {filteredChunks.length > 0 && (\n        <ListWrapper direction=\"column\">\n          <CommandList\n            activeItemDataAttr=\"data-hovered\"\n            ariaLabel={t('timeline.list.aria-label')}\n            autoFocus=\"list\"\n            initialIndex={selectedIndex}\n            initialScrollAlign=\"center\"\n            itemHeight={40}\n            items={filteredChunks}\n            onEndReached={onLoadMore}\n            onEndReachedIndexOffset={20}\n            overscan={5}\n            renderItem={renderItem}\n            wrapAround={false}\n          />\n        </ListWrapper>\n      )}\n    </Root>\n  )\n}\n\nTimeline.displayName = 'Timeline'\n", "import {ErrorOutlineIcon} from '@sanity/icons'\nimport {Flex, Stack} from '@sanity/ui'\nimport {TextWithTone, useTranslation} from 'sanity'\n\nexport function TimelineError() {\n  const {t} = useTranslation('studio')\n\n  return (\n    <Flex align=\"flex-start\" gap={3} padding={4}>\n      <TextWithTone tone=\"critical\">\n        <ErrorOutlineIcon />\n      </TextWithTone>\n      <Stack space={4}>\n        <TextWithTone size={1} tone=\"critical\" weight=\"medium\">\n          {t('timeline.error.load-document-changes-title')}\n        </TextWithTone>\n        <TextWithTone size={1} tone=\"critical\">\n          {t('timeline.error.load-document-changes-description')}\n        </TextWithTone>\n      </Stack>\n    </Flex>\n  )\n}\n", "import {ChevronDownIcon} from '@sanity/icons'\nimport {type Placement, useClickOutside, useGlobalKeyDown, useToast} from '@sanity/ui'\nimport {useCallback, useState} from 'react'\nimport {type Chunk, useTimelineSelector, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, Popover} from '../../../../ui-components'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {Timeline} from './timeline'\nimport {TimelineError} from './TimelineError'\nimport {TIMELINE_ITEM_I18N_KEY_MAPPING} from './timelineI18n'\n\ninterface TimelineMenuProps {\n  chunk: Chunk | null\n  mode: 'rev' | 'since'\n  placement?: Placement\n}\n\nconst Root = styled(Popover)`\n  overflow: hidden;\n  overflow: clip;\n`\n\nexport function TimelineMenu({chunk, mode, placement}: TimelineMenuProps) {\n  const {setTimelineRange, setTimelineMode, timelineError, ready, timelineStore} = useDocumentPane()\n  const [open, setOpen] = useState(false)\n  const [button, setButton] = useState<HTMLButtonElement | null>(null)\n  const [popover, setPopover] = useState<HTMLElement | null>(null)\n  const toast = useToast()\n\n  const chunks = useTimelineSelector(timelineStore, (state) => state.chunks)\n  const loading = useTimelineSelector(timelineStore, (state) => state.isLoading)\n  const hasMoreChunks = useTimelineSelector(timelineStore, (state) => state.hasMoreChunks)\n  const realRevChunk = useTimelineSelector(timelineStore, (state) => state.realRevChunk)\n  const sinceTime = useTimelineSelector(timelineStore, (state) => state.sinceTime)\n\n  const {t} = useTranslation('studio')\n\n  const handleOpen = useCallback(() => {\n    setTimelineMode(mode)\n    setOpen(true)\n  }, [mode, setTimelineMode])\n\n  const handleClose = useCallback(() => {\n    setTimelineMode('closed')\n    setOpen(false)\n  }, [setTimelineMode])\n\n  const handleClickOutside = useCallback(() => {\n    if (open) {\n      handleClose()\n    }\n  }, [handleClose, open])\n\n  const handleGlobalKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (open && (event.key === 'Escape' || event.key === 'Tab')) {\n        handleClose()\n        button?.focus()\n      }\n    },\n    [button, handleClose, open],\n  )\n\n  useClickOutside(handleClickOutside, [button, popover])\n  useGlobalKeyDown(handleGlobalKeyDown)\n\n  const selectRev = useCallback(\n    (revChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore.findRangeForRev(revChunk)\n        setTimelineMode('closed')\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [setTimelineMode, setTimelineRange, t, timelineStore, toast],\n  )\n\n  const selectSince = useCallback(\n    (sinceChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore.findRangeForSince(sinceChunk)\n        setTimelineMode('closed')\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [setTimelineMode, setTimelineRange, t, timelineStore, toast],\n  )\n\n  const handleLoadMore = useCallback(() => {\n    if (!loading) {\n      timelineStore.loadMore()\n    }\n  }, [loading, timelineStore])\n\n  const content = timelineError ? (\n    <TimelineError />\n  ) : (\n    <>\n      {mode === 'rev' && (\n        <Timeline\n          chunks={chunks}\n          firstChunk={realRevChunk}\n          hasMoreChunks={hasMoreChunks}\n          lastChunk={realRevChunk}\n          onLoadMore={handleLoadMore}\n          onSelect={selectRev}\n        />\n      )}\n      {mode === 'since' && (\n        <Timeline\n          chunks={chunks}\n          disabledBeforeFirstChunk\n          firstChunk={realRevChunk}\n          hasMoreChunks={hasMoreChunks}\n          lastChunk={sinceTime}\n          onLoadMore={handleLoadMore}\n          onSelect={selectSince}\n        />\n      )}\n    </>\n  )\n\n  const formatParams = {\n    timestamp: {dateStyle: 'medium', timeStyle: 'short'},\n  }\n\n  const revLabel = chunk\n    ? t(TIMELINE_ITEM_I18N_KEY_MAPPING[chunk.type], {\n        context: 'timestamp',\n        timestamp: new Date(chunk?.endTimestamp),\n        formatParams,\n      })\n    : t('timeline.latest-version')\n\n  const sinceLabel = chunk\n    ? t('timeline.since', {\n        timestamp: new Date(chunk?.endTimestamp),\n        formatParams,\n      })\n    : t('timeline.since-version-missing')\n\n  const buttonLabel = mode === 'rev' ? revLabel : sinceLabel\n\n  return (\n    <Root\n      constrainSize\n      content={open && content}\n      data-ui=\"versionMenu\"\n      open={open}\n      placement={placement}\n      portal\n      ref={setPopover}\n    >\n      <Button\n        disabled={!ready}\n        mode=\"bleed\"\n        iconRight={ChevronDownIcon}\n        onClick={open ? handleClose : handleOpen}\n        ref={setButton}\n        selected={open}\n        style={{maxWidth: '100%'}}\n        text={ready ? buttonLabel : t('timeline.loading-history')}\n      />\n    </Root>\n  )\n}\n", "import {TabList} from '@sanity/ui'\nimport {type ComponentType, type ReactNode, useCallback} from 'react'\n\nimport {Tab} from '../../../../../ui-components'\nimport {usePaneRouter} from '../../../../components'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nexport function DocumentHeaderTabs() {\n  const {activeViewId, paneKey, views} = useDocumentPane()\n  const tabPanelId = `${paneKey}tabpanel`\n\n  return (\n    <TabList space={1}>\n      {views.map((view, index) => (\n        <DocumentHeaderTab\n          icon={view.icon}\n          id={`${paneKey}tab-${view.id}`}\n          isActive={activeViewId === view.id}\n          key={view.id}\n          label={view.title}\n          tabPanelId={tabPanelId}\n          viewId={index === 0 ? null : view.id ?? null}\n        />\n      ))}\n    </TabList>\n  )\n}\n\nfunction DocumentHeaderTab(props: {\n  icon?: ComponentType | ReactNode\n  id: string\n  isActive: boolean\n  label: string\n  tabPanelId: string\n  viewId: string | null\n}) {\n  const {icon, id, isActive, label, tabPanelId, viewId, ...rest} = props\n  const {ready} = useDocumentPane()\n  const {setView} = usePaneRouter()\n  const handleClick = useCallback(() => setView(viewId), [setView, viewId])\n\n  return (\n    <Tab\n      {...rest} // required to enable <TabList> keyboard navigation\n      aria-controls={tabPanelId}\n      disabled={!ready}\n      icon={icon}\n      id={id}\n      label={label}\n      onClick={handleClick}\n      selected={isActive}\n    />\n  )\n}\n", "import {type ReactElement} from 'react'\nimport {unstable_useValuePreview as useValuePreview, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nexport function DocumentHeaderTitle(): ReactElement {\n  const {connectionState, schemaType, title, value: documentValue} = useDocumentPane()\n  const subscribed = Boolean(documentValue) && connectionState !== 'connecting'\n\n  const {error, value} = useValuePreview({\n    enabled: subscribed,\n    schemaType,\n    value: documentValue,\n  })\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (connectionState === 'connecting') {\n    return <></>\n  }\n\n  if (title) {\n    return <>{title}</>\n  }\n\n  if (!documentValue) {\n    return (\n      <>\n        {t('panes.document-header-title.new.text', {\n          schemaType: schemaType?.title || schemaType?.name,\n        })}\n      </>\n    )\n  }\n\n  if (error) {\n    return <>{t('panes.document-header-title.error.text', {error: error.message})}</>\n  }\n\n  return (\n    <>\n      {value?.title || (\n        <span style={{color: 'var(--card-muted-fg-color)'}}>\n          {t('panes.document-header-title.untitled.text')}\n        </span>\n      )}\n    </>\n  )\n}\n", "import {ArrowLeftIcon, CloseIcon, SplitVerticalIcon} from '@sanity/icons'\nimport {Flex} from '@sanity/ui'\nimport {createElement, type ForwardedRef, forwardRef, memo, useMemo, useState} from 'react'\nimport {useFieldActions, useTimelineSelector, useTranslation} from 'sanity'\n\nimport {Button, TooltipDelayGroupProvider} from '../../../../../ui-components'\nimport {\n  PaneContextMenuButton,\n  PaneHeader,\n  PaneHeaderActionButton,\n  RenderActionCollectionState,\n  usePane,\n  usePaneRouter,\n} from '../../../../components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {isMenuNodeButton, isNotMenuNodeButton, resolveMenuNodes} from '../../../../menuNodes'\nimport {type PaneMenuItem} from '../../../../types'\nimport {useStructureTool} from '../../../../useStructureTool'\nimport {ActionDialogWrapper, ActionMenuListItem} from '../../statusBar/ActionMenuButton'\nimport {TimelineMenu} from '../../timeline'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {DocumentHeaderTabs} from './DocumentHeaderTabs'\nimport {DocumentHeaderTitle} from './DocumentHeaderTitle'\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface DocumentPanelHeaderProps {\n  menuItems: PaneMenuItem[]\n}\n\nexport const DocumentPanelHeader = memo(\n  forwardRef(function DocumentPanelHeader(\n    _props: DocumentPanelHeaderProps,\n    ref: ForwardedRef<HTMLDivElement>,\n  ) {\n    const {menuItems} = _props\n    const {\n      actions,\n      editState,\n      onMenuAction,\n      onPaneClose,\n      onPaneSplit,\n      menuItemGroups,\n      schemaType,\n      timelineStore,\n      connectionState,\n      views,\n      unstable_languageFilter,\n    } = useDocumentPane()\n    const {features} = useStructureTool()\n    const {index, BackLink, hasGroupSiblings} = usePaneRouter()\n    const {actions: fieldActions} = useFieldActions()\n    const [referenceElement, setReferenceElement] = useState<HTMLElement | null>(null)\n\n    const menuNodes = useMemo(\n      () =>\n        resolveMenuNodes({actionHandler: onMenuAction, fieldActions, menuItems, menuItemGroups}),\n      [onMenuAction, fieldActions, menuItemGroups, menuItems],\n    )\n\n    const menuButtonNodes = useMemo(() => menuNodes.filter(isMenuNodeButton), [menuNodes])\n    const contextMenuNodes = useMemo(() => menuNodes.filter(isNotMenuNodeButton), [menuNodes])\n    const showTabs = views.length > 1\n\n    // Subscribe to external timeline state changes\n    const rev = useTimelineSelector(timelineStore, (state) => state.revTime)\n\n    const {collapsed, isLast} = usePane()\n    // Prevent focus if this is the last (non-collapsed) pane.\n    const tabIndex = isLast && !collapsed ? -1 : 0\n\n    // there are three kinds of buttons possible:\n    //\n    // 1. split pane - creates a new split pane\n    // 2. close split pane — closes the current split pane\n    // 3. close pane group — closes the current pane group\n\n    // show the split pane button if they're enabled and there is more than one\n    // view available to use to create a split view\n    const showSplitPaneButton = features.splitViews && onPaneSplit && views.length > 1\n\n    // show the split pane button close button if the split button is showing\n    // and there is more than one split pane open (aka has-siblings)\n    const showSplitPaneCloseButton = showSplitPaneButton && hasGroupSiblings\n\n    // show the back button if both the feature is enabled and the current pane\n    // is not the first\n    const showBackButton = features.backButton && index > 0\n\n    // show the pane group close button if the `showSplitPaneCloseButton` is\n    // _not_ showing (the split pane button replaces the group close button)\n    // and if the back button is not showing (the back button and the close\n    // button do the same thing and shouldn't be shown at the same time)\n    // and if a BackLink component was provided\n    const showPaneGroupCloseButton = !showSplitPaneCloseButton && !showBackButton && !!BackLink\n\n    const {t} = useTranslation(structureLocaleNamespace)\n\n    return (\n      <TooltipDelayGroupProvider>\n        <PaneHeader\n          border\n          ref={ref}\n          loading={connectionState === 'connecting'}\n          title={<DocumentHeaderTitle />}\n          tabs={showTabs && <DocumentHeaderTabs />}\n          tabIndex={tabIndex}\n          backButton={\n            showBackButton && (\n              <Button\n                as={BackLink}\n                data-as=\"a\"\n                icon={ArrowLeftIcon}\n                mode=\"bleed\"\n                tooltipProps={{content: t('pane-header.back-button.text')}}\n              />\n            )\n          }\n          subActions={<TimelineMenu chunk={rev} mode=\"rev\" placement=\"bottom-end\" />}\n          actions={\n            <Flex align=\"center\" gap={1}>\n              {unstable_languageFilter.length > 0 && (\n                <>\n                  {unstable_languageFilter.map((languageFilterComponent, idx) => {\n                    return createElement(languageFilterComponent, {\n                      // eslint-disable-next-line react/no-array-index-key\n                      key: `language-filter-${idx}`,\n                      schemaType,\n                    })\n                  })}\n                </>\n              )}\n\n              {menuButtonNodes.map((item) => (\n                <PaneHeaderActionButton key={item.key} node={item} />\n              ))}\n              {editState && (\n                <RenderActionCollectionState\n                  actions={actions || []}\n                  actionProps={editState}\n                  group=\"paneActions\"\n                >\n                  {({states}) => (\n                    <ActionDialogWrapper actionStates={states} referenceElement={referenceElement}>\n                      {({handleAction}) => (\n                        <div ref={setReferenceElement}>\n                          <PaneContextMenuButton\n                            nodes={contextMenuNodes}\n                            key=\"context-menu\"\n                            actionsNodes={\n                              states.length > 0\n                                ? states.map((actionState, actionIndex) => (\n                                    <ActionMenuListItem\n                                      key={actionState.label}\n                                      actionState={actionState}\n                                      disabled={Boolean(actionState.disabled)}\n                                      index={actionIndex}\n                                      onAction={handleAction}\n                                    />\n                                  ))\n                                : undefined\n                            }\n                          />\n                        </div>\n                      )}\n                    </ActionDialogWrapper>\n                  )}\n                </RenderActionCollectionState>\n              )}\n\n              {showSplitPaneButton && (\n                <Button\n                  aria-label={t('buttons.split-pane-button.aria-label')}\n                  icon={SplitVerticalIcon}\n                  key=\"split-pane-button\"\n                  mode=\"bleed\"\n                  onClick={onPaneSplit}\n                  tooltipProps={{content: t('buttons.split-pane-button.tooltip')}}\n                />\n              )}\n\n              {showSplitPaneCloseButton && (\n                <Button\n                  icon={CloseIcon}\n                  key=\"close-view-button\"\n                  mode=\"bleed\"\n                  onClick={onPaneClose}\n                  tooltipProps={{content: t('buttons.split-pane-close-button.title')}}\n                />\n              )}\n\n              {showPaneGroupCloseButton && (\n                <Button\n                  icon={CloseIcon}\n                  key=\"close-view-button\"\n                  mode=\"bleed\"\n                  tooltipProps={{content: t('buttons.split-pane-close-group-button.title')}}\n                  as={BackLink}\n                />\n              )}\n            </Flex>\n          }\n        />\n      </TooltipDelayGroupProvider>\n    )\n  }),\n)\n", "import {Badge, type BadgeTone, Inline} from '@sanity/ui'\nimport {type DocumentBadgeDescription} from 'sanity'\n\nimport {Tooltip} from '../../../../ui-components'\nimport {RenderBadgeCollectionState} from '../../../components'\nimport {useDocumentPane} from '../useDocumentPane'\n\ninterface DocumentBadgesInnerProps {\n  states: DocumentBadgeDescription[]\n}\n\nconst BADGE_TONES: Record<string, BadgeTone | undefined> = {\n  primary: 'primary',\n  success: 'positive',\n  warning: 'caution',\n  danger: 'critical',\n}\n\nfunction DocumentBadgesInner({states}: DocumentBadgesInnerProps) {\n  if (states.length === 0) {\n    return null\n  }\n  return (\n    <Inline space={1}>\n      {states.map((badge, index) => (\n        <Tooltip\n          content={badge.title}\n          disabled={!badge.title}\n          key={String(index)}\n          placement=\"top\"\n          portal\n        >\n          <Badge\n            fontSize={1}\n            mode=\"outline\"\n            paddingX={2}\n            paddingY={1}\n            radius={4}\n            tone={badge.color ? BADGE_TONES[badge.color] : undefined}\n            style={{whiteSpace: 'nowrap'}}\n          >\n            {badge.label}\n          </Badge>\n        </Tooltip>\n      ))}\n    </Inline>\n  )\n}\n\nexport function DocumentBadges() {\n  const {badges, editState} = useDocumentPane()\n\n  if (!editState || !badges) return null\n\n  return (\n    <RenderBadgeCollectionState badges={badges} badgeProps={editState as any}>\n      {({states}) => <DocumentBadgesInner states={states} />}\n    </RenderBadgeCollectionState>\n  )\n}\n", "/* eslint-disable import/no-extraneous-dependencies */\n\nimport {TrashIcon} from '@sanity/icons'\nimport {useCallback, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useTranslation,\n} from 'sanity'\n\nimport {ConfirmDeleteDialog} from '../components'\nimport {structureLocaleNamespace} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\n\nconst DISABLED_REASON_TITLE_KEY = {\n  NOTHING_TO_DELETE: 'action.delete.disabled.nothing-to-delete',\n  NOT_READY: 'action.delete.disabled.not-ready',\n}\n\n/** @internal */\nexport const DeleteAction: DocumentActionComponent = ({id, type, draft, onComplete}) => {\n  const {setIsDeleting: paneSetIsDeleting} = useDocumentPane()\n  const {delete: deleteOp} = useDocumentOperation(id, type)\n  const [isDeleting, setIsDeleting] = useState(false)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleCancel = useCallback(() => {\n    setConfirmDialogOpen(false)\n    onComplete()\n  }, [onComplete])\n\n  const handleConfirm = useCallback(() => {\n    setIsDeleting(true)\n    setConfirmDialogOpen(false)\n    paneSetIsDeleting(true)\n    deleteOp.execute()\n    onComplete()\n  }, [deleteOp, onComplete, paneSetIsDeleting])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'delete',\n  })\n\n  const currentUser = useCurrentUser()\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      tone: 'critical',\n      icon: TrashIcon,\n      disabled: true,\n      label: t('action.delete.label'),\n      title: <InsufficientPermissionsMessage context=\"delete-document\" currentUser={currentUser} />,\n    }\n  }\n\n  return {\n    tone: 'critical',\n    icon: TrashIcon,\n    disabled: isDeleting || Boolean(deleteOp.disabled) || isPermissionsLoading,\n    title: (deleteOp.disabled && t(DISABLED_REASON_TITLE_KEY[deleteOp.disabled])) || '',\n    label: isDeleting ? t('action.delete.running.label') : t('action.delete.label'),\n    shortcut: 'Ctrl+Alt+D',\n    onHandle: handle,\n    dialog: isConfirmDialogOpen && {\n      type: 'custom',\n      component: (\n        <ConfirmDeleteDialog\n          // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n          action=\"delete\"\n          id={draft?._id || id}\n          type={type}\n          onCancel={handleCancel}\n          onConfirm={handleConfirm}\n        />\n      ),\n    },\n  }\n}\n\nDeleteAction.action = 'delete'\n", "/* eslint-disable import/no-extraneous-dependencies */\n\nimport {ResetIcon} from '@sanity/icons'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionDialogProps,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useTranslation,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\n\nconst DISABLED_REASON_KEY = {\n  NO_CHANGES: 'action.discard-changes.disabled.no-changes',\n  NOT_PUBLISHED: 'action.discard-changes.disabled.not-published',\n  NOT_READY: 'action.discard-changes.disabled.not-ready',\n} as const\n\n/** @internal */\nexport const DiscardChangesAction: DocumentActionComponent = ({\n  id,\n  type,\n  published,\n  liveEdit,\n  onComplete,\n}) => {\n  const {discardChanges} = useDocumentOperation(id, type)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'discardDraft',\n  })\n  const currentUser = useCurrentUser()\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleConfirm = useCallback(() => {\n    discardChanges.execute()\n    onComplete()\n  }, [discardChanges, onComplete])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const dialog: DocumentActionDialogProps | false = useMemo(\n    () =>\n      isConfirmDialogOpen && {\n        type: 'confirm',\n        tone: 'critical',\n        onCancel: onComplete,\n        onConfirm: handleConfirm,\n        message: t('action.discard-changes.confirm-dialog.confirm-discard-changes'),\n      },\n    [handleConfirm, isConfirmDialogOpen, onComplete, t],\n  )\n\n  if (!published || liveEdit) {\n    return null\n  }\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      tone: 'critical',\n      icon: ResetIcon,\n      disabled: true,\n      label: t('action.discard-changes.label'),\n      title: <InsufficientPermissionsMessage context=\"discard-changes\" currentUser={currentUser} />,\n    }\n  }\n\n  return {\n    tone: 'critical',\n    icon: ResetIcon,\n    disabled: Boolean(discardChanges.disabled) || isPermissionsLoading,\n    title: (discardChanges.disabled && DISABLED_REASON_KEY[discardChanges.disabled]) || '',\n    label: t('action.discard-changes.label'),\n    onHandle: handle,\n    dialog,\n  }\n}\n\nDiscardChangesAction.action = 'discardChanges'\n", "import {CopyIcon} from '@sanity/icons'\nimport {uuid} from '@sanity/uuid'\nimport {useCallback, useState} from 'react'\nimport {filter, firstValueFrom} from 'rxjs'\nimport {\n  type DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useDocumentStore,\n  useTranslation,\n} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {structureLocaleNamespace} from '../i18n'\n\nconst DISABLED_REASON_KEY = {\n  NOTHING_TO_DUPLICATE: 'action.duplicate.disabled.nothing-to-duplicate',\n  NOT_READY: 'action.duplicate.disabled.not-ready',\n}\n\n/** @internal */\nexport const DuplicateAction: DocumentActionComponent = ({id, type, onComplete}) => {\n  const documentStore = useDocumentStore()\n  const {duplicate} = useDocumentOperation(id, type)\n  const {navigateIntent} = useRouter()\n  const [isDuplicating, setDuplicating] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'duplicate',\n  })\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const currentUser = useCurrentUser()\n\n  const handle = useCallback(async () => {\n    const dupeId = uuid()\n\n    setDuplicating(true)\n\n    // set up the listener before executing\n    const duplicateSuccess = firstValueFrom(\n      documentStore.pair\n        .operationEvents(id, type)\n        .pipe(filter((e) => e.op === 'duplicate' && e.type === 'success')),\n    )\n    duplicate.execute(dupeId)\n\n    // only navigate to the duplicated document when the operation is successful\n    await duplicateSuccess\n    navigateIntent('edit', {id: dupeId, type})\n\n    onComplete()\n  }, [documentStore.pair, duplicate, id, navigateIntent, onComplete, type])\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      icon: CopyIcon,\n      disabled: true,\n      label: t('action.duplicate.label'),\n      title: (\n        <InsufficientPermissionsMessage context=\"duplicate-document\" currentUser={currentUser} />\n      ),\n    }\n  }\n\n  return {\n    icon: CopyIcon,\n    disabled: isDuplicating || Boolean(duplicate.disabled) || isPermissionsLoading,\n    label: isDuplicating ? t('action.duplicate.running.label') : t('action.duplicate.label'),\n    title: duplicate.disabled ? t(DISABLED_REASON_KEY[duplicate.disabled]) : '',\n    onHandle: handle,\n  }\n}\n\nDuplicateAction.action = 'duplicate'\n", "import {RestoreIcon} from '@sanity/icons'\nimport {useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionDialogProps,\n  useDocumentOperation,\n  useDocumentOperationEvent,\n  useTranslation,\n} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {structureLocaleNamespace} from '../i18n'\n\n/** @internal */\nexport const HistoryRestoreAction: DocumentActionComponent = ({id, type, revision, onComplete}) => {\n  const {restore} = useDocumentOperation(id, type)\n  const event = useDocumentOperationEvent(id, type)\n  const {navigateIntent} = useRouter()\n  const prevEvent = useRef(event)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleConfirm = useCallback(() => {\n    restore.execute(revision!)\n    onComplete()\n  }, [restore, revision, onComplete])\n\n  /**\n   * If the restore operation is successful, navigate to the document edit view\n   */\n  useEffect(() => {\n    if (!event || event === prevEvent.current) return\n\n    if (event.type === 'success' && event.op === 'restore') {\n      navigateIntent('edit', {id, type})\n    }\n\n    prevEvent.current = event\n  }, [event, id, navigateIntent, type])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const dialog: DocumentActionDialogProps | null = useMemo(() => {\n    if (isConfirmDialogOpen) {\n      return {\n        type: 'confirm',\n        tone: 'critical',\n        onCancel: onComplete,\n        onConfirm: handleConfirm,\n        message: t('action.restore.confirm.message'),\n      }\n    }\n\n    return null\n  }, [handleConfirm, isConfirmDialogOpen, onComplete, t])\n\n  const isRevisionInitialVersion = revision === '@initial'\n  const isRevisionLatestVersion = revision === undefined // undefined means latest version\n\n  if (isRevisionLatestVersion) {\n    return null\n  }\n\n  return {\n    label: t('action.restore.label'),\n    color: 'primary',\n    onHandle: handle,\n    title: t(\n      isRevisionInitialVersion\n        ? 'action.restore.disabled.cannot-restore-initial'\n        : 'action.restore.tooltip',\n    ),\n    icon: RestoreIcon,\n    dialog,\n    disabled: isRevisionInitialVersion,\n  }\n}\n\nHistoryRestoreAction.action = 'restore'\n", "import {defineEvent} from '@sanity/telemetry'\n\ninterface DocumentPublishedInfo {\n  /**\n   * The document was created and published straight away\n   */\n  publishedImmediately: boolean\n\n  /**\n   * The document had a previously published version when it was published\n   */\n  previouslyPublished: boolean\n}\nexport const DocumentPublished = defineEvent<DocumentPublishedInfo>({\n  name: 'Document Published',\n  version: 1,\n  description: 'User clicked the \"Publish\" button in the document pane',\n})\n", "import {PublishIcon} from '@sanity/icons'\nimport {useTelemetry} from '@sanity/telemetry/react'\nimport {isValidationErrorMarker} from '@sanity/types'\nimport {useCallback, useEffect, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  type TFunction,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useEditState,\n  useRelativeTime,\n  useSyncState,\n  useTranslation,\n  useValidationStatus,\n} from 'sanity'\n\nimport {structureLocaleNamespace, type StructureLocaleResourceKeys} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\nimport {DocumentPublished} from './__telemetry__/documentActions.telemetry'\n\nconst DISABLED_REASON_TITLE_KEY: Record<string, StructureLocaleResourceKeys> = {\n  LIVE_EDIT_ENABLED: 'action.publish.live-edit.publish-disabled',\n  ALREADY_PUBLISHED: 'action.publish.already-published.no-time-ago.tooltip',\n  NO_CHANGES: 'action.publish.no-changes.tooltip',\n  NOT_READY: 'action.publish.disabled.not-ready',\n} as const\n\nfunction getDisabledReason(\n  reason: keyof typeof DISABLED_REASON_TITLE_KEY,\n  publishedAt: string | undefined,\n  t: TFunction,\n) {\n  if (reason === 'ALREADY_PUBLISHED' && publishedAt) {\n    return <AlreadyPublished publishedAt={publishedAt} />\n  }\n  return t(DISABLED_REASON_TITLE_KEY[reason])\n}\n\nfunction AlreadyPublished({publishedAt}: {publishedAt: string}) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const timeSincePublished = useRelativeTime(publishedAt, {useTemporalPhrase: true})\n  return <span>{t('action.publish.already-published.tooltip', {timeSincePublished})}</span>\n}\n\n/** @internal */\n// eslint-disable-next-line complexity\nexport const PublishAction: DocumentActionComponent = (props) => {\n  const {id, type, liveEdit, draft, published} = props\n  const [publishState, setPublishState] = useState<'publishing' | 'published' | null>(null)\n  const {publish} = useDocumentOperation(id, type)\n  const validationStatus = useValidationStatus(id, type)\n  const syncState = useSyncState(id, type)\n  const {changesOpen, onHistoryOpen, documentId, documentType} = useDocumentPane()\n  const editState = useEditState(documentId, documentType)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const revision = (editState?.draft || editState?.published || {})._rev\n\n  const hasValidationErrors = validationStatus.validation.some(isValidationErrorMarker)\n  // we use this to \"schedule\" publish after pending tasks (e.g. validation and sync) has completed\n  const [publishScheduled, setPublishScheduled] = useState<boolean>(false)\n  const isSyncing = syncState.isSyncing\n  const isValidating = validationStatus.isValidating\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'publish',\n  })\n\n  const currentUser = useCurrentUser()\n\n  // eslint-disable-next-line no-nested-ternary\n  const title = publish.disabled\n    ? getDisabledReason(publish.disabled, (published || {})._updatedAt, t) || ''\n    : hasValidationErrors\n      ? t('action.publish.validation-issues.tooltip')\n      : ''\n\n  const hasDraft = Boolean(draft)\n\n  const doPublish = useCallback(() => {\n    publish.execute()\n    setPublishState('publishing')\n  }, [publish])\n\n  useEffect(() => {\n    // make sure the validation status is about the current revision and not an earlier one\n    const validationComplete =\n      validationStatus.isValidating === false && validationStatus.revision !== revision\n\n    if (!publishScheduled || isSyncing || !validationComplete) {\n      return\n    }\n\n    if (!hasValidationErrors) {\n      doPublish()\n    }\n    setPublishScheduled(false)\n  }, [\n    isSyncing,\n    doPublish,\n    hasValidationErrors,\n    publishScheduled,\n    validationStatus.revision,\n    revision,\n    isValidating,\n    validationStatus.isValidating,\n  ])\n\n  useEffect(() => {\n    const didPublish = publishState === 'publishing' && !hasDraft\n    if (didPublish) {\n      if (changesOpen) {\n        // Re-open the panel\n        onHistoryOpen()\n      }\n    }\n    const nextState = didPublish ? 'published' : null\n    const delay = didPublish ? 200 : 4000\n    const timer = setTimeout(() => {\n      setPublishState(nextState)\n    }, delay)\n    return () => clearTimeout(timer)\n  }, [changesOpen, publishState, hasDraft, onHistoryOpen])\n\n  const telemetry = useTelemetry()\n\n  const handle = useCallback(() => {\n    telemetry.log(DocumentPublished, {\n      publishedImmediately: !draft?._createdAt,\n      previouslyPublished: Boolean(published),\n    })\n    if (\n      syncState.isSyncing ||\n      validationStatus.isValidating ||\n      validationStatus.revision !== revision\n    ) {\n      setPublishScheduled(true)\n    } else {\n      doPublish()\n    }\n  }, [\n    telemetry,\n    draft?._createdAt,\n    published,\n    syncState.isSyncing,\n    validationStatus.isValidating,\n    validationStatus.revision,\n    revision,\n    doPublish,\n  ])\n\n  if (liveEdit) {\n    return {\n      tone: 'default',\n      icon: PublishIcon,\n      label: t('action.publish.live-edit.label'),\n      title: t('action.publish.live-edit.tooltip'),\n      disabled: true,\n    }\n  }\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      tone: 'default',\n      icon: PublishIcon,\n      label: 'Publish',\n      title: (\n        <InsufficientPermissionsMessage context=\"publish-document\" currentUser={currentUser} />\n      ),\n      disabled: true,\n    }\n  }\n\n  const disabled = Boolean(\n    publishScheduled ||\n      editState?.transactionSyncLock?.enabled ||\n      publishState === 'publishing' ||\n      publishState === 'published' ||\n      hasValidationErrors ||\n      publish.disabled,\n  )\n\n  return {\n    disabled: disabled || isPermissionsLoading,\n    tone: 'default',\n    label:\n      // eslint-disable-next-line no-nested-ternary\n      publishState === 'published'\n        ? t('action.publish.published.label')\n        : publishScheduled || publishState === 'publishing'\n          ? t('action.publish.running.label')\n          : t('action.publish.draft.label'),\n    // @todo: Implement loading state, to show a `<Button loading />` state\n    // loading: publishScheduled || publishState === 'publishing',\n    icon: PublishIcon,\n    // eslint-disable-next-line no-nested-ternary\n    title: publishScheduled\n      ? t('action.publish.waiting')\n      : publishState === 'published' || publishState === 'publishing'\n        ? null\n        : title,\n    shortcut: disabled || publishScheduled ? null : 'Ctrl+Alt+P',\n    onHandle: handle,\n  }\n}\n\nPublishAction.action = 'publish'\n", "import {UnpublishIcon} from '@sanity/icons'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionModalDialogProps,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useTranslation,\n} from 'sanity'\n\nimport {ConfirmDeleteDialog} from '../components'\nimport {structureLocaleNamespace} from '../i18n'\n\nconst DISABLED_REASON_KEY = {\n  NOT_PUBLISHED: 'action.unpublish.disabled.not-published',\n  NOT_READY: 'action.unpublish.disabled.not-ready',\n  LIVE_EDIT_ENABLED: 'action.unpublish.disabled.live-edit-enabled',\n}\n\n/** @internal */\nexport const UnpublishAction: DocumentActionComponent = ({\n  id,\n  type,\n  draft,\n  onComplete,\n  liveEdit,\n}) => {\n  const {unpublish} = useDocumentOperation(id, type)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'unpublish',\n  })\n  const currentUser = useCurrentUser()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleCancel = useCallback(() => {\n    setConfirmDialogOpen(false)\n    onComplete()\n  }, [onComplete])\n\n  const handleConfirm = useCallback(() => {\n    setConfirmDialogOpen(false)\n    unpublish.execute()\n    onComplete()\n  }, [onComplete, unpublish])\n\n  const dialog: DocumentActionModalDialogProps | null = useMemo(() => {\n    if (isConfirmDialogOpen) {\n      return {\n        type: 'dialog',\n        onClose: onComplete,\n        content: (\n          <ConfirmDeleteDialog\n            id={draft?._id || id}\n            type={type}\n            // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n            action=\"unpublish\"\n            onCancel={handleCancel}\n            onConfirm={handleConfirm}\n          />\n        ),\n      }\n    }\n\n    return null\n  }, [draft, id, handleCancel, handleConfirm, isConfirmDialogOpen, onComplete, type])\n\n  if (liveEdit) {\n    return null\n  }\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      tone: 'critical',\n      icon: UnpublishIcon,\n      label: 'Unpublish',\n      title: (\n        <InsufficientPermissionsMessage context=\"unpublish-document\" currentUser={currentUser} />\n      ),\n      disabled: true,\n    }\n  }\n\n  return {\n    tone: 'critical',\n    icon: UnpublishIcon,\n    disabled: Boolean(unpublish.disabled) || isPermissionsLoading,\n    label: t('action.unpublish.label'),\n    title: unpublish.disabled ? t(DISABLED_REASON_KEY[unpublish.disabled]) : '',\n    onHandle: () => setConfirmDialogOpen(true),\n    dialog,\n  }\n}\n\nUnpublishAction.action = 'unpublish'\n", "/* eslint-disable camelcase */\nimport {Flex, Hotkeys, LayerProvider, Stack, Text} from '@sanity/ui'\nimport {memo, useMemo, useState} from 'react'\nimport {type DocumentActionDescription, useTimelineSelector} from 'sanity'\n\nimport {Button, Tooltip} from '../../../../ui-components'\nimport {RenderActionCollectionState} from '../../../components'\nimport {HistoryRestoreAction} from '../../../documentActions'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {ActionMenuButton} from './ActionMenuButton'\nimport {ActionStateDialog} from './ActionStateDialog'\n\ninterface DocumentStatusBarActionsInnerProps {\n  disabled: boolean\n  showMenu: boolean\n  states: DocumentActionDescription[]\n}\n\nfunction DocumentStatusBarActionsInner(props: DocumentStatusBarActionsInnerProps) {\n  const {disabled, showMenu, states} = props\n  const {__internal_tasks} = useDocumentPane()\n  const [firstActionState, ...menuActionStates] = states\n  const [buttonElement, setButtonElement] = useState<HTMLButtonElement | null>(null)\n\n  // TODO: This could be refactored to use the tooltip from the button if the firstAction.title was updated to a string.\n  const tooltipContent = useMemo(() => {\n    if (!firstActionState || (!firstActionState.title && !firstActionState.shortcut)) return null\n\n    return (\n      <Flex style={{maxWidth: 300}} align=\"center\" gap={3}>\n        {firstActionState.title && <Text size={1}>{firstActionState.title}</Text>}\n        {firstActionState.shortcut && (\n          <Hotkeys\n            fontSize={1}\n            style={{marginTop: -4, marginBottom: -4}}\n            keys={String(firstActionState.shortcut)\n              .split('+')\n              .map((s) => s.slice(0, 1).toUpperCase() + s.slice(1).toLowerCase())}\n          />\n        )}\n      </Flex>\n    )\n  }, [firstActionState])\n\n  return (\n    <Flex align=\"center\" gap={1}>\n      {__internal_tasks && __internal_tasks.footerAction}\n      {firstActionState && (\n        <LayerProvider zOffset={200}>\n          <Tooltip disabled={!tooltipContent} content={tooltipContent} placement=\"top\">\n            <Stack>\n              <Button\n                data-testid={`action-${firstActionState.label}`}\n                disabled={disabled || Boolean(firstActionState.disabled)}\n                icon={firstActionState.icon}\n                // eslint-disable-next-line react/jsx-handler-names\n                onClick={firstActionState.onHandle}\n                ref={setButtonElement}\n                size=\"large\"\n                text={firstActionState.label}\n                tone={firstActionState.tone || 'primary'}\n              />\n            </Stack>\n          </Tooltip>\n        </LayerProvider>\n      )}\n      {showMenu && menuActionStates.length > 0 && (\n        <ActionMenuButton actionStates={menuActionStates} disabled={disabled} />\n      )}\n      {firstActionState && firstActionState.dialog && (\n        <ActionStateDialog dialog={firstActionState.dialog} referenceElement={buttonElement} />\n      )}\n    </Flex>\n  )\n}\n\nexport const DocumentStatusBarActions = memo(function DocumentStatusBarActions() {\n  const {actions, connectionState, documentId, editState} = useDocumentPane()\n  // const [isMenuOpen, setMenuOpen] = useState(false)\n  // const handleMenuOpen = useCallback(() => setMenuOpen(true), [])\n  // const handleMenuClose = useCallback(() => setMenuOpen(false), [])\n  // const handleActionComplete = useCallback(() => setMenuOpen(false), [])\n\n  if (!actions || !editState) {\n    return null\n  }\n\n  return (\n    <RenderActionCollectionState\n      // component={}\n      // onActionComplete={handleActionComplete}\n      actions={actions}\n      actionProps={editState}\n      group=\"default\"\n    >\n      {({states}) => (\n        <DocumentStatusBarActionsInner\n          disabled={connectionState !== 'connected'}\n          // isMenuOpen={isMenuOpen}\n          // onMenuOpen={handleMenuOpen}\n          // onMenuClose={handleMenuClose}\n          showMenu={actions.length > 1}\n          states={states}\n          // Use document ID as key to make sure that the actions state is reset when the document changes\n          key={documentId}\n        />\n      )}\n    </RenderActionCollectionState>\n  )\n})\n\nexport const HistoryStatusBarActions = memo(function HistoryStatusBarActions() {\n  const {connectionState, editState, timelineStore} = useDocumentPane()\n\n  // Subscribe to external timeline state changes\n  const revTime = useTimelineSelector(timelineStore, (state) => state.revTime)\n\n  const revision = revTime?.id || ''\n  const disabled = (editState?.draft || editState?.published || {})._rev === revision\n  const actionProps = useMemo(() => ({...(editState || {}), revision}), [editState, revision])\n  const historyActions = useMemo(() => [HistoryRestoreAction], [])\n\n  return (\n    <RenderActionCollectionState\n      actions={historyActions}\n      actionProps={actionProps as any}\n      group=\"default\"\n    >\n      {({states}) => (\n        <DocumentStatusBarActionsInner\n          disabled={connectionState !== 'connected' || Boolean(disabled)}\n          showMenu={false}\n          states={states}\n        />\n      )}\n    </RenderActionCollectionState>\n  )\n})\n", "import {motion} from 'framer-motion'\nimport {type ComponentProps} from 'react'\nimport {keyframes, styled} from 'styled-components'\n\nconst StyledMotionPath = styled(motion.path)`\n  transform-origin: center;\n`\n\ntype MotionCircleProps = Omit<ComponentProps<typeof motion.circle>, 'd'>\ntype MotionPathProps = Omit<ComponentProps<typeof motion.path>, 'd' | 'ref'>\n\nconst Circle = (props: MotionCircleProps) => (\n  <motion.circle fill=\"none\" r=\"8\" cx=\"12.5\" cy=\"12.5\" strokeWidth=\"1.2\" {...props} />\n)\nconst Arrows = (props: MotionPathProps) => (\n  <StyledMotionPath\n    fill=\"none\"\n    d=\"M14 17.5619L11.5 20.5L14.5 23.0619M11 7.43811L13.5 4.50001L10.5 1.93811\"\n    {...props}\n  />\n)\nconst Checkmark = (props: MotionPathProps) => (\n  <motion.path d=\"M9.5 12.1316L11.7414 14.5L16 10\" {...props} />\n)\n\nconst rotateAnimation = keyframes`\n  0% {\n    transform: rotate(0);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`\nconst RotateGroup = styled.g`\n  transform-origin: center;\n\n  &[data-rotate] {\n    animation: ${rotateAnimation} 1s ease-in-out infinite;\n  }\n`\n\nconst root = {\n  syncing: {\n    scale: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    scale: [1, 0.8, 1.2, 0.9, 1.1, 0.95, 1.05, 0.99, 1],\n    transition: {\n      duration: 0.5,\n      delay: 0.2,\n    },\n  },\n  changes: {transition: {duration: 0}},\n}\n\nconst circle = {\n  syncing: {\n    strokeDasharray: '0, 0, 23, 3, 23, 3',\n    strokeDashoffset: 10,\n    opacity: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    strokeDasharray: '0, 0, 23, 0, 23, 0',\n    strokeDashoffset: 10,\n    opacity: 1,\n    transition: {\n      duration: 0.2,\n    },\n  },\n  changes: {\n    strokeDasharray: '0, 60, 23, 0, 23, 0',\n    strokeDashoffset: 0,\n    opacity: 0,\n    transition: {\n      duration: 0.5,\n    },\n  },\n}\n\nconst arrows = {\n  syncing: {\n    opacity: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    opacity: 0,\n    transition: {\n      duration: 0.2,\n    },\n  },\n  changes: {\n    opacity: 0,\n  },\n}\n\nconst checkmark = {\n  syncing: {\n    pathLength: 0,\n    transition: {duration: 0},\n  },\n  saved: {\n    pathLength: 1,\n    transition: {\n      delay: 0.4,\n      duration: 0.3,\n    },\n  },\n  changes: {\n    pathLength: 0,\n    transition: {\n      duration: 0.2,\n    },\n  },\n}\n\ninterface AnimatedStatusIconProps {\n  status?: 'changes' | 'saved' | 'syncing'\n}\n\nexport function AnimatedStatusIcon(props: AnimatedStatusIconProps) {\n  const {status} = props\n\n  if (!status) {\n    return null\n  }\n\n  return (\n    <svg\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 25 25\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"1.2\"\n      data-sanity-icon=\"animated-status-icon\"\n    >\n      <motion.g variants={root} initial={status} animate={status}>\n        <RotateGroup data-rotate={status === 'changes' ? undefined : ''}>\n          <Arrows variants={arrows} initial={status} animate={status} />\n          <Circle variants={circle} initial={status} animate={status} />\n        </RotateGroup>\n        <Checkmark variants={checkmark} initial={status} animate={status} />\n      </motion.g>\n    </svg>\n  )\n}\n", "import {type ButtonTone, Flex, Text} from '@sanity/ui'\nimport {TextWithTone, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {AnimatedStatusIcon} from './AnimatedStatusIcon'\n\ntype StatusType = 'saved' | 'syncing'\ninterface ReviewChangesButtonProps {\n  status?: StatusType\n}\n\nconst STATUS_DICTIONARY: Record<StatusType, {i18nKey: string; tone: ButtonTone}> = {\n  saved: {\n    i18nKey: 'status-bar.document-status-pulse.status.saved.text',\n    tone: 'positive',\n  },\n  syncing: {\n    i18nKey: 'status-bar.document-status-pulse.status.syncing.text',\n    tone: 'default',\n  },\n}\n\nexport const DocumentStatusPulse = (props: ReviewChangesButtonProps) => {\n  const {status} = props\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (status !== 'saved' && status !== 'syncing') {\n    return null\n  }\n\n  const currentStatus = STATUS_DICTIONARY[status]\n\n  return (\n    <Flex align=\"center\" gap={2}>\n      <TextWithTone size={1} tone={currentStatus.tone}>\n        <AnimatedStatusIcon status={status} />\n      </TextWithTone>\n\n      <Text muted size={1}>\n        {t(currentStatus.i18nKey)}\n      </Text>\n    </Flex>\n  )\n}\n", "import {Flex} from '@sanity/ui'\nimport {useEffect, useLayoutEffect, useState} from 'react'\nimport {DocumentStatus, DocumentStatusIndicator, useSyncState} from 'sanity'\n\nimport {Tooltip} from '../../../../ui-components'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {DocumentStatusPulse} from './DocumentStatusPulse'\n\nconst SYNCING_TIMEOUT = 1000\nconst SAVED_TIMEOUT = 3000\n\ninterface DocumentStatusLineProps {\n  singleLine?: boolean\n}\n\nexport function DocumentStatusLine({singleLine}: DocumentStatusLineProps) {\n  const {documentId, documentType, editState, value} = useDocumentPane()\n\n  const [status, setStatus] = useState<'saved' | 'syncing' | null>(null)\n\n  const syncState = useSyncState(documentId, documentType)\n\n  const lastUpdated = value?._updatedAt\n\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    // Schedule an update to set the status to 'saved' when status changed to 'syncing.\n    // We use `syncState.isSyncing` here to avoid the status being set to 'saved' when the document is syncing.\n    if (status === 'syncing' && !syncState.isSyncing) {\n      const timerId = setTimeout(() => setStatus('saved'), SYNCING_TIMEOUT)\n      return () => clearTimeout(timerId)\n    }\n    // Schedule an update to clear the status when status changed to 'saved'\n    if (status === 'saved') {\n      const timerId = setTimeout(() => setStatus(null), SAVED_TIMEOUT)\n      return () => clearTimeout(timerId)\n    }\n  }, [status, lastUpdated, syncState.isSyncing])\n\n  // Clear the status when documentId changes to make sure we don't show the wrong status when opening a new document\n  useLayoutEffect(() => {\n    setStatus(null)\n  }, [documentId])\n\n  // Set status to 'syncing' when lastUpdated changes and we go from not syncing to syncing\n  useLayoutEffect(() => {\n    if (syncState.isSyncing) {\n      setStatus('syncing')\n    }\n  }, [syncState.isSyncing, lastUpdated])\n\n  if (status) {\n    return <DocumentStatusPulse status={status || undefined} />\n  }\n\n  return (\n    <Tooltip\n      content={\n        <DocumentStatus absoluteDate draft={editState?.draft} published={editState?.published} />\n      }\n      placement=\"top\"\n    >\n      <Flex align=\"center\" gap={3}>\n        <DocumentStatusIndicator draft={editState?.draft} published={editState?.published} />\n        <DocumentStatus\n          draft={editState?.draft}\n          published={editState?.published}\n          singleLine={singleLine}\n        />\n      </Flex>\n    </Tooltip>\n  )\n}\n", "import {useLayoutEffect} from 'react'\nimport {resizeObserver} from 'sanity'\n\nexport function useResizeObserver({\n  element,\n  onResize,\n}: {\n  element?: HTMLDivElement | null\n  onResize: (event: ResizeObserverEntry) => void\n}): void {\n  useLayoutEffect(() => {\n    if (element) {\n      resizeObserver.observe(element, onResize)\n    }\n\n    return () => {\n      if (element) {\n        resizeObserver.unobserve(element)\n      }\n    }\n  }, [element, onResize])\n}\n", "import {Flex} from '@sanity/ui'\nimport {type Ref, useCallback, useState} from 'react'\nimport {useTimelineSelector} from 'sanity'\n\nimport {SpacerButton} from '../../../components/spacerButton'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {DocumentBadges} from './DocumentBadges'\nimport {DocumentStatusBarActions, HistoryStatusBarActions} from './DocumentStatusBarActions'\nimport {DocumentStatusLine} from './DocumentStatusLine'\nimport {useResizeObserver} from './useResizeObserver'\n\nexport interface DocumentStatusBarProps {\n  actionsBoxRef?: Ref<HTMLDivElement>\n}\n\nconst CONTAINER_BREAKPOINT = 480 // px\n\nexport function DocumentStatusBar(props: DocumentStatusBarProps) {\n  const {actionsBoxRef} = props\n  const {editState, timelineStore} = useDocumentPane()\n\n  // Subscribe to external timeline state changes\n  const showingRevision = useTimelineSelector(timelineStore, (state) => state.onOlderRevision)\n\n  const [collapsed, setCollapsed] = useState<boolean | null>(null)\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n\n  const handleResize = useCallback((event: ResizeObserverEntry) => {\n    setCollapsed(event.contentRect.width < CONTAINER_BREAKPOINT)\n  }, [])\n\n  useResizeObserver({element: rootElement, onResize: handleResize})\n\n  const shouldRender = editState?.ready && typeof collapsed === 'boolean'\n\n  return (\n    <Flex direction=\"column\" ref={setRootElement} sizing=\"border\">\n      {shouldRender && (\n        <Flex\n          align=\"stretch\"\n          gap={1}\n          justify=\"space-between\"\n          paddingY={2}\n          paddingLeft={4}\n          paddingRight={3}\n        >\n          <Flex align=\"center\" flex={1} gap={collapsed ? 2 : 3} wrap=\"wrap\" paddingRight={3}>\n            <Flex align=\"center\">\n              <DocumentStatusLine singleLine={!collapsed} />\n              <SpacerButton size=\"large\" />\n            </Flex>\n            <DocumentBadges />\n          </Flex>\n\n          <Flex\n            align=\"flex-start\"\n            justify=\"flex-end\"\n            ref={actionsBoxRef}\n            style={{flexShrink: 0, marginLeft: 'auto'}}\n          >\n            <SpacerButton size=\"large\" />\n            {showingRevision ? <HistoryStatusBarActions /> : <DocumentStatusBarActions />}\n          </Flex>\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n", "import {isHotkey} from 'is-hotkey-esm'\nimport {\n  createElement,\n  type ElementType,\n  type HTMLProps,\n  memo,\n  type Ref,\n  useCallback,\n  useMemo,\n  useState,\n} from 'react'\nimport {type DocumentActionDescription, type DocumentActionProps, LegacyLayerProvider} from 'sanity'\n\nimport {RenderActionCollectionState} from '../../../components'\nimport {ActionStateDialog} from '../statusBar'\nimport {useDocumentPane} from '../useDocumentPane'\n\nexport interface KeyboardShortcutResponderProps {\n  actionsBoxElement: HTMLElement | null\n  activeIndex: number\n  as?: ElementType\n  currentMinWidth?: number\n  flex?: number\n  id: string\n  minWidth?: number\n  onActionStart: (index: number) => void\n  rootRef: Ref<HTMLDivElement>\n  states: DocumentActionDescription[]\n}\n\nfunction KeyboardShortcutResponder(\n  props: KeyboardShortcutResponderProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'height'>,\n) {\n  const {\n    actionsBoxElement,\n    activeIndex,\n    as = 'div',\n    children,\n    id,\n    onActionStart,\n    onKeyDown,\n    rootRef,\n    states,\n    ...rest\n  } = props\n\n  const activeAction = states[activeIndex]\n\n  const handleKeyDown = useCallback(\n    (event: any) => {\n      const matchingStates = states.filter(\n        (state) => state.shortcut && isHotkey(state.shortcut, event),\n      )\n\n      const matchingState = matchingStates[0]\n\n      if (matchingStates.length > 1) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          `Keyboard shortcut conflict: More than one document action matches the shortcut \"${matchingState.shortcut}\"`,\n        )\n      }\n\n      if (matchingState && !matchingState.disabled && matchingState.onHandle) {\n        event.preventDefault()\n        matchingState.onHandle()\n        onActionStart(states.indexOf(matchingState))\n        return\n      }\n\n      if (onKeyDown) {\n        onKeyDown(event)\n      }\n    },\n    [onActionStart, onKeyDown, states],\n  )\n\n  return createElement(\n    as,\n    {\n      id,\n      onKeyDown: handleKeyDown,\n      tabIndex: -1,\n      ...rest,\n      ref: rootRef,\n    },\n    [\n      children,\n      activeAction && activeAction.dialog && (\n        <LegacyLayerProvider zOffset=\"paneFooter\">\n          <ActionStateDialog dialog={activeAction.dialog} referenceElement={actionsBoxElement} />\n        </LegacyLayerProvider>\n      ),\n    ],\n  )\n}\n\nexport interface DocumentActionShortcutsProps {\n  actionsBoxElement: HTMLElement | null\n  as?: ElementType\n  currentMinWidth?: number\n  debug?: boolean\n  flex: number\n  id: string\n  minWidth: number\n  rootRef: Ref<HTMLDivElement>\n}\n\nexport const DocumentActionShortcuts = memo(\n  (props: DocumentActionShortcutsProps & Omit<HTMLProps<HTMLDivElement>, 'as'>) => {\n    const {actionsBoxElement, as = 'div', children, ...rest} = props\n    const {actions, editState} = useDocumentPane()\n    const [activeIndex, setActiveIndex] = useState(-1)\n\n    const onActionStart = useCallback((idx: number) => {\n      setActiveIndex(idx)\n    }, [])\n\n    const actionProps: DocumentActionProps | null = useMemo(\n      () =>\n        editState && {\n          ...editState,\n\n          // @todo: what to call here?\n          onComplete: () => undefined,\n\n          // @todo: get revision string\n          revision: undefined,\n        },\n      [editState],\n    )\n\n    if (!actionProps || !actions) return null\n\n    return (\n      <RenderActionCollectionState actionProps={actionProps} actions={actions}>\n        {({states}) => (\n          <KeyboardShortcutResponder\n            {...rest}\n            activeIndex={activeIndex}\n            actionsBoxElement={actionsBoxElement}\n            as={as}\n            onActionStart={onActionStart}\n            states={states}\n          >\n            {children}\n          </KeyboardShortcutResponder>\n        )}\n      </RenderActionCollectionState>\n    )\n  },\n)\n\nDocumentActionShortcuts.displayName = 'DocumentActionShortcuts'\n", "import {EarthAmericasIcon, JsonIcon} from '@sanity/icons'\nimport {type DocumentInspector, type DocumentInspectorMenuItem, type TFunction} from 'sanity'\n\nimport {type PaneMenuItem, type StructureToolFeatures} from '../../types'\nimport {INSPECT_ACTION_PREFIX} from './constants'\n\ninterface GetMenuItemsParams {\n  currentInspector?: DocumentInspector\n  features: StructureToolFeatures\n  hasValue: boolean\n  inspectors: DocumentInspector[]\n  previewUrl?: string | null\n  inspectorMenuItems: DocumentInspectorMenuItem[]\n  t: TFunction\n}\n\nfunction getInspectorItems({\n  currentInspector,\n  hasValue,\n  inspectors,\n  inspectorMenuItems,\n}: GetMenuItemsParams): PaneMenuItem[] {\n  return inspectors\n    .map((inspector, index) => {\n      const menuItem = inspectorMenuItems[index]\n\n      if (!menuItem || menuItem.hidden) return null\n\n      return {\n        action: `${INSPECT_ACTION_PREFIX}${inspector.name}`,\n        group: menuItem.showAsAction ? undefined : 'inspectors',\n        icon: menuItem.icon,\n        isDisabled: !hasValue,\n        selected: currentInspector?.name === inspector.name,\n        shortcut: menuItem.hotkeys?.join('+'),\n        showAsAction: menuItem.showAsAction,\n        title: menuItem.title,\n        tone: menuItem.tone,\n      }\n    })\n    .filter(Boolean) as PaneMenuItem[]\n}\n\nfunction getInspectItem({hasValue, t}: GetMenuItemsParams): PaneMenuItem {\n  return {\n    action: 'inspect',\n    group: 'inspectors',\n    title: t('document-inspector.menu-item.title'),\n    icon: JsonIcon,\n    isDisabled: !hasValue,\n    shortcut: 'Ctrl+Alt+I',\n  }\n}\n\nexport function getProductionPreviewItem({previewUrl, t}: GetMenuItemsParams): PaneMenuItem | null {\n  if (!previewUrl) return null\n\n  return {\n    action: 'production-preview',\n    group: 'links',\n    title: t('production-preview.menu-item.title'),\n    icon: EarthAmericasIcon,\n    shortcut: 'Ctrl+Alt+O',\n  }\n}\n\nexport function getMenuItems(params: GetMenuItemsParams): PaneMenuItem[] {\n  const inspectorItems = getInspectorItems(params)\n  const items = [\n    // Get production preview item\n    getProductionPreviewItem(params),\n  ].filter(Boolean) as PaneMenuItem[]\n\n  return [\n    ...inspectorItems,\n\n    // TODO: convert to inspector or document view?\n    getInspectItem(params),\n\n    ...items,\n  ]\n}\n", "import {type SanityDocument} from '@sanity/types'\nimport {useEffect, useState} from 'react'\nimport {useAsObservable} from 'react-rx'\nimport {from, of} from 'rxjs'\nimport {catchError, debounceTime, switchMap} from 'rxjs/operators'\nimport {isRecord, useSource} from 'sanity'\n\nconst isSanityDocument = (value: unknown): value is SanityDocument =>\n  isRecord(value) && typeof value._id === 'string' && typeof value._type === 'string'\n\nexport function usePreviewUrl(value: Partial<SanityDocument> | undefined): string | undefined {\n  const [previewUrl, setPreviewUrl] = useState<string | undefined>(undefined)\n  const [error, setError] = useState<unknown>(null)\n  const {resolveProductionUrl} = useSource().document\n  // @todo refactor out of useAsObservable, and instead use `of() + useMemoObservable` like we did for `useLoadableFromCreateLoadable`\n  const value$ = useAsObservable(value)\n\n  if (error) throw error\n\n  useEffect(() => {\n    value$\n      .pipe(\n        // this so that the preview URL isn't fetched on every keystroke\n        debounceTime(500),\n        switchMap((document) =>\n          isSanityDocument(document) ? from(resolveProductionUrl({document})) : of(undefined),\n        ),\n        catchError((e) => {\n          const message = isRecord(e) && typeof e.message === 'string' ? e.message : 'Unknown error'\n          throw new Error(`An error was thrown while trying to get your preview url: ${message}`)\n        }),\n      )\n      .subscribe({\n        next: setPreviewUrl,\n        error: setError,\n      })\n  }, [resolveProductionUrl, value$])\n\n  return previewUrl\n}\n", "import {Card, Code, Stack, Text} from '@sanity/ui'\nimport {isDev, Translate, useTranslation} from 'sanity'\n\nimport {ErrorPane} from '../../error'\n\ninterface DocumentLayoutErrorProps {\n  currentMinWidth?: number\n  documentType?: string\n  minWidth?: number\n  paneKey: string\n  value?: Record<string, unknown>\n}\n\nexport function DocumentLayoutError(props: DocumentLayoutErrorProps) {\n  const {documentType, value, currentMinWidth, paneKey, minWidth} = props\n  const {t} = useTranslation()\n\n  return (\n    <ErrorPane\n      currentMinWidth={currentMinWidth}\n      flex={2.5}\n      minWidth={minWidth}\n      paneKey={paneKey}\n      title={\n        <Translate\n          t={t}\n          i18nKey=\"panes.document-pane.document-unknown-type.title\"\n          values={{documentType}}\n        />\n      }\n      tone=\"caution\"\n    >\n      <Stack space={4}>\n        {documentType && (\n          <Text as=\"p\">\n            <Translate\n              t={t}\n              i18nKey=\"panes.document-pane.document-unknown-type.text\"\n              values={{documentType}}\n            />\n          </Text>\n        )}\n\n        {!documentType && (\n          <Text as=\"p\">{t('panes.document-pane.document-unknown-type.without-schema.text')}</Text>\n        )}\n\n        {isDev && value && (\n          /* eslint-disable i18next/no-literal-string */\n          <>\n            <Text as=\"p\">Here is the JSON representation of the document:</Text>\n\n            <Card padding={3} overflow=\"auto\" radius={2} shadow={1} tone=\"inherit\">\n              <Code language=\"json\" size={[1, 1, 2]}>\n                {JSON.stringify(value, null, 2)}\n              </Code>\n            </Card>\n          </>\n          /* eslint-enable i18next/no-literal-string */\n        )}\n      </Stack>\n    </ErrorPane>\n  )\n}\n", "import {\n  DialogProvider,\n  type DialogProviderProps,\n  Flex,\n  PortalProvider,\n  useElementRect,\n} from '@sanity/ui'\nimport {isHotkey} from 'is-hotkey-esm'\nimport {useCallback, useMemo, useState} from 'react'\nimport {useTranslation} from 'react-i18next'\nimport {\n  ChangeConnectorRoot,\n  type DocumentFieldActionNode,\n  type DocumentInspectorMenuItem,\n  FieldActionsProvider,\n  FieldActionsResolver,\n  useZIndex,\n} from 'sanity'\nimport {type Path} from 'sanity-diff-patch'\nimport {styled} from 'styled-components'\n\nimport {TooltipDelayGroupProvider} from '../../../../ui-components'\nimport {Pane, PaneFooter, usePaneLayout} from '../../../components'\nimport {DOCUMENT_PANEL_PORTAL_ELEMENT} from '../../../constants'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {useStructureTool} from '../../../useStructureTool'\nimport {\n  DOCUMENT_INSPECTOR_MIN_WIDTH,\n  DOCUMENT_PANEL_INITIAL_MIN_WIDTH,\n  DOCUMENT_PANEL_MIN_WIDTH,\n} from '../constants'\nimport {DocumentInspectorMenuItemsResolver} from '../DocumentInspectorMenuItemsResolver'\nimport {DocumentOperationResults} from '../DocumentOperationResults'\nimport {DocumentPanel} from '../documentPanel'\nimport {DocumentPanelHeader} from '../documentPanel/header'\nimport {DocumentActionShortcuts} from '../keyboardShortcuts'\nimport {getMenuItems} from '../menuItems'\nimport {DocumentStatusBar} from '../statusBar'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {usePreviewUrl} from '../usePreviewUrl'\nimport {DocumentLayoutError} from './DocumentLayoutError'\n\nconst EMPTY_ARRAY: [] = []\n\nconst DIALOG_PROVIDER_POSITION: DialogProviderProps['position'] = [\n  // We use the `position: fixed` for dialogs on narrower screens (first two media breakpoints).\n  'fixed',\n  'fixed',\n  // And we use the `position: absolute` strategy (within panes) on wide screens.\n  'absolute',\n]\n\nconst StyledChangeConnectorRoot = styled(ChangeConnectorRoot)`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  min-height: 0;\n  min-width: 0;\n`\n\nexport function DocumentLayout() {\n  const {\n    changesOpen,\n    documentId,\n    documentType,\n    fieldActions,\n    inspectOpen,\n    inspector,\n    inspectors,\n    onFocus,\n    onHistoryOpen,\n    onMenuAction,\n    onPathOpen,\n    paneKey,\n    schemaType,\n    value,\n  } = useDocumentPane()\n\n  const {features} = useStructureTool()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const zOffsets = useZIndex()\n  const previewUrl = usePreviewUrl(value)\n\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const [footerElement, setFooterElement] = useState<HTMLDivElement | null>(null)\n  const [headerElement, setHeaderElement] = useState<HTMLDivElement | null>(null)\n\n  const [actionsBoxElement, setActionsBoxElement] = useState<HTMLDivElement | null>(null)\n  const [documentPanelPortalElement, setDocumentPanelPortalElement] = useState<HTMLElement | null>(\n    null,\n  )\n\n  const [inspectorMenuItems, setInspectorMenuItems] = useState<DocumentInspectorMenuItem[]>([])\n  const [rootFieldActionNodes, setRootFieldActionNodes] = useState<DocumentFieldActionNode[]>([])\n\n  const footerRect = useElementRect(footerElement)\n  const headerRect = useElementRect(headerElement)\n  const footerHeight = footerRect?.height\n  const headerHeight = headerRect?.height\n  const currentMinWidth =\n    DOCUMENT_PANEL_INITIAL_MIN_WIDTH + (inspector ? DOCUMENT_INSPECTOR_MIN_WIDTH : 0)\n  const minWidth = DOCUMENT_PANEL_MIN_WIDTH + (inspector ? DOCUMENT_INSPECTOR_MIN_WIDTH : 0)\n\n  const currentInspector = useMemo(\n    () => inspectors?.find((i) => i.name === inspector?.name),\n    [inspectors, inspector?.name],\n  )\n\n  const hasValue = Boolean(value)\n\n  const menuItems = useMemo(\n    () =>\n      getMenuItems({\n        currentInspector,\n        features,\n        hasValue,\n        inspectorMenuItems,\n        inspectors,\n        previewUrl,\n        t,\n      }),\n    [currentInspector, features, hasValue, inspectorMenuItems, inspectors, previewUrl, t],\n  )\n\n  const handleKeyUp = useCallback(\n    (event: React.KeyboardEvent<HTMLDivElement>) => {\n      for (const item of menuItems) {\n        if (item.shortcut) {\n          if (isHotkey(item.shortcut, event)) {\n            event.preventDefault()\n            event.stopPropagation()\n            onMenuAction(item)\n            return\n          }\n        }\n      }\n    },\n    [onMenuAction, menuItems],\n  )\n\n  const onConnectorSetFocus = useCallback(\n    (path: Path) => {\n      onPathOpen(path)\n      onFocus(path)\n    },\n    [onPathOpen, onFocus],\n  )\n\n  if (!schemaType) {\n    return (\n      <DocumentLayoutError\n        currentMinWidth={currentMinWidth}\n        documentType={documentType}\n        minWidth={minWidth}\n        paneKey={paneKey}\n        value={value}\n      />\n    )\n  }\n\n  return (\n    <>\n      {inspectors.length > 0 && (\n        <DocumentInspectorMenuItemsResolver\n          documentId={documentId}\n          documentType={documentType}\n          inspectors={inspectors}\n          onMenuItems={setInspectorMenuItems}\n        />\n      )}\n\n      {fieldActions.length > 0 && schemaType && (\n        <FieldActionsResolver\n          actions={fieldActions}\n          documentId={documentId}\n          documentType={documentType}\n          onActions={setRootFieldActionNodes}\n          path={EMPTY_ARRAY}\n          schemaType={schemaType}\n        />\n      )}\n\n      <FieldActionsProvider actions={rootFieldActionNodes} path={EMPTY_ARRAY}>\n        <DocumentActionShortcuts\n          actionsBoxElement={actionsBoxElement}\n          as={Pane}\n          currentMinWidth={currentMinWidth}\n          data-testid=\"document-pane\"\n          flex={2.5}\n          id={paneKey}\n          minWidth={minWidth}\n          onKeyUp={handleKeyUp}\n          rootRef={setRootElement}\n        >\n          <DocumentPanelHeader ref={setHeaderElement} menuItems={menuItems} />\n\n          <DialogProvider position={DIALOG_PROVIDER_POSITION} zOffset={zOffsets.paneDialog}>\n            <Flex direction=\"column\" flex={1} height={layoutCollapsed ? undefined : 'fill'}>\n              <StyledChangeConnectorRoot\n                data-testid=\"change-connector-root\"\n                isReviewChangesOpen={changesOpen}\n                onOpenReviewChanges={onHistoryOpen}\n                onSetFocus={onConnectorSetFocus}\n              >\n                <DocumentPanel\n                  footerHeight={footerHeight || null}\n                  headerHeight={headerHeight || null}\n                  isInspectOpen={inspectOpen}\n                  rootElement={rootElement}\n                  setDocumentPanelPortalElement={setDocumentPanelPortalElement}\n                />\n              </StyledChangeConnectorRoot>\n            </Flex>\n          </DialogProvider>\n\n          {/* These providers are added because we want the dialogs in `DocumentStatusBar` to be scoped to the document pane. */}\n          {/* The portal element comes from `DocumentPanel`. */}\n          <PortalProvider\n            __unstable_elements={{[DOCUMENT_PANEL_PORTAL_ELEMENT]: documentPanelPortalElement}}\n          >\n            <DialogProvider position={DIALOG_PROVIDER_POSITION} zOffset={zOffsets.portal}>\n              <PaneFooter ref={setFooterElement}>\n                <TooltipDelayGroupProvider>\n                  <DocumentStatusBar actionsBoxRef={setActionsBoxElement} />\n                </TooltipDelayGroupProvider>\n              </PaneFooter>\n            </DialogProvider>\n          </PortalProvider>\n          <DocumentOperationResults />\n        </DocumentActionShortcuts>\n      </FieldActionsProvider>\n    </>\n  )\n}\n", "import {type ComponentType} from 'react'\nimport {type DocumentLayoutProps, type PluginOptions, useMiddlewareComponents} from 'sanity'\n\nimport {DocumentLayout} from './DocumentLayout'\n\nfunction pick(plugin: PluginOptions) {\n  return plugin.document?.components?.unstable_layout as ComponentType<\n    Omit<DocumentLayoutProps, 'renderDefault'>\n  >\n}\n\n/**\n * A hook that returns the document layout composed\n * by the Components API (`document.components.layout`).\n */\nexport function useDocumentLayoutComponent(): ComponentType<\n  Omit<DocumentLayoutProps, 'renderDefault'>\n> {\n  return useMiddlewareComponents({\n    pick,\n    defaultComponent: DocumentLayout,\n  })\n}\n", "import {type Template} from 'sanity'\n\ninterface InitialValueOptions {\n  documentType: string\n  panePayload?: unknown\n  templateName?: string\n  templateParams?: Record<string, unknown>\n  urlTemplate?: string\n}\n\n/**\n * @internal\n */\nexport function getInitialValueTemplateOpts(\n  templates: Template[],\n  opts: InitialValueOptions,\n): {templateName: string; templateParams: Record<string, unknown>} {\n  const payload = opts.panePayload || {}\n  const structureNodeTemplate = opts.templateName\n\n  if (opts.urlTemplate && structureNodeTemplate && structureNodeTemplate !== opts.urlTemplate) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `Conflicting templates: URL says \"${opts.urlTemplate}\", structure node says \"${structureNodeTemplate}\". Using \"${structureNodeTemplate}\".`,\n    )\n  }\n\n  const template = structureNodeTemplate || opts.urlTemplate\n  const typeTemplates = templates.filter((t) => t.schemaType === opts.documentType)\n\n  const templateParams = {\n    ...opts.templateParams,\n    ...(typeof payload === 'object' ? payload || {} : {}),\n  }\n\n  let templateName = template\n\n  // If we have not specified a specific template, and we only have a single\n  // template available for a schema type, use it\n  if (!template && typeTemplates.length === 1) {\n    templateName = typeTemplates[0].id\n  }\n\n  return {templateName: templateName!, templateParams}\n}\n", "/* eslint-disable camelcase */\nimport {isActionEnabled} from '@sanity/schema/_internal'\nimport {\n  type ObjectSchemaType,\n  type Path,\n  type SanityDocument,\n  type SanityDocumentLike,\n} from '@sanity/types'\nimport {useToast} from '@sanity/ui'\nimport {fromString as pathFromString, resolveKeyedPath} from '@sanity/util/paths'\nimport {omit, throttle} from 'lodash'\nimport {memo, useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport deepEquals from 'react-fast-compare'\nimport {\n  type DocumentFieldAction,\n  type DocumentInspector,\n  type DocumentPresence,\n  EMPTY_ARRAY,\n  getDraftId,\n  getExpandOperations,\n  getPublishedId,\n  type OnPathFocusPayload,\n  type PatchEvent,\n  setAtPath,\n  type StateTree,\n  toMutationPatches,\n  useConnectionState,\n  useDocumentOperation,\n  useDocumentValuePermissions,\n  useEditState,\n  useFormState,\n  useInitialValue,\n  usePresenceStore,\n  useSchema,\n  useSource,\n  useTemplates,\n  useTimelineSelector,\n  useTimelineStore,\n  useTranslation,\n  useUnique,\n  useValidationStatus,\n} from 'sanity'\nimport {DocumentPaneContext} from 'sanity/_singletons'\n\nimport {usePaneRouter} from '../../components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {type PaneMenuItem} from '../../types'\nimport {useStructureTool} from '../../useStructureTool'\nimport {\n  DEFAULT_MENU_ITEM_GROUPS,\n  EMPTY_PARAMS,\n  HISTORY_INSPECTOR_NAME,\n  INSPECT_ACTION_PREFIX,\n} from './constants'\nimport {type DocumentPaneContextValue} from './DocumentPaneContext'\nimport {getInitialValueTemplateOpts} from './getInitialValueTemplateOpts'\nimport {type DocumentPaneProviderProps} from './types'\nimport {usePreviewUrl} from './usePreviewUrl'\n\n/**\n * @internal\n */\n// eslint-disable-next-line complexity, max-statements\nexport const DocumentPaneProvider = memo((props: DocumentPaneProviderProps) => {\n  const {children, index, pane, paneKey, onFocusPath} = props\n  const schema = useSchema()\n  const templates = useTemplates()\n  const {\n    __internal_tasks,\n    document: {\n      actions: documentActions,\n      badges: documentBadges,\n      unstable_fieldActions: fieldActionsResolver,\n      unstable_languageFilter: languageFilterResolver,\n      inspectors: inspectorsResolver,\n    },\n  } = useSource()\n  const presenceStore = usePresenceStore()\n  const paneRouter = usePaneRouter()\n  const setPaneParams = paneRouter.setParams\n  const {features} = useStructureTool()\n  const {push: pushToast} = useToast()\n  const {\n    options,\n    menuItemGroups = DEFAULT_MENU_ITEM_GROUPS,\n    title = null,\n    views: viewsProp = [],\n  } = pane\n  const paneOptions = useUnique(options)\n  const documentIdRaw = paneOptions.id\n  const documentId = getPublishedId(documentIdRaw)\n  const documentType = options.type\n  const params = useUnique(paneRouter.params) || EMPTY_PARAMS\n  const panePayload = useUnique(paneRouter.payload)\n  const {templateName, templateParams} = useMemo(\n    () =>\n      getInitialValueTemplateOpts(templates, {\n        documentType,\n        templateName: paneOptions.template,\n        templateParams: paneOptions.templateParameters,\n        panePayload,\n        urlTemplate: params.template,\n      }),\n    [documentType, paneOptions, params, panePayload, templates],\n  )\n  const initialValueRaw = useInitialValue({\n    documentId,\n    documentType,\n    templateName,\n    templateParams,\n  })\n  const initialValue = useUnique(initialValueRaw)\n  const {patch} = useDocumentOperation(documentId, documentType)\n  const editState = useEditState(documentId, documentType)\n  const {validation: validationRaw} = useValidationStatus(documentId, documentType)\n  const connectionState = useConnectionState(documentId, documentType)\n  const schemaType = schema.get(documentType) as ObjectSchemaType | undefined\n  const value: SanityDocumentLike = editState?.draft || editState?.published || initialValue.value\n  const [isDeleting, setIsDeleting] = useState(false)\n\n  // Resolve document actions\n  const actions = useMemo(\n    () => documentActions({schemaType: documentType, documentId}),\n    [documentActions, documentId, documentType],\n  )\n\n  // Resolve document badges\n  const badges = useMemo(\n    () => documentBadges({schemaType: documentType, documentId}),\n    [documentBadges, documentId, documentType],\n  )\n\n  // Resolve document language filter\n  const languageFilter = useMemo(\n    () => languageFilterResolver({schemaType: documentType, documentId}),\n    [documentId, documentType, languageFilterResolver],\n  )\n\n  const validation = useUnique(validationRaw)\n  const views = useUnique(viewsProp)\n\n  const [focusPath, setFocusPath] = useState<Path>(() =>\n    params.path ? pathFromString(params.path) : EMPTY_ARRAY,\n  )\n  const focusPathRef = useRef<Path>([])\n  const activeViewId = params.view || (views[0] && views[0].id) || null\n  const [timelineMode, setTimelineMode] = useState<'since' | 'rev' | 'closed'>('closed')\n\n  const [timelineError, setTimelineError] = useState<Error | null>(null)\n\n  /**\n   * The `preferLatestPublished` parameter can be used to \"force\" viewing the revision\n   * of the last published document. This is not a permanent function, and will likely\n   * be removed when we move to a more robust way of viewing \"releases\".\n   */\n  useEffect(() => {\n    if (params.prefersLatestPublished && editState.published) {\n      setPaneParams({\n        //ensure we only run on first load\n        ...omit(params, 'prefersLatestPublished'),\n        rev: `${editState.published._updatedAt}/${editState.published._rev}`,\n      })\n    }\n  }, [editState, setPaneParams, params])\n\n  /**\n   * Create an intermediate store which handles document Timeline + TimelineController\n   * creation, and also fetches pre-requsite document snapshots. Compatible with `useSyncExternalStore`\n   * and made available to child components via DocumentPaneContext.\n   */\n  const timelineStore = useTimelineStore({\n    documentId,\n    documentType,\n    onError: setTimelineError,\n    rev: params.rev,\n    since: params.since,\n  })\n\n  // Subscribe to external timeline state changes\n  const onOlderRevision = useTimelineSelector(timelineStore, (state) => state.onOlderRevision)\n  const revTime = useTimelineSelector(timelineStore, (state) => state.revTime)\n  const sinceAttributes = useTimelineSelector(timelineStore, (state) => state.sinceAttributes)\n  const timelineDisplayed = useTimelineSelector(timelineStore, (state) => state.timelineDisplayed)\n  const timelineReady = useTimelineSelector(timelineStore, (state) => state.timelineReady)\n  const isPristine = useTimelineSelector(timelineStore, (state) => state.isPristine)\n\n  /**\n   * Determine if the current document is deleted.\n   *\n   * When the timeline is available – we check for the absence of an editable document pair\n   * (both draft + published versions) as well as a non 'pristine' timeline (i.e. a timeline that consists\n   * of at least one chunk).\n   *\n   * In the _very rare_ case where the timeline cannot be loaded – we skip this check and always assume\n   * the document is NOT deleted. Since we can't accurately determine document deleted status without history,\n   * skipping this check means that in these cases, users will at least be able to create new documents\n   * without them being incorrectly marked as deleted.\n   */\n  const isDeleted = useMemo(() => {\n    if (!timelineReady) {\n      return false\n    }\n    return Boolean(!editState?.draft && !editState?.published) && !isPristine\n  }, [editState?.draft, editState?.published, isPristine, timelineReady])\n\n  // TODO: this may cause a lot of churn. May be a good idea to prevent these\n  // requests unless the menu is open somehow\n  const previewUrl = usePreviewUrl(value)\n\n  const [presence, setPresence] = useState<DocumentPresence[]>([])\n  useEffect(() => {\n    const subscription = presenceStore.documentPresence(documentId).subscribe((nextPresence) => {\n      setPresence(nextPresence)\n    })\n    return () => {\n      subscription.unsubscribe()\n    }\n  }, [documentId, presenceStore])\n\n  const inspectors: DocumentInspector[] = useMemo(\n    () => inspectorsResolver({documentId, documentType}),\n    [documentId, documentType, inspectorsResolver],\n  )\n\n  const [inspectorName, setInspectorName] = useState<string | null>(() => params.inspect || null)\n\n  // Handle inspector name changes from URL\n  const inspectParamRef = useRef<string | undefined>(params.inspect)\n  useEffect(() => {\n    if (inspectParamRef.current !== params.inspect) {\n      inspectParamRef.current = params.inspect\n      setInspectorName(params.inspect || null)\n    }\n  }, [params.inspect])\n\n  const currentInspector = inspectors?.find((i) => i.name === inspectorName)\n  const resolvedChangesInspector = inspectors.find((i) => i.name === HISTORY_INSPECTOR_NAME)\n\n  const changesOpen = currentInspector?.name === HISTORY_INSPECTOR_NAME\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const inspectOpen = params.inspect === 'on'\n  const compareValue: Partial<SanityDocument> | null = changesOpen\n    ? sinceAttributes\n    : editState?.published || null\n\n  const fieldActions: DocumentFieldAction[] = useMemo(\n    () => (schemaType ? fieldActionsResolver({documentId, documentType, schemaType}) : []),\n    [documentId, documentType, fieldActionsResolver, schemaType],\n  )\n\n  /**\n   * Note that in addition to connection and edit state, we also wait for a valid document timeline\n   * range to be loaded. This means if we're loading an older revision, the full transaction range must\n   * be loaded in full prior to the document being displayed.\n   *\n   * Previously, visiting studio URLs with timeline params would display the 'current' document and then\n   * 'snap' in the older revision, which was disorienting and could happen mid-edit.\n   *\n   * In the event that the timeline cannot be loaded due to TimelineController errors or blocked requests,\n   * we skip this readiness check to ensure that users aren't locked out of editing. Trying to select\n   * a timeline revision in this instance will display an error localized to the popover itself.\n   */\n  const ready =\n    connectionState === 'connected' && editState.ready && (timelineReady || !!timelineError)\n\n  const displayed: Partial<SanityDocument> | undefined = useMemo(\n    () => (onOlderRevision ? timelineDisplayed || {_id: value._id, _type: value._type} : value),\n    [onOlderRevision, timelineDisplayed, value],\n  )\n\n  const setTimelineRange = useCallback(\n    (newSince: string, newRev: string | null) => {\n      setPaneParams({\n        ...params,\n        since: newSince,\n        rev: newRev || undefined,\n      })\n    },\n    [params, setPaneParams],\n  )\n\n  const handleBlur = useCallback(\n    (blurredPath: Path) => {\n      if (disableBlurRef.current) {\n        return\n      }\n\n      setFocusPath(EMPTY_ARRAY)\n\n      if (focusPathRef.current !== EMPTY_ARRAY) {\n        focusPathRef.current = EMPTY_ARRAY\n        onFocusPath?.(EMPTY_ARRAY)\n      }\n\n      // note: we're deliberately not syncing presence here since it would make the user avatar disappear when a\n      // user clicks outside a field without focusing another one\n    },\n    [onFocusPath, setFocusPath],\n  )\n\n  const patchRef = useRef<(event: PatchEvent) => void>(() => {\n    throw new Error('Nope')\n  })\n\n  patchRef.current = (event: PatchEvent) => {\n    patch.execute(toMutationPatches(event.patches), initialValue.value)\n  }\n\n  const handleChange = useCallback((event: PatchEvent) => patchRef.current(event), [])\n\n  const closeInspector = useCallback(\n    (closeInspectorName?: string) => {\n      // inspector?: DocumentInspector\n      const inspector = closeInspectorName && inspectors.find((i) => i.name === closeInspectorName)\n\n      if (closeInspectorName && !inspector) {\n        console.warn(`No inspector named \"${closeInspectorName}\"`)\n        return\n      }\n\n      if (!currentInspector) {\n        return\n      }\n\n      if (inspector) {\n        const result = inspector.onClose?.({params}) ?? {params}\n\n        setInspectorName(null)\n        inspectParamRef.current = undefined\n\n        setPaneParams({...result.params, inspect: undefined})\n\n        return\n      }\n\n      if (currentInspector) {\n        const result = currentInspector.onClose?.({params}) ?? {params}\n\n        setInspectorName(null)\n        inspectParamRef.current = undefined\n\n        setPaneParams({...result.params, inspect: undefined})\n      }\n    },\n    [currentInspector, inspectors, params, setPaneParams],\n  )\n\n  const openInspector = useCallback(\n    (nextInspectorName: string, paneParams?: Record<string, string>) => {\n      const nextInspector = inspectors.find((i) => i.name === nextInspectorName)\n\n      if (!nextInspector) {\n        console.warn(`No inspector named \"${nextInspectorName}\"`)\n        return\n      }\n\n      // if the inspector is already open, only update params\n      if (currentInspector?.name === nextInspector.name) {\n        setPaneParams({...params, ...paneParams, inspect: nextInspector.name})\n        return\n      }\n\n      let currentParams = params\n\n      if (currentInspector) {\n        const closeResult = nextInspector.onClose?.({params: currentParams}) ?? {\n          params: currentParams,\n        }\n\n        currentParams = closeResult.params\n      }\n\n      const result = nextInspector.onOpen?.({params: currentParams}) ?? {params: currentParams}\n\n      setInspectorName(nextInspector.name)\n      inspectParamRef.current = nextInspector.name\n\n      setPaneParams({...result.params, ...paneParams, inspect: nextInspector.name})\n    },\n    [currentInspector, inspectors, params, setPaneParams],\n  )\n\n  const handleHistoryClose = useCallback(() => {\n    if (resolvedChangesInspector) {\n      closeInspector(resolvedChangesInspector.name)\n    }\n  }, [closeInspector, resolvedChangesInspector])\n\n  const handleHistoryOpen = useCallback(() => {\n    if (!features.reviewChanges) {\n      return\n    }\n\n    if (resolvedChangesInspector) {\n      openInspector(resolvedChangesInspector.name)\n    }\n  }, [features.reviewChanges, openInspector, resolvedChangesInspector])\n\n  const handlePaneClose = useCallback(() => paneRouter.closeCurrent(), [paneRouter])\n\n  const handlePaneSplit = useCallback(() => paneRouter.duplicateCurrent(), [paneRouter])\n\n  const toggleLegacyInspect = useCallback(\n    (toggle = !inspectOpen) => {\n      if (toggle) {\n        setPaneParams({...params, inspect: 'on'})\n      } else {\n        setPaneParams(omit(params, 'inspect'))\n      }\n    },\n    [inspectOpen, params, setPaneParams],\n  )\n\n  const handleMenuAction = useCallback(\n    (item: PaneMenuItem) => {\n      if (item.action === 'production-preview' && previewUrl) {\n        window.open(previewUrl)\n        return true\n      }\n\n      if (item.action === 'inspect') {\n        toggleLegacyInspect(true)\n        return true\n      }\n\n      if (item.action === 'reviewChanges') {\n        handleHistoryOpen()\n        return true\n      }\n\n      if (typeof item.action === 'string' && item.action.startsWith(INSPECT_ACTION_PREFIX)) {\n        const nextInspectorName = item.action.slice(INSPECT_ACTION_PREFIX.length)\n        const nextInspector = inspectors.find((i) => i.name === nextInspectorName)\n\n        if (nextInspector) {\n          if (nextInspector.name === inspectorName) {\n            closeInspector(nextInspector.name)\n          } else {\n            openInspector(nextInspector.name)\n          }\n          return true\n        }\n      }\n\n      return false\n    },\n    [\n      closeInspector,\n      handleHistoryOpen,\n      inspectorName,\n      inspectors,\n      openInspector,\n      previewUrl,\n      toggleLegacyInspect,\n    ],\n  )\n\n  const handleLegacyInspectClose = useCallback(\n    () => toggleLegacyInspect(false),\n    [toggleLegacyInspect],\n  )\n\n  const [openPath, onSetOpenPath] = useState<Path>([])\n  const [fieldGroupState, onSetFieldGroupState] = useState<StateTree<string>>()\n  const [collapsedPaths, onSetCollapsedPath] = useState<StateTree<boolean>>()\n  const [collapsedFieldSets, onSetCollapsedFieldSets] = useState<StateTree<boolean>>()\n\n  const handleOnSetCollapsedPath = useCallback((path: Path, collapsed: boolean) => {\n    onSetCollapsedPath((prevState) => setAtPath(prevState, path, collapsed))\n  }, [])\n\n  const handleOnSetCollapsedFieldSet = useCallback((path: Path, collapsed: boolean) => {\n    onSetCollapsedFieldSets((prevState) => setAtPath(prevState, path, collapsed))\n  }, [])\n\n  const handleSetActiveFieldGroup = useCallback(\n    (path: Path, groupName: string) =>\n      onSetFieldGroupState((prevState) => setAtPath(prevState, path, groupName)),\n    [],\n  )\n\n  const requiredPermission = value._createdAt ? 'update' : 'create'\n  const liveEdit = Boolean(schemaType?.liveEdit)\n  const docId = value._id ? value._id : 'dummy-id'\n  const docPermissionsInput = useMemo(() => {\n    return {\n      ...value,\n      _id: liveEdit ? getPublishedId(docId) : getDraftId(docId),\n    }\n  }, [liveEdit, value, docId])\n\n  const [permissions, isPermissionsLoading] = useDocumentValuePermissions({\n    document: docPermissionsInput,\n    permission: requiredPermission,\n  })\n\n  const isNonExistent = !value?._id\n\n  const readOnly = useMemo(() => {\n    const hasNoPermission = !isPermissionsLoading && !permissions?.granted\n    const updateActionDisabled = !isActionEnabled(schemaType!, 'update')\n    const createActionDisabled = isNonExistent && !isActionEnabled(schemaType!, 'create')\n    const reconnecting = connectionState === 'reconnecting'\n    const isLocked = editState.transactionSyncLock?.enabled\n\n    return (\n      !ready ||\n      revTime !== null ||\n      hasNoPermission ||\n      updateActionDisabled ||\n      createActionDisabled ||\n      reconnecting ||\n      isLocked ||\n      isDeleting ||\n      isDeleted\n    )\n  }, [\n    connectionState,\n    editState.transactionSyncLock,\n    isNonExistent,\n    isDeleted,\n    isDeleting,\n    isPermissionsLoading,\n    permissions?.granted,\n    ready,\n    revTime,\n    schemaType,\n  ])\n\n  const formState = useFormState(schemaType!, {\n    value: displayed,\n    readOnly,\n    comparisonValue: compareValue,\n    focusPath,\n    openPath,\n    collapsedPaths,\n    presence,\n    validation,\n    collapsedFieldSets,\n    fieldGroupState,\n    changesOpen,\n  })\n\n  const formStateRef = useRef(formState)\n  formStateRef.current = formState\n\n  const setOpenPath = useCallback(\n    (path: Path) => {\n      const ops = getExpandOperations(formStateRef.current!, path)\n      ops.forEach((op) => {\n        if (op.type === 'expandPath') {\n          onSetCollapsedPath((prevState) => setAtPath(prevState, op.path, false))\n        }\n        if (op.type === 'expandFieldSet') {\n          onSetCollapsedFieldSets((prevState) => setAtPath(prevState, op.path, false))\n        }\n        if (op.type === 'setSelectedGroup') {\n          onSetFieldGroupState((prevState) => setAtPath(prevState, op.path, op.groupName))\n        }\n      })\n      onSetOpenPath(path)\n    },\n    [formStateRef],\n  )\n\n  const updatePresence = useCallback(\n    (nextFocusPath: Path, payload?: OnPathFocusPayload) => {\n      presenceStore.setLocation([\n        {\n          type: 'document',\n          documentId,\n          path: nextFocusPath,\n          lastActiveAt: new Date().toISOString(),\n          selection: payload?.selection,\n        },\n      ])\n    },\n    [documentId, presenceStore],\n  )\n\n  const updatePresenceThrottled = useMemo(\n    () => throttle(updatePresence, 1000, {leading: true, trailing: true}),\n    [updatePresence],\n  )\n\n  const handleFocus = useCallback(\n    (nextFocusPath: Path, payload?: OnPathFocusPayload) => {\n      setFocusPath(nextFocusPath)\n      if (!deepEquals(focusPathRef.current, nextFocusPath)) {\n        setOpenPath(nextFocusPath.slice(0, -1))\n        focusPathRef.current = nextFocusPath\n        onFocusPath?.(nextFocusPath)\n      }\n      updatePresenceThrottled(nextFocusPath, payload)\n    },\n    [onFocusPath, setOpenPath, updatePresenceThrottled],\n  )\n\n  const documentPane: DocumentPaneContextValue = useMemo(\n    () => ({\n      actions,\n      activeViewId,\n      badges,\n      changesOpen,\n      closeInspector,\n      collapsedFieldSets,\n      collapsedPaths,\n      compareValue,\n      connectionState,\n      displayed,\n      documentId,\n      documentIdRaw,\n      documentType,\n      editState,\n      fieldActions,\n      focusPath,\n      inspector: currentInspector || null,\n      inspectors,\n      __internal_tasks,\n      onBlur: handleBlur,\n      onChange: handleChange,\n      onFocus: handleFocus,\n      onPathOpen: setOpenPath,\n      onHistoryClose: handleHistoryClose,\n      onHistoryOpen: handleHistoryOpen,\n      onInspectClose: handleLegacyInspectClose,\n      onMenuAction: handleMenuAction,\n      onPaneClose: handlePaneClose,\n      onPaneSplit: handlePaneSplit,\n      onSetActiveFieldGroup: handleSetActiveFieldGroup,\n      onSetCollapsedPath: handleOnSetCollapsedPath,\n      onSetCollapsedFieldSet: handleOnSetCollapsedFieldSet,\n      openInspector,\n      index,\n      inspectOpen,\n      validation,\n      menuItemGroups: menuItemGroups || [],\n      paneKey,\n      previewUrl,\n      ready,\n      schemaType: schemaType!,\n      isPermissionsLoading,\n      permissions,\n      setTimelineMode,\n      setTimelineRange,\n      setIsDeleting,\n      isDeleting,\n      isDeleted,\n      timelineError,\n      timelineMode,\n      timelineStore,\n      title,\n      value,\n      views,\n      formState,\n      unstable_languageFilter: languageFilter,\n    }),\n    [\n      __internal_tasks,\n      actions,\n      activeViewId,\n      badges,\n      changesOpen,\n      closeInspector,\n      collapsedFieldSets,\n      collapsedPaths,\n      compareValue,\n      connectionState,\n      currentInspector,\n      displayed,\n      documentId,\n      documentIdRaw,\n      documentType,\n      editState,\n      fieldActions,\n      focusPath,\n      formState,\n      handleBlur,\n      handleChange,\n      handleFocus,\n      handleHistoryClose,\n      handleHistoryOpen,\n      handleLegacyInspectClose,\n      handleMenuAction,\n      handleOnSetCollapsedFieldSet,\n      handleOnSetCollapsedPath,\n      handlePaneClose,\n      handlePaneSplit,\n      handleSetActiveFieldGroup,\n      index,\n      inspectOpen,\n      inspectors,\n      isDeleted,\n      isDeleting,\n      isPermissionsLoading,\n      languageFilter,\n      menuItemGroups,\n      openInspector,\n      paneKey,\n      permissions,\n      previewUrl,\n      ready,\n      schemaType,\n      setOpenPath,\n      setTimelineRange,\n      timelineError,\n      timelineMode,\n      timelineStore,\n      title,\n      validation,\n      value,\n      views,\n    ],\n  )\n\n  useEffect(() => {\n    if (connectionState === 'reconnecting') {\n      pushToast({\n        id: 'sanity/structure/reconnecting',\n        status: 'warning',\n        title: t('panes.document-pane-provider.reconnecting.title'),\n      })\n    }\n  }, [connectionState, pushToast, t])\n\n  const disableBlurRef = useRef(false)\n\n  // Reset `focusPath` when `documentId` or `params.path` changes\n  useEffect(() => {\n    if (ready && params.path) {\n      const {path, ...restParams} = params\n      const pathFromUrl = resolveKeyedPath(formStateRef.current?.value, pathFromString(path))\n\n      disableBlurRef.current = true\n\n      // Reset focus path when url params path changes\n      if (!deepEquals(focusPathRef.current, pathFromUrl)) {\n        setFocusPath(pathFromUrl)\n        setOpenPath(pathFromUrl)\n        focusPathRef.current = pathFromUrl\n        onFocusPath?.(pathFromUrl)\n      }\n\n      const timeout = setTimeout(() => {\n        disableBlurRef.current = false\n      }, 0)\n\n      // remove the `path`-param from url after we have consumed it as the initial focus path\n      paneRouter.setParams(restParams)\n\n      return () => clearTimeout(timeout)\n    }\n\n    return undefined\n  }, [params, documentId, onFocusPath, setOpenPath, ready, paneRouter])\n\n  return (\n    <DocumentPaneContext.Provider value={documentPane}>{children}</DocumentPaneContext.Provider>\n  )\n})\n\nDocumentPaneProvider.displayName = 'DocumentPaneProvider'\n", "import {type Path} from '@sanity/types'\nimport {Stack, Text} from '@sanity/ui'\nimport {fromString as pathFromString} from '@sanity/util/paths'\nimport {memo, useMemo} from 'react'\nimport {\n  ReferenceInputOptionsProvider,\n  SourceProvider,\n  Translate,\n  useDocumentType,\n  useSource,\n  useTemplatePermissions,\n  useTemplates,\n  useTranslation,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {type DocumentPaneNode} from '../../types'\nimport {ErrorPane} from '../error'\nimport {LoadingPane} from '../loading'\nimport {CommentsWrapper} from './comments'\nimport {useDocumentLayoutComponent} from './document-layout'\nimport {DocumentPaneProvider} from './DocumentPaneProvider'\nimport {type DocumentPaneProviderProps} from './types'\n\ntype DocumentPaneOptions = DocumentPaneNode['options']\n\n/**\n * @internal\n */\nexport const DocumentPane = memo(function DocumentPane(props: DocumentPaneProviderProps) {\n  const {name: parentSourceName} = useSource()\n\n  return (\n    <SourceProvider name={props.pane.source || parentSourceName}>\n      <DocumentPaneInner {...props} />\n    </SourceProvider>\n  )\n})\n\nfunction DocumentPaneInner(props: DocumentPaneProviderProps) {\n  const {pane, paneKey} = props\n  const {resolveNewDocumentOptions} = useSource().document\n  const paneRouter = usePaneRouter()\n  const options = usePaneOptions(pane.options, paneRouter.params)\n  const {documentType, isLoaded: isDocumentLoaded} = useDocumentType(options.id, options.type)\n\n  const DocumentLayout = useDocumentLayoutComponent()\n\n  // The templates that should be creatable from inside this document pane.\n  // For example, from the \"Create new\" menu in reference inputs.\n  const templateItems = useMemo(() => {\n    return resolveNewDocumentOptions({\n      type: 'document',\n      documentId: options.id,\n      schemaType: options.type,\n    })\n  }, [options.id, options.type, resolveNewDocumentOptions])\n\n  const [templatePermissions, isTemplatePermissionsLoading] = useTemplatePermissions({\n    templateItems,\n  })\n  const isLoaded = isDocumentLoaded && !isTemplatePermissionsLoading\n\n  const providerProps = useMemo(() => {\n    return isLoaded && documentType && options.type !== documentType\n      ? mergeDocumentType(props, options, documentType)\n      : props\n  }, [props, documentType, isLoaded, options])\n\n  const {ReferenceChildLink, handleEditReference, groupIndex, routerPanesState} = paneRouter\n  const childParams = routerPanesState[groupIndex + 1]?.[0].params || {}\n  const routerPanesStateLength = routerPanesState.length\n  const {parentRefPath} = childParams\n\n  const activePath: {path: Path; state: 'selected' | 'pressed' | 'none'} = useMemo(() => {\n    return parentRefPath\n      ? {\n          path: pathFromString(parentRefPath),\n          state:\n            // eslint-disable-next-line no-nested-ternary\n            groupIndex >= routerPanesStateLength - 1\n              ? 'none'\n              : groupIndex >= routerPanesStateLength - 2\n                ? 'selected'\n                : 'pressed',\n        }\n      : {path: [], state: 'none'}\n  }, [parentRefPath, groupIndex, routerPanesStateLength])\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (options.type === '*' && !isLoaded) {\n    return (\n      <LoadingPane\n        flex={2.5}\n        minWidth={320}\n        paneKey={paneKey}\n        title={t('panes.document-pane.document-not-found.loading')}\n      />\n    )\n  }\n\n  if (!documentType) {\n    return (\n      <ErrorPane\n        flex={2.5}\n        minWidth={320}\n        paneKey={paneKey}\n        title={t('panes.document-pane.document-not-found.title')}\n      >\n        <Stack space={4}>\n          <Text as=\"p\">\n            <Translate\n              t={t}\n              i18nKey=\"panes.document-pane.document-not-found.text\"\n              values={{id: options.id}}\n            />\n          </Text>\n        </Stack>\n      </ErrorPane>\n    )\n  }\n\n  return (\n    <DocumentPaneProvider\n      // this needs to be here to avoid formState from being re-used across (incompatible) document types\n      // see https://github.com/sanity-io/sanity/discussions/3794 for a description of the problem\n      key={`${documentType}-${options.id}`}\n      {...providerProps}\n    >\n      {/* NOTE: this is a temporary location for this provider until we */}\n      {/* stabilize the reference input options formally in the form builder */}\n      {/* eslint-disable-next-line react/jsx-pascal-case */}\n      <ReferenceInputOptionsProvider\n        EditReferenceLinkComponent={ReferenceChildLink}\n        onEditReference={handleEditReference}\n        initialValueTemplateItems={templatePermissions}\n        activePath={activePath}\n      >\n        <CommentsWrapper documentId={options.id} documentType={options.type}>\n          <DocumentLayout documentId={options.id} documentType={options.type} />\n        </CommentsWrapper>\n      </ReferenceInputOptionsProvider>\n    </DocumentPaneProvider>\n  )\n}\n\nfunction usePaneOptions(\n  options: DocumentPaneOptions,\n  params: Record<string, string | undefined> = {},\n): DocumentPaneOptions {\n  const templates = useTemplates()\n\n  return useMemo(() => {\n    // The document type is provided, so return\n    if (options.type && options.type !== '*') {\n      return options\n    }\n\n    // Attempt to derive document type from the template configuration\n    const templateName = options.template || params.template\n    const template = templateName ? templates.find((t) => t.id === templateName) : undefined\n    const documentType = template?.schemaType\n\n    // No document type was found in a template\n    if (!documentType) {\n      return options\n    }\n\n    // The template provided the document type, so modify the pane’s `options` property\n    return {...options, type: documentType}\n  }, [options, params.template, templates])\n}\n\nfunction mergeDocumentType(\n  props: DocumentPaneProviderProps,\n  options: DocumentPaneOptions,\n  documentType: string,\n): DocumentPaneProviderProps {\n  return {\n    ...props,\n    pane: {\n      ...props.pane,\n      options: {...options, type: documentType},\n    },\n  }\n}\n", "import {type SortOrder} from './types'\n\nexport const PARTIAL_PAGE_LIMIT = 100\nexport const FULL_LIST_LIMIT = 2000\nexport const DEFAULT_ORDERING: SortOrder = {by: [{field: '_updatedAt', direction: 'desc'}]}\nexport const EMPTY_RECORD: Record<string, unknown> = {}\n", "import {SyncIcon} from '@sanity/icons'\nimport {type SanityDocument} from '@sanity/types'\nimport {Box, Container, Flex, Heading, Stack, Text} from '@sanity/ui'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  CommandList,\n  type CommandListRenderItemCallback,\n  type GeneralPreviewLayoutKey,\n  getPublishedId,\n  LoadingBlock,\n  SanityDefaultPreview,\n  Translate,\n  useSchema,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button} from '../../../ui-components'\nimport {Delay, PaneContent, PaneItem, usePane, usePaneLayout} from '../../components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {FULL_LIST_LIMIT} from './constants'\nimport {type DocumentListPaneItem, type LoadingVariant} from './types'\n\nconst RootBox = styled(Box)`\n  position: relative;\n`\n\nconst CommandListBox = styled(Box)`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n`\n\ninterface DocumentListPaneContentProps {\n  childItemId?: string\n  error: {message: string} | null\n  filterIsSimpleTypeConstraint: boolean\n  hasMaxItems?: boolean\n  hasSearchQuery: boolean\n  isActive?: boolean\n  isLazyLoading: boolean\n  isLoading: boolean\n  items: DocumentListPaneItem[]\n  layout?: GeneralPreviewLayoutKey\n  loadingVariant?: LoadingVariant\n  onListChange: () => void\n  onRetry?: (event: unknown) => void\n  paneTitle: string\n  searchInputElement: HTMLInputElement | null\n  showIcons: boolean\n}\n\nconst SKELETON_ITEMS = [...Array(30).keys()]\n\nfunction LoadingView(props: {layout?: GeneralPreviewLayoutKey}) {\n  const {layout} = props\n\n  return (\n    <Stack paddingX={3} paddingY={2} paddingTop={0} space={1}>\n      {SKELETON_ITEMS.map((num) => (\n        <SanityDefaultPreview isPlaceholder layout={layout} key={num} />\n      ))}\n    </Stack>\n  )\n}\n\nexport function DocumentListPaneContent(props: DocumentListPaneContentProps) {\n  const {\n    childItemId,\n    error,\n    filterIsSimpleTypeConstraint,\n    hasMaxItems,\n    hasSearchQuery,\n    isActive,\n    isLazyLoading,\n    isLoading,\n    items,\n    layout,\n    loadingVariant,\n    onListChange,\n    onRetry,\n    paneTitle,\n    searchInputElement,\n    showIcons,\n  } = props\n\n  const schema = useSchema()\n\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const {collapsed, index} = usePane()\n  const [shouldRender, setShouldRender] = useState(false)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleEndReached = useCallback(() => {\n    if (isLoading || isLazyLoading || !shouldRender) return\n\n    onListChange()\n  }, [isLazyLoading, isLoading, onListChange, shouldRender])\n\n  useEffect(() => {\n    if (collapsed) return undefined\n\n    const timer = setTimeout(() => {\n      setShouldRender(true)\n    }, 0)\n\n    return () => {\n      clearTimeout(timer)\n    }\n  }, [collapsed, items])\n\n  const renderItem = useCallback<CommandListRenderItemCallback<SanityDocument>>(\n    (item, {activeIndex}) => {\n      const publishedId = getPublishedId(item._id)\n      const isSelected = childItemId === publishedId\n      const pressed = !isActive && isSelected\n      const selected = isActive && isSelected\n      const isLastItem = activeIndex === items.length - 1\n      const showSpinner = isLastItem && isLazyLoading\n      const showMaxItemsMessage = isLastItem && hasMaxItems\n\n      return (\n        <>\n          <PaneItem\n            icon={showIcons === false ? false : undefined}\n            id={publishedId}\n            layout={layout}\n            marginBottom={1}\n            pressed={pressed}\n            schemaType={schema.get(item._type)}\n            selected={selected}\n            value={item}\n          />\n\n          {showSpinner && <LoadingBlock />}\n\n          {showMaxItemsMessage && (\n            <Box marginY={1} paddingX={3} paddingY={4}>\n              <Text align=\"center\" muted size={1}>\n                {t('panes.document-list-pane.max-items.text', {limit: FULL_LIST_LIMIT})}\n              </Text>\n            </Box>\n          )}\n        </>\n      )\n    },\n    [childItemId, isActive, items.length, layout, schema, showIcons, hasMaxItems, isLazyLoading, t],\n  )\n\n  const noDocumentsContent = useMemo(() => {\n    if (hasSearchQuery) {\n      return (\n        <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n          <Container width={1}>\n            <Box paddingX={4} paddingY={5}>\n              <Text align=\"center\" muted>\n                {t('panes.document-list-pane.no-documents.text')}\n              </Text>\n            </Box>\n          </Container>\n        </Flex>\n      )\n    }\n\n    return (\n      <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n        <Container width={1}>\n          <Box paddingX={4} paddingY={5}>\n            <Text align=\"center\" muted>\n              {filterIsSimpleTypeConstraint\n                ? t('panes.document-list-pane.no-documents-of-type.text')\n                : t('panes.document-list-pane.no-matching-documents.text')}\n            </Text>\n          </Box>\n        </Container>\n      </Flex>\n    )\n  }, [filterIsSimpleTypeConstraint, hasSearchQuery, t])\n\n  const mainContent = useMemo(() => {\n    if (!shouldRender) {\n      return null\n    }\n\n    if (error) {\n      return (\n        <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n          <Container width={1}>\n            <Stack paddingX={4} paddingY={5} space={4}>\n              <Heading as=\"h3\">{t('panes.document-list-pane.error.title')}</Heading>\n              <Text as=\"p\">\n                <Translate\n                  t={t}\n                  i18nKey=\"panes.document-list-pane.error.text\"\n                  values={{error: error.message}}\n                  components={{Code: ({children}) => <code>{children}</code>}}\n                />\n              </Text>\n\n              {onRetry && (\n                <Box>\n                  <Button\n                    icon={SyncIcon}\n                    onClick={onRetry}\n                    text={t('panes.document-list-pane.error.retry-button.text')}\n                    tone=\"primary\"\n                  />\n                </Box>\n              )}\n            </Stack>\n          </Container>\n        </Flex>\n      )\n    }\n\n    if (!isLoading && items.length === 0) {\n      return noDocumentsContent\n    }\n\n    if (loadingVariant === 'initial' && isLoading) {\n      return (\n        <Delay ms={300}>\n          <LoadingView layout={layout} />\n        </Delay>\n      )\n    }\n\n    if (loadingVariant === 'spinner' && isLoading) {\n      return null\n    }\n\n    // prevents bug when panes won't render if first rendered while collapsed\n    const key = `${index}-${collapsed}`\n\n    return (\n      <RootBox overflow=\"hidden\" height=\"fill\">\n        <CommandListBox>\n          <CommandList\n            activeItemDataAttr=\"data-hovered\"\n            ariaLabel={paneTitle}\n            canReceiveFocus\n            inputElement={searchInputElement}\n            itemHeight={51}\n            items={items}\n            key={key}\n            onEndReached={handleEndReached}\n            onlyShowSelectionWhenActive\n            overscan={10}\n            paddingBottom={1}\n            paddingX={3}\n            renderItem={renderItem}\n            wrapAround={false}\n          />\n        </CommandListBox>\n      </RootBox>\n    )\n    // Explicitly don't include `noDocumentsContent` in the deps array, as it's\n    // causing a visual bug where the \"No documents\" message is shown for a split second\n    // when clearing a search query with no results\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    collapsed,\n    error,\n    handleEndReached,\n    index,\n    isLoading,\n    items,\n    layout,\n    loadingVariant,\n    // noDocumentsContent,\n    onRetry,\n    renderItem,\n    searchInputElement,\n    shouldRender,\n  ])\n\n  return (\n    <PaneContent\n      data-testid=\"document-list-pane\"\n      overflow={layoutCollapsed || loadingVariant === 'initial' ? 'hidden' : 'auto'}\n    >\n      {mainContent}\n    </PaneContent>\n  )\n}\n", "import {\n  isIndexSegment,\n  isKeySegment,\n  isReferenceSchemaType,\n  type ObjectField,\n  type ObjectFieldType,\n  type ObjectSchemaType,\n  type SanityDocumentLike,\n  type SchemaType,\n} from '@sanity/types'\nimport * as PathUtils from '@sanity/util/paths'\nimport {type ExprNode, parse} from 'groq-js'\nimport {collate, getPublishedId} from 'sanity'\n\nimport {type DocumentListPaneItem, type SortOrder} from './types'\n\nexport function getDocumentKey(value: DocumentListPaneItem, index: number): string {\n  return value._id ? getPublishedId(value._id) : `item-${index}`\n}\n\nexport function removePublishedWithDrafts(documents: SanityDocumentLike[]): DocumentListPaneItem[] {\n  return collate(documents).map((entry) => {\n    const doc = entry.draft || entry.published\n    return {\n      ...doc,\n      hasPublished: !!entry.published,\n      hasDraft: !!entry.draft,\n    }\n  }) as any\n}\n\nexport function applyOrderingFunctions(order: SortOrder, schemaType: ObjectSchemaType): SortOrder {\n  const orderBy = order.by.map((by) => {\n    // Skip those that already have a mapper\n    if (by.mapWith) {\n      return by\n    }\n\n    const fieldType = tryResolveSchemaTypeForPath(schemaType, by.field)\n    if (!fieldType) {\n      return by\n    }\n\n    // Note: order matters here, since the jsonType of a date field is `string`,\n    // but we want to apply `datetime()`, not `lower()`\n    if (fieldExtendsType(fieldType, 'datetime')) {\n      return {...by, mapWith: 'dateTime'}\n    }\n\n    if (fieldType.jsonType === 'string') {\n      return {...by, mapWith: 'lower'}\n    }\n\n    return by\n  })\n\n  return orderBy.every((item, index) => item === order.by[index]) ? order : {...order, by: orderBy}\n}\n\nfunction tryResolveSchemaTypeForPath(baseType: SchemaType, path: string): SchemaType | undefined {\n  const pathSegments = PathUtils.fromString(path)\n\n  let current: SchemaType | undefined = baseType\n  for (const segment of pathSegments) {\n    if (!current) {\n      return undefined\n    }\n\n    if (typeof segment === 'string') {\n      current = getFieldTypeByName(current, segment)\n      continue\n    }\n\n    const isArrayAccessor = isKeySegment(segment) || isIndexSegment(segment)\n    if (!isArrayAccessor || current.jsonType !== 'array') {\n      return undefined\n    }\n\n    const [memberType, otherType] = current.of || []\n    if (otherType || !memberType) {\n      // Can't figure out the type without knowing the value\n      return undefined\n    }\n\n    if (!isReferenceSchemaType(memberType)) {\n      current = memberType\n      continue\n    }\n\n    const [refType, otherRefType] = memberType.to || []\n    if (otherRefType || !refType) {\n      // Can't figure out the type without knowing the value\n      return undefined\n    }\n\n    current = refType\n  }\n\n  return current\n}\n\nfunction getFieldTypeByName(type: SchemaType, fieldName: string): SchemaType | undefined {\n  if (!('fields' in type)) {\n    return undefined\n  }\n\n  const fieldType = type.fields.find((field) => field.name === fieldName)\n  return fieldType ? fieldType.type : undefined\n}\n\nexport function fieldExtendsType(field: ObjectField | ObjectFieldType, ofType: string): boolean {\n  let current: SchemaType | undefined = field.type\n  while (current) {\n    if (current.name === ofType) {\n      return true\n    }\n\n    if (!current.type && current.jsonType === ofType) {\n      return true\n    }\n\n    current = current.type\n  }\n\n  return false\n}\n\n/**\n * Recursively extract static `_type`s from GROQ filter expressions. If the\n * types can't be statically determined then it will return `null`.\n */\n// eslint-disable-next-line complexity\nfunction findTypes(node: ExprNode): Set<string> | null {\n  switch (node.type) {\n    case 'OpCall': {\n      const {left, right} = node\n\n      switch (node.op) {\n        // e.g. `a == b`\n        case '==': {\n          // e.g. `_type == 'value'`\n          if (left.type === 'AccessAttribute' && left.name === '_type' && !left.base) {\n            if (right.type !== 'Value' || typeof right.value !== 'string') return null\n            return new Set([right.value])\n          }\n\n          // e.g. `'value' == _type`\n          if (right.type === 'AccessAttribute' && right.name === '_type' && !right.base) {\n            if (left.type !== 'Value' || typeof left.value !== 'string') return null\n            return new Set([left.value])\n          }\n\n          // otherwise, we can't determine the types statically\n          return null\n        }\n\n        // e.g. `a in b`\n        case 'in': {\n          // if `_type` is not on the left hand side of `in` then it can't be determined\n          if (left.type !== 'AccessAttribute' || left.name !== '_type' || left.base) return null\n          // if the right hand side is not an array then the types can't be determined\n          if (right.type !== 'Array') return null\n\n          const types = new Set<string>()\n          // iterate through all the types\n          for (const element of right.elements) {\n            // if we find a splat, then early return, we can't determine the types\n            if (element.isSplat) return null\n            // if the array element is not just a simple value, then early return\n            if (element.value.type !== 'Value') return null\n            // if the array element value is not a string, then early return\n            if (typeof element.value.value !== 'string') return null\n            // otherwise add the element value to the set of types\n            types.add(element.value.value)\n          }\n\n          // if there were any elements in the types set, return it\n          if (types.size) return types\n          // otherwise, the set of types cannot be determined\n          return null\n        }\n\n        default: {\n          return null\n        }\n      }\n    }\n\n    // groups can just be unwrapped, the AST preserves the order\n    case 'Group': {\n      return findTypes(node.base)\n    }\n\n    // e.g. `_type == 'a' || _type == 'b'`\n    // with Or nodes, if we can't determine the types for either the left or\n    // right hand side then we can't determine the types for any\n    // e.g. `_type == 'a' || isActive`\n    // — can't determine types because `isActive` could be true on another types\n    case 'Or': {\n      const left = findTypes(node.left)\n      if (!left) return null\n\n      const right = findTypes(node.right)\n      if (!right) return null\n\n      return new Set([...left, ...right])\n    }\n\n    // e.g. `_type == 'a' && isActive`\n    // with And nodes, we can determine the types as long as we can determine\n    // the types for one side. We can't determine the types if both are `null`.\n    case 'And': {\n      const left = findTypes(node.left)\n      const right = findTypes(node.right)\n\n      if (!left && !right) return null\n      return new Set([...(left || []), ...(right || [])])\n    }\n\n    default: {\n      return null\n    }\n  }\n}\n\nexport function findStaticTypesInFilter(\n  filter: string,\n  params: Record<string, unknown> = {},\n): string[] | null {\n  try {\n    const types = findTypes(parse(filter, {params}))\n    if (!types) return null\n\n    return Array.from(types).sort()\n  } catch {\n    // if we couldn't parse the filter, just return `null`\n    return null\n  }\n}\n", "import {type SchemaType, type SortOrderingItem} from '@sanity/types'\n\nconst IMPLICIT_SCHEMA_TYPE_FIELDS = ['_id', '_type', '_createdAt', '_updatedAt', '_rev']\n\n// Takes a path array and a schema type and builds a GROQ join every time it enters a reference field\nfunction joinReferences(schemaType: SchemaType, path: string[], strict: boolean = false): string {\n  const [head, ...tail] = path\n\n  if (!('fields' in schemaType)) {\n    return ''\n  }\n\n  const schemaField = schemaType.fields.find((field) => field.name === head)\n  if (!schemaField) {\n    if (!IMPLICIT_SCHEMA_TYPE_FIELDS.includes(head)) {\n      const errorMessage = `The current ordering config targeted the nonexistent field \"${head}\" on schema type \"${schemaType.name}\". It should be one of ${schemaType.fields.map((field) => field.name).join(', ')}`\n      if (strict) {\n        throw new Error(errorMessage)\n      } else {\n        // eslint-disable-next-line no-console\n        console.warn(errorMessage)\n      }\n    }\n    return ''\n  }\n\n  if ('to' in schemaField.type && schemaField.type.name === 'reference') {\n    const refTypes = schemaField.type.to\n    return `${head}->{${refTypes.map((refType) => joinReferences(refType, tail)).join(',')}}`\n  }\n\n  const tailFields = tail.length > 0 && joinReferences(schemaField.type, tail)\n  const tailWrapper = tailFields ? `{${tailFields}}` : ''\n  return tail.length > 0 ? `${head}${tailWrapper}` : head\n}\n\nexport function getExtendedProjection(\n  schemaType: SchemaType,\n  orderBy: SortOrderingItem[],\n  strict: boolean = false,\n): string {\n  return orderBy\n    .map((ordering) => joinReferences(schemaType, ordering.field.split('.'), strict))\n    .join(', ')\n}\n", "import {type SanityClient} from '@sanity/client'\nimport {\n  asyncScheduler,\n  defer,\n  map,\n  merge,\n  mergeMap,\n  type Observable,\n  of,\n  partition,\n  share,\n  take,\n  throttleTime,\n  throwError,\n  timer,\n} from 'rxjs'\nimport {exhaustMapWithTrailing} from 'rxjs-exhaustmap-with-trailing'\nimport {createSearch, getSearchableTypes, type SanityDocumentLike, type Schema} from 'sanity'\n\nimport {getExtendedProjection} from '../../structureBuilder/util/getExtendedProjection'\n// FIXME\n// eslint-disable-next-line boundaries/element-types\nimport {type SortOrder} from './types'\n\ninterface ListenQueryOptions {\n  client: SanityClient\n  filter: string\n  limit: number\n  params: Record<string, unknown>\n  schema: Schema\n  searchQuery: string\n  sort: SortOrder\n  staticTypeNames?: string[] | null\n  maxFieldDepth?: number\n  enableLegacySearch?: boolean\n}\n\nexport function listenSearchQuery(options: ListenQueryOptions): Observable<SanityDocumentLike[]> {\n  const {\n    client,\n    schema,\n    sort,\n    limit,\n    params,\n    filter,\n    searchQuery,\n    staticTypeNames,\n    maxFieldDepth,\n    enableLegacySearch,\n  } = options\n  const sortBy = sort.by\n  const extendedProjection = sort?.extendedProjection\n\n  // Listen for changes with the given filter and params, and whenever a change occurs, we want to\n  // re-fetch the documents that match the search query (see below).\n  // We use a separate listener since the search query is too large to use in a listen query.\n  const events$ = defer(() => {\n    return client.listen(`*[${filter}]`, params, {\n      events: ['welcome', 'mutation', 'reconnect'],\n      includeResult: false,\n      visibility: 'query',\n    })\n  }).pipe(\n    mergeMap((ev, i) => {\n      const isFirst = i === 0\n      if (isFirst && ev.type !== 'welcome') {\n        // If the first event is not welcome, it is most likely a reconnect and\n        // if it's not a reconnect something is very wrong and we should throw.\n        return throwError(\n          () =>\n            new Error(\n              ev.type === 'reconnect'\n                ? 'Could not establish EventSource connection'\n                : `Received unexpected type of first event \"${ev.type}\"`,\n            ),\n        )\n      }\n      return of(ev)\n    }),\n    share(),\n  )\n\n  const [welcome$, mutationAndReconnect$] = partition(events$, (ev) => ev.type === 'welcome')\n\n  return merge(\n    welcome$.pipe(take(1)),\n    mutationAndReconnect$.pipe(throttleTime(1000, asyncScheduler, {leading: true, trailing: true})),\n  ).pipe(\n    exhaustMapWithTrailing((event) => {\n      // Get the types names to use for searching.\n      // If we have a static list of types, we can skip fetching the types and use the static list.\n      const typeNames$ = staticTypeNames\n        ? of(staticTypeNames)\n        : client.observable.fetch(`array::unique(*[${filter}][]._type)`, params)\n\n      // Use the type names to create a search query and fetch the documents that match the query.\n      return typeNames$.pipe(\n        mergeMap((typeNames: string[]) => {\n          const types = getSearchableTypes(schema).filter((type) => {\n            if (typeNames.includes(type.name)) {\n              // make a call to getExtendedProjection in strict mode to verify that all fields are\n              // known. This method will throw an exception if there are any unknown fields specified\n              // in the sort by list\n              getExtendedProjection(type, sort.by, true)\n              return true\n            }\n            return false\n          })\n\n          const search = createSearch(types, client, {\n            filter,\n            params,\n            enableLegacySearch,\n            maxDepth: maxFieldDepth,\n          })\n\n          const doFetch = () => {\n            const searchTerms = {\n              query: searchQuery || '',\n              types,\n            }\n\n            const searchOptions = {\n              __unstable_extendedProjection: extendedProjection,\n              comments: [`findability-source: ${searchQuery ? 'list-query' : 'list'}`],\n              limit,\n              skipSortByScore: true,\n              sort: sortBy,\n            }\n\n            return search(searchTerms, searchOptions).pipe(\n              map((result) =>\n                // eslint-disable-next-line max-nested-callbacks\n                result.hits.map(({hit}) => hit),\n              ),\n            )\n          }\n\n          if (event.type === 'mutation' && event.visibility !== 'query') {\n            // Even though the listener request specifies visibility=query, the events are not guaranteed to be delivered with visibility=query\n            // If the event we are responding to arrives with visibility != query, we add a little delay to allow for the updated document to be available for queries\n            // See https://www.sanity.io/docs/listening#visibility-c4786e55c3ff\n            return timer(1200).pipe(mergeMap(doFetch))\n          }\n          return doFetch()\n        }),\n      )\n    }),\n  )\n}\n", "import {useCallback, useEffect, useMemo, useState} from 'react'\nimport {concat, fromEvent, merge, of, Subject, throwError} from 'rxjs'\nimport {catchError, map, mergeMap, scan, startWith, take} from 'rxjs/operators'\nimport {\n  DEFAULT_STUDIO_CLIENT_OPTIONS,\n  useClient,\n  useSchema,\n  useSearchMaxFieldDepth,\n  useWorkspace,\n} from 'sanity'\n\nimport {DEFAULT_ORDERING, FULL_LIST_LIMIT, PARTIAL_PAGE_LIMIT} from './constants'\nimport {findStaticTypesInFilter, removePublishedWithDrafts} from './helpers'\nimport {listenSearchQuery} from './listenSearchQuery'\nimport {type DocumentListPaneItem, type QueryResult, type SortOrder} from './types'\n\nconst EMPTY_ARRAY: [] = []\n\nconst INITIAL_STATE: QueryResult = {\n  error: null,\n  onRetry: undefined,\n  result: null,\n}\n\ninterface UseDocumentListOpts {\n  apiVersion?: string\n  filter: string\n  params: Record<string, unknown>\n  searchQuery: string | null\n  sortOrder?: SortOrder\n}\n\ninterface DocumentListState {\n  error: {message: string} | null\n  hasMaxItems?: boolean\n  isLazyLoading: boolean\n  isLoading: boolean\n  isSearchReady: boolean\n  items: DocumentListPaneItem[]\n  onListChange: () => void\n  onRetry?: (event: unknown) => void\n}\n\nconst INITIAL_QUERY_RESULTS: QueryResult = {\n  result: null,\n  error: null,\n}\n\n/**\n * @internal\n */\nexport function useDocumentList(opts: UseDocumentListOpts): DocumentListState {\n  const {filter, params: paramsProp, sortOrder, searchQuery, apiVersion} = opts\n  const client = useClient({\n    ...DEFAULT_STUDIO_CLIENT_OPTIONS,\n    apiVersion: apiVersion || DEFAULT_STUDIO_CLIENT_OPTIONS.apiVersion,\n  })\n  const {enableLegacySearch = false} = useWorkspace().search\n  const schema = useSchema()\n  const maxFieldDepth = useSearchMaxFieldDepth()\n\n  const [resultState, setResult] = useState<QueryResult>(INITIAL_STATE)\n  const {onRetry, error, result} = resultState\n\n  const documents = result?.documents\n\n  // Filter out published documents that have drafts to avoid duplicates in the list.\n  const items = useMemo(\n    () => (documents ? removePublishedWithDrafts(documents) : EMPTY_ARRAY),\n    [documents],\n  )\n\n  // A state variable to keep track of whether we are currently lazy loading the list.\n  // This is used to determine whether we should show the loading spinner at the bottom of the list.\n  const [isLazyLoading, setIsLazyLoading] = useState<boolean>(false)\n\n  // A state to keep track of whether we have fetched the full list of documents.\n  const [hasFullList, setHasFullList] = useState<boolean>(false)\n\n  // A state to keep track of whether we should fetch the full list of documents.\n  const [shouldFetchFullList, setShouldFetchFullList] = useState<boolean>(false)\n\n  // Get the type name from the filter, if it is a simple type filter.\n  const typeNameFromFilter = useMemo(\n    () => findStaticTypesInFilter(filter, paramsProp),\n    [filter, paramsProp],\n  )\n\n  // We can't have the loading state as part of the result state, since the loading\n  // state would be updated whenever a mutation is performed in a document in the list.\n  // Instead, we determine if the list is loading by checking if the result is null.\n  // The result is null when:\n  // 1. We are making the initial request\n  // 2. The user has performed a search or changed the sort order\n  const isLoading = result === null && !error\n\n  // A flag to indicate whether we have reached the maximum number of documents.\n  const hasMaxItems = documents?.length === FULL_LIST_LIMIT\n\n  // This function is triggered when the user has scrolled to the bottom of the list\n  // and we need to fetch more items.\n  const onListChange = useCallback(() => {\n    if (isLoading || hasFullList || shouldFetchFullList) return\n\n    setShouldFetchFullList(true)\n  }, [isLoading, hasFullList, shouldFetchFullList])\n\n  const handleSetResult = useCallback(\n    (res: QueryResult) => {\n      if (res.error) {\n        setResult(res)\n        return\n      }\n\n      const documentsLength = res.result?.documents?.length || 0\n      const isLoadingMoreItems = !res.error && res?.result === null && shouldFetchFullList\n\n      // 1. When the result is null and shouldFetchFullList is true, we are loading _more_ items.\n      // In this case, we want to wait for the next result and set the isLazyLoading state to true.\n      if (isLoadingMoreItems) {\n        setIsLazyLoading(true)\n        return\n      }\n\n      // 2. If the result is not null, and less than the partial page limit, we know that\n      // we have fetched the full list of documents. In this case, we want to set the\n      // hasFullList state to true to prevent further requests.\n      if (documentsLength < PARTIAL_PAGE_LIMIT && documentsLength !== 0 && !shouldFetchFullList) {\n        setHasFullList(true)\n      }\n\n      // 3. If the result is null, we are loading items. In this case, we want to\n      // wait for the next result.\n      if (res?.result === null) {\n        setResult((prev) => ({...(prev.error ? res : prev)}))\n        return\n      }\n\n      // 4. Finally, set the result\n      setIsLazyLoading(false)\n      setResult(res)\n    },\n    [shouldFetchFullList],\n  )\n\n  const queryResults$ = useMemo(() => {\n    const onRetry$ = new Subject<void>()\n    const _onRetry = () => onRetry$.next()\n\n    const limit = shouldFetchFullList ? FULL_LIST_LIMIT : PARTIAL_PAGE_LIMIT\n    const sort = sortOrder || DEFAULT_ORDERING\n\n    return listenSearchQuery({\n      client,\n      filter,\n      limit,\n      params: paramsProp,\n      schema,\n      searchQuery: searchQuery || '',\n      sort,\n      staticTypeNames: typeNameFromFilter,\n      maxFieldDepth,\n      enableLegacySearch,\n    }).pipe(\n      map((results) => ({\n        result: {documents: results},\n        error: null,\n      })),\n      startWith(INITIAL_QUERY_RESULTS),\n      catchError((err) => {\n        if (err instanceof ProgressEvent) {\n          // todo: hack to work around issue with get-it (used by sanity/client) that propagates connection errors as ProgressEvent instances. This if-block can be removed once @sanity/client is par with a version of get-it that includes this fix: https://github.com/sanity-io/get-it/pull/127\n          return throwError(() => new Error(`Request error`))\n        }\n        return throwError(() => err)\n      }),\n      catchError((err, caught$) => {\n        return concat(\n          of({result: null, error: err}),\n          merge(fromEvent(window, 'online'), onRetry$).pipe(\n            take(1),\n            mergeMap(() => caught$),\n          ),\n        )\n      }),\n      scan((prev, next) => ({...prev, ...next, onRetry: _onRetry})),\n    )\n  }, [\n    shouldFetchFullList,\n    sortOrder,\n    client,\n    filter,\n    paramsProp,\n    schema,\n    searchQuery,\n    typeNameFromFilter,\n    maxFieldDepth,\n    enableLegacySearch,\n  ])\n\n  useEffect(() => {\n    const sub = queryResults$.subscribe(handleSetResult)\n\n    return () => {\n      sub.unsubscribe()\n    }\n  }, [handleSetResult, queryResults$])\n\n  const reset = useCallback(() => {\n    setHasFullList(false)\n    setIsLazyLoading(false)\n    setResult(INITIAL_STATE)\n    setShouldFetchFullList(false)\n  }, [])\n\n  useEffect(() => {\n    reset()\n  }, [reset, filter, paramsProp, sortOrder, searchQuery])\n\n  return {\n    error,\n    hasMaxItems,\n    isLazyLoading,\n    isLoading,\n    isSearchReady: !error,\n    items,\n    onListChange,\n    onRetry,\n  }\n}\n", "import {SearchIcon, SpinnerIcon} from '@sanity/icons'\nimport {Box, TextInput} from '@sanity/ui'\nimport {memo, useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {useObservableCallback} from 'react-rx'\nimport {debounce, map, type Observable, of, tap, timer} from 'rxjs'\nimport {\n  type GeneralPreviewLayoutKey,\n  useI18nText,\n  useSchema,\n  useTranslation,\n  useUnique,\n} from 'sanity'\nimport {keyframes, styled} from 'styled-components'\n\nimport {structureLocaleNamespace} from '../../i18n'\nimport {type BaseStructureToolPaneProps} from '../types'\nimport {EMPTY_RECORD} from './constants'\nimport {DocumentListPaneContent} from './DocumentListPaneContent'\nimport {applyOrderingFunctions, findStaticTypesInFilter} from './helpers'\nimport {useShallowUnique} from './PaneContainer'\nimport {type LoadingVariant, type SortOrder} from './types'\nimport {useDocumentList} from './useDocumentList'\n\n/**\n * @internal\n */\nexport type DocumentListPaneProps = BaseStructureToolPaneProps<'documentList'> & {\n  sortOrder?: SortOrder\n  layout?: Exclude<GeneralPreviewLayoutKey, 'sheetList'>\n}\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst AnimatedSpinnerIcon = styled(SpinnerIcon)`\n  animation: ${rotate} 500ms linear infinite;\n`\n\n/**\n * @internal\n */\n\nexport const DocumentListPane = memo(function DocumentListPane(props: DocumentListPaneProps) {\n  const {childItemId, isActive, pane, paneKey, sortOrder: sortOrderRaw, layout} = props\n  const schema = useSchema()\n\n  const {displayOptions, options} = pane\n  const {apiVersion, filter} = options\n  const params = useShallowUnique(options.params || EMPTY_RECORD)\n  const typeName = useMemo(() => {\n    const staticTypes = findStaticTypesInFilter(filter, params)\n    if (staticTypes?.length === 1) return staticTypes[0]\n    return null\n  }, [filter, params])\n\n  const showIcons = displayOptions?.showIcons !== false\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {title} = useI18nText(pane)\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const [searchInputValue, setSearchInputValue] = useState<string>('')\n  const [searchInputElement, setSearchInputElement] = useState<HTMLInputElement | null>(null)\n\n  // A ref to determine if we should show the loading spinner in the search input.\n  // This is used to avoid showing the spinner on initial load of the document list.\n  // We only wan't to show the spinner when the user interacts with the search input.\n  const showSearchLoadingRef = useRef<boolean>(false)\n\n  const sortWithOrderingFn =\n    typeName && sortOrderRaw\n      ? applyOrderingFunctions(sortOrderRaw, schema.get(typeName) as any)\n      : sortOrderRaw\n\n  const sortOrder = useUnique(sortWithOrderingFn)\n\n  const {\n    error,\n    hasMaxItems,\n    isLazyLoading,\n    isLoading,\n    isSearchReady,\n    items,\n    onListChange,\n    onRetry,\n  } = useDocumentList({\n    apiVersion,\n    filter,\n    params,\n    searchQuery: searchQuery?.trim(),\n    sortOrder,\n  })\n\n  const handleQueryChange = useObservableCallback(\n    (event$: Observable<React.ChangeEvent<HTMLInputElement>>) => {\n      return event$.pipe(\n        map((event) => event.target.value),\n        tap(setSearchInputValue),\n        debounce((value) => (value === '' ? of('') : timer(300))),\n        tap(setSearchQuery),\n      )\n    },\n    [],\n  )\n\n  const handleClearSearch = useCallback(() => {\n    setSearchQuery('')\n    setSearchInputValue('')\n  }, [])\n\n  const handleSearchKeyDown = useCallback(\n    (event: React.KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Escape') {\n        handleClearSearch()\n      }\n    },\n    [handleClearSearch],\n  )\n\n  useEffect(() => {\n    if (showSearchLoadingRef.current === false && !isLoading) {\n      showSearchLoadingRef.current = true\n    }\n\n    return () => {\n      showSearchLoadingRef.current = false\n    }\n  }, [isLoading])\n\n  useEffect(() => {\n    // Clear search field and reset showSearchLoadingRef ref\n    // when switching between panes (i.e. when paneKey changes).\n    handleClearSearch()\n    showSearchLoadingRef.current = false\n  }, [paneKey, handleClearSearch])\n\n  const loadingVariant: LoadingVariant = useMemo(() => {\n    const showSpinner = isLoading && items.length === 0 && showSearchLoadingRef.current\n\n    if (showSpinner) return 'spinner'\n\n    return 'initial'\n  }, [isLoading, items.length])\n\n  return (\n    <>\n      <Box paddingX={3} paddingBottom={3}>\n        <TextInput\n          aria-label={t('panes.document-list-pane.search-input.aria-label')}\n          autoComplete=\"off\"\n          border={false}\n          clearButton={Boolean(searchQuery)}\n          disabled={!isSearchReady}\n          fontSize={[2, 2, 1]}\n          icon={loadingVariant === 'spinner' ? AnimatedSpinnerIcon : SearchIcon}\n          onChange={handleQueryChange}\n          onClear={handleClearSearch}\n          onKeyDown={handleSearchKeyDown}\n          padding={2}\n          placeholder={t('panes.document-list-pane.search-input.placeholder')}\n          radius={2}\n          ref={setSearchInputElement}\n          spellCheck={false}\n          value={searchInputValue}\n        />\n      </Box>\n      <DocumentListPaneContent\n        childItemId={childItemId}\n        error={error}\n        filterIsSimpleTypeConstraint={!!typeName}\n        hasMaxItems={hasMaxItems}\n        hasSearchQuery={Boolean(searchQuery)}\n        isActive={isActive}\n        isLazyLoading={isLazyLoading}\n        isLoading={isLoading}\n        items={items}\n        key={paneKey}\n        layout={layout}\n        loadingVariant={loadingVariant}\n        onListChange={onListChange}\n        onRetry={onRetry}\n        paneTitle={title}\n        searchInputElement={searchInputElement}\n        showIcons={showIcons}\n      />\n    </>\n  )\n})\n", "import {Text} from '@sanity/ui'\n\nexport function DocumentSheetListPane() {\n  return (\n    <div data-testid=\"document-sheet-list-pane\">\n      {/* eslint-disable-next-line i18next/no-literal-string */}\n      <Text>SheetList view</Text>\n    </div>\n  )\n}\n", "import {ArrowLeftIcon} from '@sanity/icons'\nimport {memo, type ReactNode, useMemo} from 'react'\nimport {type GeneralPreviewLayoutKey, type InitialValueTemplateItem} from 'sanity'\n\nimport {Button, TooltipDelayGroupProvider} from '../../../ui-components'\nimport {\n  BackLink,\n  PaneHeader as StructurePaneHeader,\n  PaneHeaderActions,\n  usePane,\n} from '../../components'\nimport {\n  type PaneMenuItem,\n  type PaneMenuItemGroup,\n  type StructureToolPaneActionHandler,\n} from '../../types'\nimport {useStructureTool} from '../../useStructureTool'\nimport {type SortOrder} from './types'\n\ninterface PaneHeaderProps {\n  contentAfter?: ReactNode\n  index: number\n  initialValueTemplates?: InitialValueTemplateItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  menuItems?: PaneMenuItem[]\n  setLayout: (layout: GeneralPreviewLayoutKey) => void\n  setSortOrder: (sortOrder: SortOrder) => void\n  title: string\n}\n\nexport const PaneHeader = memo(\n  ({\n    contentAfter,\n    index,\n    initialValueTemplates = [],\n    menuItemGroups = [],\n    menuItems = [],\n    setLayout,\n    setSortOrder,\n    title,\n  }: PaneHeaderProps) => {\n    const {features} = useStructureTool()\n    const {collapsed, isLast} = usePane()\n    // Prevent focus if this is the last (non-collapsed) pane.\n    const tabIndex = isLast && !collapsed ? -1 : 0\n\n    const actionHandlers = useMemo((): Record<string, StructureToolPaneActionHandler> => {\n      return {\n        setLayout: ({layout: value}: {layout: GeneralPreviewLayoutKey}) => {\n          setLayout(value)\n        },\n        setSortOrder: (sort: SortOrder) => {\n          setSortOrder(sort)\n        },\n      }\n    }, [setLayout, setSortOrder])\n\n    return (\n      <TooltipDelayGroupProvider>\n        <StructurePaneHeader\n          actions={\n            <PaneHeaderActions\n              initialValueTemplateItems={initialValueTemplates}\n              actionHandlers={actionHandlers}\n              menuItemGroups={menuItemGroups}\n              menuItems={menuItems}\n            />\n          }\n          backButton={\n            features.backButton &&\n            index > 0 && (\n              <Button\n                as={BackLink}\n                data-as=\"a\"\n                icon={ArrowLeftIcon}\n                mode=\"bleed\"\n                tooltipProps={{content: 'Back'}}\n              />\n            )\n          }\n          contentAfter={contentAfter}\n          tabIndex={tabIndex}\n          title={title}\n        />\n      </TooltipDelayGroupProvider>\n    )\n  },\n)\n\nPaneHeader.displayName = 'PaneHeader'\n", "import {Card, Code} from '@sanity/ui'\nimport {isEqual} from 'lodash'\nimport {memo, useMemo, useRef} from 'react'\nimport {\n  EMPTY_ARRAY,\n  type GeneralDocumentListLayoutKey,\n  SourceProvider,\n  useI18nText,\n  useSource,\n} from 'sanity'\nimport shallowEquals from 'shallow-equals'\n\nimport {Pane} from '../../components/pane'\nimport {_DEBUG} from '../../constants'\nimport {type PaneMenuItem} from '../../types'\nimport {useStructureToolSetting} from '../../useStructureToolSetting'\nimport {type BaseStructureToolPaneProps} from '../types'\nimport {DEFAULT_ORDERING, EMPTY_RECORD} from './constants'\nimport {DocumentListPane} from './DocumentListPane'\nimport {DocumentSheetListPane} from './DocumentSheetListPane'\nimport {findStaticTypesInFilter} from './helpers'\nimport {PaneHeader} from './PaneHeader'\nimport {type SortOrder} from './types'\n\nconst addSelectedStateToMenuItems = (options: {\n  menuItems?: PaneMenuItem[]\n  sortOrderRaw?: SortOrder\n  layout?: GeneralDocumentListLayoutKey\n}) => {\n  const {menuItems, sortOrderRaw, layout} = options\n\n  return menuItems?.map((item) => {\n    if (item.params?.layout) {\n      return {\n        ...item,\n        selected: layout === item.params?.layout,\n      }\n    }\n\n    if (item?.params?.by) {\n      return {\n        ...item,\n        selected: isEqual(sortOrderRaw?.by, item?.params?.by || EMPTY_ARRAY),\n      }\n    }\n\n    return {...item, selected: false}\n  })\n}\n\nexport function useShallowUnique<ValueType>(value: ValueType): ValueType {\n  const valueRef = useRef<ValueType>(value)\n  if (!shallowEquals(valueRef.current, value)) {\n    valueRef.current = value\n  }\n  return valueRef.current\n}\n\n/**\n * @internal\n */\nexport const PaneContainer = memo(function PaneContainer(\n  props: BaseStructureToolPaneProps<'documentList'>,\n) {\n  const {index, isSelected, pane, paneKey} = props\n  const {name: parentSourceName} = useSource()\n\n  const {\n    defaultLayout = 'default',\n    initialValueTemplates = EMPTY_ARRAY,\n    menuItemGroups,\n    menuItems,\n    options,\n  } = pane\n  const {defaultOrdering = EMPTY_ARRAY, filter} = options\n  const params = useShallowUnique(options.params || EMPTY_RECORD)\n  const sourceName = pane.source\n  const typeName = useMemo(() => {\n    const staticTypes = findStaticTypesInFilter(filter, params)\n    if (staticTypes?.length === 1) return staticTypes[0]\n    return null\n  }, [filter, params])\n\n  const [layout, setLayout] = useStructureToolSetting<GeneralDocumentListLayoutKey>(\n    'layout',\n    typeName ?? pane.id, //pane.id for anything that is not documentTypeList\n    defaultLayout,\n  )\n\n  const {title} = useI18nText(pane)\n\n  // Ensure that we use the defaultOrdering value from structure builder if any as the default\n  const defaultSortOrder = useMemo(() => {\n    return defaultOrdering?.length > 0 ? {by: defaultOrdering} : DEFAULT_ORDERING\n  }, [defaultOrdering])\n\n  const [sortOrderRaw, setSortOrder] = useStructureToolSetting<SortOrder>(\n    'sort-order',\n    typeName ?? pane.id, //pane.id for anything that is not documentTypeList\n    defaultSortOrder,\n  )\n\n  const menuItemsWithSelectedState = useMemo(\n    () =>\n      addSelectedStateToMenuItems({\n        menuItems,\n        sortOrderRaw,\n        layout,\n      }),\n    [layout, menuItems, sortOrderRaw],\n  )\n\n  const isSheetListLayout = layout === 'sheetList'\n  const paneLayout = isSheetListLayout ? (\n    <DocumentSheetListPane />\n  ) : (\n    <DocumentListPane {...props} sortOrder={sortOrderRaw} layout={layout} />\n  )\n\n  return (\n    <SourceProvider name={sourceName || parentSourceName}>\n      <Pane\n        data-ui=\"DocumentListPane\"\n        id={paneKey}\n        minWidth={320}\n        {...(isSheetListLayout ? {} : {currentMaxWidth: 350, maxWidth: 640})}\n        selected={isSelected}\n      >\n        {_DEBUG && (\n          <Card padding={4} tone=\"transparent\">\n            <Code>{pane.source || '(none)'}</Code>\n          </Card>\n        )}\n\n        <PaneHeader\n          index={index}\n          initialValueTemplates={initialValueTemplates}\n          menuItemGroups={menuItemGroups}\n          menuItems={menuItemsWithSelectedState}\n          setLayout={setLayout}\n          setSortOrder={setSortOrder}\n          title={title}\n        />\n        {paneLayout}\n      </Pane>\n    </SourceProvider>\n  )\n})\n", "import {type SerializePath} from './StructureNodes'\n\n/** @internal */\nexport class SerializeError extends Error {\n  public readonly path: SerializePath\n  public helpId?: HELP_URL\n\n  constructor(\n    message: string,\n    parentPath: SerializePath,\n    pathSegment: string | number | undefined,\n    hint?: string,\n  ) {\n    super(message)\n    this.name = 'SerializeError'\n    const segment = typeof pathSegment === 'undefined' ? '<unknown>' : `${pathSegment}`\n    this.path = (parentPath || []).concat(hint ? `${segment} (${hint})` : segment)\n  }\n\n  withHelpUrl(id: HELP_URL): SerializeError {\n    this.helpId = id\n    return this\n  }\n}\n\n/** @internal */\nexport enum HELP_URL {\n  ID_REQUIRED = 'structure-node-id-required',\n  TITLE_REQUIRED = 'structure-title-required',\n  FILTER_REQUIRED = 'structure-filter-required',\n  INVALID_LIST_ITEM = 'structure-invalid-list-item',\n  COMPONENT_REQUIRED = 'structure-view-component-required',\n  DOCUMENT_ID_REQUIRED = 'structure-document-id-required',\n  DOCUMENT_TYPE_REQUIRED = 'structure-document-type-required',\n  SCHEMA_TYPE_REQUIRED = 'structure-schema-type-required',\n  SCHEMA_TYPE_NOT_FOUND = 'structure-schema-type-not-found',\n  LIST_ITEMS_MUST_BE_ARRAY = 'structure-list-items-must-be-array',\n  QUERY_PROVIDED_FOR_FILTER = 'structure-query-provided-for-filter',\n  ACTION_OR_INTENT_REQUIRED = 'structure-action-or-intent-required',\n  LIST_ITEM_IDS_MUST_BE_UNIQUE = 'structure-list-item-ids-must-be-unique',\n  ACTION_AND_INTENT_MUTUALLY_EXCLUSIVE = 'structure-action-and-intent-mutually-exclusive',\n  API_VERSION_REQUIRED_FOR_CUSTOM_FILTER = 'structure-api-version-required-for-custom-filter',\n}\n", "import {type SortOrdering} from '@sanity/types'\n\nimport {structureLocaleNamespace} from '../i18n'\n\nexport const ORDER_BY_UPDATED_AT: SortOrdering = {\n  title: 'Last edited',\n  i18n: {\n    title: {\n      key: 'menu-items.sort-by.last-edited',\n      ns: structureLocaleNamespace,\n    },\n  },\n  name: 'lastEditedDesc',\n  by: [{field: '_updatedAt', direction: 'desc'}],\n}\n\nexport const ORDER_BY_CREATED_AT: SortOrdering = {\n  title: 'Created',\n  i18n: {\n    title: {\n      key: 'menu-items.sort-by.created',\n      ns: structureLocaleNamespace,\n    },\n  },\n  name: 'lastCreatedDesc',\n  by: [{field: '_createdAt', direction: 'desc'}],\n}\n\nexport const DEFAULT_SELECTED_ORDERING_OPTION = ORDER_BY_UPDATED_AT\n\nexport const DEFAULT_ORDERING_OPTIONS: SortOrdering[] = [\n  ORDER_BY_UPDATED_AT, // _updatedAt\n  ORDER_BY_CREATED_AT, // _createdAt\n]\n", "import {SortIcon} from '@sanity/icons'\nimport {type SchemaType, type SortOrdering, type SortOrderingItem} from '@sanity/types'\nimport {type I18nTextRecord} from 'sanity'\n\nimport {type Intent} from './Intent'\nimport {HELP_URL, SerializeError} from './SerializeError'\nimport {DEFAULT_ORDERING_OPTIONS} from './Sort'\nimport {type Serializable, type SerializeOptions, type SerializePath} from './StructureNodes'\nimport {type StructureContext} from './types'\nimport {getExtendedProjection} from './util/getExtendedProjection'\n\n/** @internal */\nexport function maybeSerializeMenuItem(\n  item: MenuItem | MenuItemBuilder,\n  index: number,\n  path: SerializePath,\n): MenuItem {\n  return item instanceof MenuItemBuilder ? item.serialize({path, index}) : item\n}\n\n/**\n * Menu item action type\n * @public */\nexport type MenuItemActionType =\n  | string\n  | ((params: Record<string, string> | undefined, scope?: any) => void)\n\n/**\n * Menu items parameters\n *\n * @public */\nexport type MenuItemParamsType = Record<string, string | unknown | undefined>\n\n/**\n * Interface for menu items\n *\n * @public */\nexport interface MenuItem {\n  /**\n   * The i18n key and namespace used to populate the localized title. This is\n   * the recommend way to set the title if you are localizing your studio.\n   */\n  i18n?: I18nTextRecord<'title'>\n  /**\n   * Menu Item title. Note that the `i18n` configuration will take\n   * precedence and this title is left here as a fallback if no i18n key is\n   * provided and compatibility with older plugins\n   */\n  title: string\n  /** Menu Item action */\n  action?: MenuItemActionType\n  /** Menu Item intent */\n  intent?: Intent\n  /** Menu Item group */\n  group?: string\n  // TODO: align these with TemplateItem['icon']\n  /** Menu Item icon */\n  icon?: React.ComponentType | React.ReactNode\n  /** Menu Item parameters. See {@link MenuItemParamsType} */\n  params?: MenuItemParamsType\n  /** Determine if it will show the MenuItem as action */\n  showAsAction?: boolean\n}\n\n/**\n * Partial menu items\n * @public\n */\nexport type PartialMenuItem = Partial<MenuItem>\n\n/**\n * Class for building menu items.\n *\n * @public */\nexport class MenuItemBuilder implements Serializable<MenuItem> {\n  /** menu item option object. See {@link PartialMenuItem} */\n  protected spec: PartialMenuItem\n\n  constructor(\n    /**\n     * Structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: MenuItem,\n  ) {\n    this.spec = spec ? spec : {}\n  }\n\n  /**\n   * Set menu item action\n   * @param action - menu item action. See {@link MenuItemActionType}\n   * @returns menu item builder based on action provided. See {@link MenuItemBuilder}\n   */\n  action(action: MenuItemActionType): MenuItemBuilder {\n    return this.clone({action})\n  }\n\n  /**\n   * Get menu item action\n   * @returns menu item builder action. See {@link PartialMenuItem}\n   */\n  getAction(): PartialMenuItem['action'] {\n    return this.spec.action\n  }\n\n  /**\n   * Set menu item intent\n   * @param intent - menu item intent. See {@link Intent}\n   * @returns menu item builder based on intent provided. See {@link MenuItemBuilder}\n   */\n  intent(intent: Intent): MenuItemBuilder {\n    return this.clone({intent})\n  }\n\n  /**\n   * Get menu item intent\n   * @returns menu item intent. See {@link PartialMenuItem}\n   */\n  getIntent(): PartialMenuItem['intent'] {\n    return this.spec.intent\n  }\n\n  /**\n   * Set menu item title\n   * @param title - menu item title\n   * @returns menu item builder based on title provided. See {@link MenuItemBuilder}\n   */\n  title(title: string): MenuItemBuilder {\n    return this.clone({title})\n  }\n\n  /**\n   * Get menu item title. Note that the `i18n` configuration will take\n   * precedence and this title is left here for compatibility.\n   * @returns menu item title\n   */\n  getTitle(): string | undefined {\n    return this.spec.title\n  }\n\n  /**\n   * Set the i18n key and namespace used to populate the localized title.\n   * @param i18n - object with i18n key and related namespace\n   * @returns menu item builder based on i18n config provided. See {@link MenuItemBuilder}\n   */\n  i18n(i18n: I18nTextRecord<'title'>): MenuItemBuilder {\n    return this.clone({i18n})\n  }\n\n  /**\n   * Get the i18n key and namespace used to populate the localized title.\n   * @returns the i18n key and namespace used to populate the localized title.\n   */\n  getI18n(): I18nTextRecord<'title'> | undefined {\n    return this.spec.i18n\n  }\n\n  /**\n   * Set menu item group\n   * @param group - menu item group\n   * @returns menu item builder based on group provided. See {@link MenuItemBuilder}\n   */\n  group(group: string): MenuItemBuilder {\n    return this.clone({group})\n  }\n\n  /**\n   * Get menu item group\n   * @returns menu item group. See {@link PartialMenuItem}\n   */\n  getGroup(): PartialMenuItem['group'] {\n    return this.spec.group\n  }\n\n  /**\n   * Set menu item icon\n   * @param icon - menu item icon\n   * @returns menu item builder based on icon provided. See {@link MenuItemBuilder}\n   */\n  icon(icon: React.ComponentType | React.ReactNode): MenuItemBuilder {\n    return this.clone({icon})\n  }\n\n  /**\n   * Get menu item icon\n   * @returns menu item icon. See {@link PartialMenuItem}\n   */\n  getIcon(): PartialMenuItem['icon'] {\n    return this.spec.icon\n  }\n\n  /**\n   * Set menu item parameters\n   * @param params - menu item parameters. See {@link MenuItemParamsType}\n   * @returns menu item builder based on parameters provided. See {@link MenuItemBuilder}\n   */\n  params(params: MenuItemParamsType): MenuItemBuilder {\n    return this.clone({params})\n  }\n\n  /**\n   * Get meny item parameters\n   * @returns menu item parameters. See {@link PartialMenuItem}\n   */\n  getParams(): PartialMenuItem['params'] {\n    return this.spec.params\n  }\n\n  /**\n   * Set menu item to show as action\n   * @param showAsAction - determine if menu item should show as action\n   * @returns menu item builder based on if it should show as action. See {@link MenuItemBuilder}\n   */\n  showAsAction(showAsAction = true): MenuItemBuilder {\n    return this.clone({showAsAction: Boolean(showAsAction)})\n  }\n\n  /**\n   * Check if menu item should show as action\n   * @returns true if menu item should show as action, false if not. See {@link PartialMenuItem}\n   */\n  getShowAsAction(): PartialMenuItem['showAsAction'] {\n    return this.spec.showAsAction\n  }\n\n  /** Serialize menu item builder\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns menu item node based on path provided in options. See {@link MenuItem}\n   */\n  serialize(options: SerializeOptions = {path: []}): MenuItem {\n    const {title, action, intent} = this.spec\n    if (!title) {\n      const hint = typeof action === 'string' ? `action: \"${action}\"` : undefined\n      throw new SerializeError(\n        '`title` is required for menu item',\n        options.path,\n        options.index,\n        hint,\n      ).withHelpUrl(HELP_URL.TITLE_REQUIRED)\n    }\n\n    if (!action && !intent) {\n      throw new SerializeError(\n        `\\`action\\` or \\`intent\\` required for menu item with title ${this.spec.title}`,\n        options.path,\n        options.index,\n        `\"${title}\"`,\n      ).withHelpUrl(HELP_URL.ACTION_OR_INTENT_REQUIRED)\n    }\n\n    if (intent && action) {\n      throw new SerializeError(\n        'cannot set both `action` AND `intent`',\n        options.path,\n        options.index,\n        `\"${title}\"`,\n      ).withHelpUrl(HELP_URL.ACTION_AND_INTENT_MUTUALLY_EXCLUSIVE)\n    }\n\n    return {...this.spec, title}\n  }\n\n  /** Clone menu item builder\n   * @param withSpec - menu item options. See {@link PartialMenuItem}\n   * @returns menu item builder based on context and spec provided. See {@link MenuItemBuilder}\n   */\n  clone(withSpec?: PartialMenuItem): MenuItemBuilder {\n    const builder = new MenuItemBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n\n/** @internal */\nexport interface SortMenuItem extends MenuItem {\n  params: {\n    by: SortOrderingItem[]\n  }\n}\n\n/** @internal */\nexport function getOrderingMenuItem(\n  context: StructureContext,\n  {by, title, i18n}: SortOrdering,\n  extendedProjection?: string,\n): MenuItemBuilder {\n  let builder = new MenuItemBuilder(context)\n    .group('sorting')\n    .title(\n      context.i18n.t('default-menu-item.fallback-title', {\n        // note this lives in the `studio` bundle because that one is loaded by default\n        ns: 'studio',\n        replace: {title}, // replaces the `{{title}}` option\n      }),\n    ) // fallback title\n    .icon(SortIcon)\n    .action('setSortOrder')\n    .params({by, extendedProjection})\n\n  if (i18n) {\n    builder = builder.i18n(i18n)\n  }\n\n  return builder\n}\n\n/** @internal */\nexport function getOrderingMenuItemsForSchemaType(\n  context: StructureContext,\n  typeName: SchemaType | string,\n): MenuItemBuilder[] {\n  const {schema} = context\n  const type = typeof typeName === 'string' ? schema.get(typeName) : typeName\n  if (!type || !('orderings' in type)) {\n    return []\n  }\n\n  return (\n    type.orderings ? type.orderings.concat(DEFAULT_ORDERING_OPTIONS) : DEFAULT_ORDERING_OPTIONS\n  ).map((ordering: SortOrdering) =>\n    getOrderingMenuItem(context, ordering, getExtendedProjection(type, ordering.by)),\n  )\n}\n", "import {type I18nTextRecord} from 'sanity'\n\nimport {HELP_URL, SerializeError} from './SerializeError'\nimport {type Serializable, type SerializeOptions, type SerializePath} from './StructureNodes'\nimport {type StructureContext} from './types'\n\n/** @internal */\nexport function maybeSerializeMenuItemGroup(\n  item: MenuItemGroup | MenuItemGroupBuilder,\n  index: number,\n  path: SerializePath,\n): MenuItemGroup {\n  return item instanceof MenuItemGroupBuilder ? item.serialize({path, index}) : item\n}\n\n/**\n * Interface for menu item groups\n * @public\n */\nexport interface MenuItemGroup {\n  /** Menu group Id */\n  id: string\n  /** Menu group title */\n  title: string\n  i18n?: I18nTextRecord<'title'>\n}\n\n/**\n * Class for building menu item groups.\n *\n * @public\n */\nexport class MenuItemGroupBuilder implements Serializable<MenuItemGroup> {\n  /** Menu item group ID */\n  protected _id: string\n  /** Menu item group title */\n  protected _title: string\n\n  protected _i18n?: I18nTextRecord<'title'>\n\n  constructor(\n    /**\n     * Structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: MenuItemGroup,\n  ) {\n    this._id = spec ? spec.id : ''\n    this._title = spec ? spec.title : ''\n    this._i18n = spec ? spec.i18n : undefined\n  }\n\n  /**\n   * Set menu item group ID\n   * @param id - menu item group ID\n   * @returns menu item group builder based on ID provided. See {@link MenuItemGroupBuilder}\n   */\n  id(id: string): MenuItemGroupBuilder {\n    return new MenuItemGroupBuilder(this._context, {id, title: this._title, i18n: this._i18n})\n  }\n\n  /**\n   * Get menu item group ID\n   * @returns menu item group ID\n   */\n  getId(): string {\n    return this._id\n  }\n\n  /**\n   * Set menu item group title\n   * @param title - menu item group title\n   * @returns menu item group builder based on title provided. See {@link MenuItemGroupBuilder}\n   */\n  title(title: string): MenuItemGroupBuilder {\n    return new MenuItemGroupBuilder(this._context, {title, id: this._id, i18n: this._i18n})\n  }\n\n  /**\n   * Get menu item group title\n   * @returns menu item group title\n   */\n  getTitle(): string {\n    return this._title\n  }\n\n  /**\n   * Set the i18n key and namespace used to populate the localized title.\n   * @param i18n - object with i18n key and related namespace\n   * @returns menu item group builder based on i18n info provided. See {@link MenuItemGroupBuilder}\n   */\n  i18n(i18n: I18nTextRecord<'title'>): MenuItemGroupBuilder {\n    return new MenuItemGroupBuilder(this._context, {i18n, id: this._id, title: this._title})\n  }\n\n  /**\n   * Get the i18n key and namespace used to populate the localized title.\n   * @returns the i18n key and namespace used to populate the localized title.\n   */\n  getI18n(): I18nTextRecord<'title'> | undefined {\n    return this._i18n\n  }\n\n  /**\n   * Serialize menu item group builder\n   * @param options - serialization options (path). See {@link SerializeOptions}\n   * @returns menu item group based on path provided in options. See {@link MenuItemGroup}\n   */\n  serialize(options: SerializeOptions = {path: []}): MenuItemGroup {\n    const {_id, _title, _i18n} = this\n    if (!_id) {\n      throw new SerializeError(\n        '`id` is required for a menu item group',\n        options.path,\n        options.index,\n        _title,\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!_title) {\n      throw new SerializeError(\n        '`title` is required for a menu item group',\n        options.path,\n        _id,\n      ).withHelpUrl(HELP_URL.TITLE_REQUIRED)\n    }\n\n    return {\n      id: _id,\n      title: _title,\n      i18n: _i18n,\n    }\n  }\n}\n", "import {SerializeError} from '../SerializeError'\nimport {type SerializePath} from '../StructureNodes'\n\nexport const disallowedPattern = /([^A-Za-z0-9-_.])/\n\nexport function validateId(\n  id: string,\n  parentPath: SerializePath,\n  pathSegment: string | number | undefined,\n): string {\n  if (typeof id !== 'string') {\n    throw new SerializeError(\n      `Structure node id must be of type string, got ${typeof id}`,\n      parentPath,\n      pathSegment,\n    )\n  }\n\n  const [disallowedChar] = id.match(disallowedPattern) || []\n  if (disallowedChar) {\n    throw new SerializeError(\n      `Structure node id cannot contain character \"${disallowedChar}\"`,\n      parentPath,\n      pathSegment,\n    )\n  }\n\n  if (id.startsWith('__edit__')) {\n    throw new SerializeError(\n      `Structure node id cannot start with __edit__`,\n      parentPath,\n      pathSegment,\n    )\n  }\n\n  return id\n}\n", "import {camelCase} from 'lodash'\nimport getSlug from 'speakingurl'\n\nimport {disallowedPattern} from './validateId'\n\nexport function getStructureNodeId(title: string, id?: string): string {\n  if (id) {\n    return id\n  }\n\n  const camelCased = camelCase(title)\n\n  return disallowedPattern.test(camelCased) ? camelCase(getSlug(title)) : camelCased\n}\n", "import {type I18nTextRecord} from 'sanity'\n\nimport {type IntentChecker} from './Intent'\nimport {maybeSerializeMenuItem, type MenuItem, type MenuItemBuilder} from './MenuItem'\nimport {\n  maybeSerializeMenuItemGroup,\n  type MenuItemGroup,\n  type MenuItemGroupBuilder,\n} from './MenuItemGroup'\nimport {HELP_URL, SerializeError} from './SerializeError'\nimport {\n  type Child,\n  type Serializable,\n  type SerializeOptions,\n  type StructureNode,\n} from './StructureNodes'\nimport {type UserComponent} from './types'\nimport {getStructureNodeId} from './util/getStructureNodeId'\nimport {validateId} from './util/validateId'\n\n/**\n * Interface for component\n *\n * @public\n */\n// TODO: rename to `StructureComponent` since it clashes with React?\nexport interface Component extends StructureNode {\n  /** Component of type {@link UserComponent} */\n  component: UserComponent\n  /** Component child of type {@link Child} */\n  child?: Child\n  /** Component menu items, array of type {@link MenuItem} */\n  menuItems: MenuItem[]\n  /** Component menu item group, array of type {@link MenuItemGroup} */\n  menuItemGroups: MenuItemGroup[]\n  /** Component options */\n  options: {[key: string]: unknown}\n  canHandleIntent?: IntentChecker\n}\n\n/**\n * Interface for component input\n *\n * @public\n */\nexport interface ComponentInput extends StructureNode {\n  /** Component of type {@link UserComponent} */\n  component: UserComponent\n  /** Component child of type {@link Child} */\n  child?: Child\n  /** Component options */\n  options?: {[key: string]: unknown}\n  /** Component menu items. See {@link MenuItem} and {@link MenuItemBuilder}  */\n  menuItems?: (MenuItem | MenuItemBuilder)[]\n  /** Component menu item groups. See {@link MenuItemGroup} and {@link MenuItemGroupBuilder} */\n  menuItemGroups?: (MenuItemGroup | MenuItemGroupBuilder)[]\n}\n\n/**\n * Interface for buildable component\n *\n * @public\n */\nexport interface BuildableComponent extends Partial<StructureNode> {\n  /** Component of type {@link UserComponent} */\n  component?: UserComponent\n  /** Component child of type {@link Child} */\n  child?: Child\n  /** Component options */\n  options?: {[key: string]: unknown}\n  /** Component menu items. See {@link MenuItem} and {@link MenuItemBuilder}  */\n  menuItems?: (MenuItem | MenuItemBuilder)[]\n  /** Component menu item groups. See {@link MenuItemGroup} and {@link MenuItemGroupBuilder} */\n  menuItemGroups?: (MenuItemGroup | MenuItemGroupBuilder)[]\n  canHandleIntent?: IntentChecker\n}\n\n/**\n * Class for building components\n *\n * @public\n */\nexport class ComponentBuilder implements Serializable<Component> {\n  /** component builder option object */\n  protected spec: BuildableComponent\n\n  constructor(spec?: ComponentInput) {\n    this.spec = {options: {}, ...(spec ? spec : {})}\n  }\n\n  /** Set Component ID\n   * @param id - component ID\n   * @returns component builder based on ID provided\n   */\n  id(id: string): ComponentBuilder {\n    return this.clone({id})\n  }\n\n  /** Get ID\n   * @returns ID\n   */\n  getId(): BuildableComponent['id'] {\n    return this.spec.id\n  }\n\n  /** Set Component title\n   * @param title - component title\n   * @returns component builder based on title provided (and ID)\n   */\n  title(title: string): ComponentBuilder {\n    return this.clone({title, id: getStructureNodeId(title, this.spec.id)})\n  }\n\n  /** Get Component title\n   * @returns title\n   */\n  getTitle(): BuildableComponent['title'] {\n    return this.spec.title\n  }\n\n  /** Set the i18n key and namespace used to populate the localized title.\n   * @param i18n - the key and namespaced used to populate the localized title.\n   * @returns component builder based on i18n key and ns provided\n   */\n  i18n(i18n: I18nTextRecord<'title'>): ComponentBuilder {\n    return this.clone({i18n})\n  }\n\n  /** Get i18n key and namespace used to populate the localized title\n   * @returns the i18n key and namespace used to populate the localized title\n   */\n  getI18n(): I18nTextRecord<'title'> | undefined {\n    return this.spec.i18n\n  }\n\n  /** Set Component child\n   * @param child - child component\n   * @returns component builder based on child component provided\n   */\n  child(child: Child): ComponentBuilder {\n    return this.clone({child})\n  }\n\n  /** Get Component child\n   * @returns child component\n   */\n  getChild(): BuildableComponent['child'] {\n    return this.spec.child\n  }\n\n  /** Set component\n   * @param component - user built component\n   * @returns component builder based on component provided\n   */\n  component(component: UserComponent): ComponentBuilder {\n    return this.clone({component})\n  }\n\n  /** Get Component\n   * @returns component\n   */\n  getComponent(): BuildableComponent['component'] {\n    return this.spec.component\n  }\n\n  /** Set Component options\n   * @param options - component options\n   * @returns component builder based on options provided\n   */\n  options(options: {[key: string]: unknown}): ComponentBuilder {\n    return this.clone({options})\n  }\n\n  /** Get Component options\n   * @returns component options\n   */\n  getOptions(): NonNullable<BuildableComponent['options']> {\n    return this.spec.options || {}\n  }\n\n  /** Set Component menu items\n   * @param menuItems - component menu items\n   * @returns component builder based on menuItems provided\n   */\n  menuItems(menuItems: (MenuItem | MenuItemBuilder)[]): ComponentBuilder {\n    return this.clone({menuItems})\n  }\n\n  /** Get Component menu items\n   * @returns menu items\n   */\n  getMenuItems(): BuildableComponent['menuItems'] {\n    return this.spec.menuItems\n  }\n\n  /** Set Component menu item groups\n   * @param menuItemGroups - component menu item groups\n   * @returns component builder based on menuItemGroups provided\n   */\n  menuItemGroups(menuItemGroups: (MenuItemGroup | MenuItemGroupBuilder)[]): ComponentBuilder {\n    return this.clone({menuItemGroups})\n  }\n\n  /** Get Component menu item groups\n   * @returns menu item groups\n   */\n  getMenuItemGroups(): BuildableComponent['menuItemGroups'] {\n    return this.spec.menuItemGroups\n  }\n\n  canHandleIntent(canHandleIntent: IntentChecker): ComponentBuilder {\n    return this.clone({canHandleIntent})\n  }\n\n  /** Serialize component\n   * @param options - serialization options\n   * @returns component object based on path provided in options\n   *\n   */\n  serialize(options: SerializeOptions = {path: []}): Component {\n    const {id, title, child, options: componentOptions, component} = this.spec\n    if (!id) {\n      throw new SerializeError(\n        '`id` is required for `component` structure item',\n        options.path,\n        options.index,\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!component) {\n      throw new SerializeError(\n        '`component` is required for `component` structure item',\n        options.path,\n        options.index,\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    return {\n      id: validateId(id, options.path, options.index),\n      title,\n      type: 'component',\n      child,\n      component,\n      canHandleIntent: this.spec.canHandleIntent,\n      options: componentOptions || {},\n      menuItems: (this.spec.menuItems || []).map((item, i) =>\n        maybeSerializeMenuItem(item, i, options.path),\n      ),\n      menuItemGroups: (this.spec.menuItemGroups || []).map((item, i) =>\n        maybeSerializeMenuItemGroup(item, i, options.path),\n      ),\n    }\n  }\n\n  /** Clone component builder (allows for options overriding)\n   * @param withSpec - component builder options\n   * @returns cloned builder\n   */\n  clone(withSpec?: BuildableComponent): ComponentBuilder {\n    const builder = new ComponentBuilder()\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n", "import {type SanityClient} from '@sanity/client'\nimport {\n  DEFAULT_STUDIO_CLIENT_OPTIONS,\n  getDraftId,\n  getPublishedId,\n  type SourceClientOptions,\n} from 'sanity'\n\nexport async function resolveTypeForDocument(\n  getClient: (options: SourceClientOptions) => SanityClient,\n  id: string,\n): Promise<string | undefined> {\n  const query = '*[_id in [$documentId, $draftId]]._type'\n  const documentId = getPublishedId(id)\n  const draftId = getDraftId(id)\n\n  const types = await getClient(DEFAULT_STUDIO_CLIENT_OPTIONS).fetch(\n    query,\n    {documentId, draftId},\n    {tag: 'structure.resolve-type'},\n  )\n\n  return types[0]\n}\n", "import {kebabCase} from 'lodash'\n\nimport {HELP_URL, SerializeError} from '../SerializeError'\nimport {type Serializable, type SerializeOptions, type SerializePath} from '../StructureNodes'\nimport {type View} from '../types'\nimport {validateId} from '../util/validateId'\nimport {type ComponentViewBuilder} from './ComponentView'\nimport {type FormViewBuilder} from './FormView'\n\n/**\n * Interface for base view\n *\n * @public */\nexport interface BaseView {\n  /** View id */\n  id: string\n  /** View Title */\n  title: string\n  /** View Icon */\n  icon?: React.ComponentType | React.ReactNode\n}\n\n/**\n * Class for building generic views.\n *\n * @public\n */\nexport abstract class GenericViewBuilder<TView extends Partial<BaseView>, ConcreteImpl>\n  implements Serializable<BaseView>\n{\n  /** Generic view option object */\n  protected spec: TView = {} as TView\n\n  /** Set generic view ID\n   * @param id - generic view ID\n   * @returns generic view builder based on ID provided.\n   */\n  id(id: string): ConcreteImpl {\n    return this.clone({id})\n  }\n  /** Get generic view ID\n   * @returns generic view ID\n   */\n  getId(): TView['id'] {\n    return this.spec.id\n  }\n\n  /** Set generic view title\n   * @param title - generic view title\n   * @returns generic view builder based on title provided and (if provided) its ID.\n   */\n  title(title: string): ConcreteImpl {\n    return this.clone({title, id: this.spec.id || kebabCase(title)})\n  }\n\n  /** Get generic view title\n   * @returns generic view title\n   */\n  getTitle(): TView['title'] {\n    return this.spec.title\n  }\n\n  /** Set generic view icon\n   * @param icon - generic view icon\n   * @returns generic view builder based on icon provided.\n   */\n  icon(icon: React.ComponentType | React.ReactNode): ConcreteImpl {\n    return this.clone({icon})\n  }\n\n  /** Get generic view icon\n   * @returns generic view icon\n   */\n  getIcon(): TView['icon'] {\n    return this.spec.icon\n  }\n\n  /** Serialize generic view\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns generic view object based on path provided in options. See {@link BaseView}\n   */\n  serialize(options: SerializeOptions = {path: []}): BaseView {\n    const {id, title, icon} = this.spec\n    if (!id) {\n      throw new SerializeError(\n        '`id` is required for view item',\n        options.path,\n        options.index,\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!title) {\n      throw new SerializeError(\n        '`title` is required for view item',\n        options.path,\n        options.index,\n      ).withHelpUrl(HELP_URL.TITLE_REQUIRED)\n    }\n\n    return {\n      id: validateId(id, options.path, options.index),\n      title,\n      icon,\n    }\n  }\n\n  /** Clone generic view builder (allows for options overriding)\n   * @param withSpec - Partial generic view builder options. See {@link BaseView}\n   * @returns Generic view builder.\n   */\n  abstract clone(withSpec?: Partial<BaseView>): ConcreteImpl\n}\n\nfunction isSerializable(view: BaseView | Serializable<BaseView>): view is Serializable<BaseView> {\n  return typeof (view as Serializable<BaseView>).serialize === 'function'\n}\n\n/** @internal */\nexport function maybeSerializeView(\n  item: View | Serializable<View>,\n  index: number,\n  path: SerializePath,\n): View {\n  return isSerializable(item) ? item.serialize({path, index}) : item\n}\n\n/**\n * View builder. See {@link ComponentViewBuilder} and {@link FormViewBuilder}\n *\n * @public\n */\nexport type ViewBuilder = ComponentViewBuilder | FormViewBuilder\n", "import {isRecord} from 'sanity'\n\nimport {HELP_URL, SerializeError} from '../SerializeError'\nimport {type SerializeOptions} from '../StructureNodes'\nimport {type UserViewComponent} from '../types'\nimport {type BaseView, GenericViewBuilder} from './View'\n\n/**\n * Interface for component views.\n *\n * @public */\nexport interface ComponentView<TOptions = Record<string, any>> extends BaseView {\n  type: 'component'\n  /** Component view components. See {@link UserViewComponent} */\n  component: UserViewComponent\n  /** Component view options */\n  options: TOptions\n}\n\nconst isComponentSpec = (spec: unknown): spec is ComponentView =>\n  isRecord(spec) && spec.type === 'component'\n\n/**\n * Class for building a component view.\n *\n * @public */\nexport class ComponentViewBuilder extends GenericViewBuilder<\n  Partial<ComponentView>,\n  ComponentViewBuilder\n> {\n  /** Partial Component view option object. See {@link ComponentView} */\n  protected spec: Partial<ComponentView>\n\n  constructor(\n    /**\n     * Component view component or spec\n     * @param componentOrSpec - user view component or partial component view. See {@link UserViewComponent} and {@link ComponentView}\n     */\n    componentOrSpec?: UserViewComponent | Partial<ComponentView>,\n  ) {\n    const spec = isComponentSpec(componentOrSpec) ? {...componentOrSpec} : {options: {}}\n\n    super()\n    this.spec = spec\n\n    const userComponent =\n      typeof componentOrSpec === 'function' ? componentOrSpec : this.spec.component\n\n    if (userComponent) {\n      // Because we're cloning, this'll return a new instance, so grab the spec from it\n      this.spec = this.component(userComponent).spec\n    }\n  }\n\n  /** Set view Component\n   * @param component - component view component. See {@link UserViewComponent}\n   * @returns component view builder based on component view provided. See {@link ComponentViewBuilder}\n   */\n  component(component: UserViewComponent): ComponentViewBuilder {\n    return this.clone({component})\n  }\n\n  /** Get view Component\n   * @returns Partial component view. See {@link ComponentView}\n   */\n  getComponent(): Partial<ComponentView>['component'] {\n    return this.spec.component\n  }\n\n  /** Set view Component options\n   * @param options - component view options\n   * @returns component view builder based on options provided. See {@link ComponentViewBuilder}\n   */\n  options(options: {[key: string]: any}): ComponentViewBuilder {\n    return this.clone({options})\n  }\n\n  /** Get view Component options\n   * @returns component view options. See {@link ComponentView}\n   */\n  getOptions(): ComponentView['options'] {\n    return this.spec.options || {}\n  }\n\n  /** Serialize view Component\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns component view based on path provided in options. See {@link ComponentView}\n   *\n   */\n  serialize(options: SerializeOptions = {path: []}): ComponentView {\n    const base = super.serialize(options)\n\n    const component = this.spec.component\n    if (typeof component !== 'function') {\n      throw new SerializeError(\n        '`component` is required and must be a function for `component()` view item',\n        options.path,\n        options.index,\n      ).withHelpUrl(HELP_URL.COMPONENT_REQUIRED)\n    }\n\n    return {\n      ...base,\n      component,\n      options: this.spec.options || {},\n      type: 'component',\n    }\n  }\n\n  /** Clone Component view builder (allows for options overriding)\n   * @param withSpec - partial for component view option. See {@link ComponentView}\n   * @returns component view builder. See {@link ComponentViewBuilder}\n   */\n  clone(withSpec?: Partial<ComponentView>): ComponentViewBuilder {\n    const builder = new ComponentViewBuilder()\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n", "import {type SerializeOptions} from '../StructureNodes'\nimport {type BaseView, GenericViewBuilder} from './View'\n\n/**\n * Interface for form views.\n *\n * @public */\nexport interface FormView extends BaseView {\n  type: 'form'\n}\n\n/**\n * Class for building a form view.\n *\n * @public */\nexport class FormViewBuilder extends GenericViewBuilder<Partial<BaseView>, FormViewBuilder> {\n  /** Document list options. See {@link FormView} */\n  protected spec: Partial<FormView>\n\n  constructor(spec?: Partial<FormView>) {\n    super()\n    this.spec = {id: 'editor', title: 'Editor', ...(spec ? spec : {})}\n  }\n\n  /**\n   * Serialize Form view builder\n   * @param options - Serialize options. See {@link SerializeOptions}\n   * @returns form view builder based on path provided in options. See {@link FormView}\n   */\n  serialize(options: SerializeOptions = {path: []}): FormView {\n    return {\n      ...super.serialize(options),\n      type: 'form',\n    }\n  }\n\n  /**\n   * Clone Form view builder (allows for options overriding)\n   * @param withSpec - Partial form view builder options. See {@link FormView}\n   * @returns form view builder. See {@link FormViewBuilder}\n   */\n  clone(withSpec?: Partial<FormView>): FormViewBuilder {\n    const builder = new FormViewBuilder()\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n", "import {type UserViewComponent} from '../types'\nimport {type ComponentView, ComponentViewBuilder} from './ComponentView'\nimport {type FormView, FormViewBuilder} from './FormView'\n\nexport * from './ComponentView'\nexport * from './FormView'\nexport * from './View'\n\n/** @internal */\nexport const form = (spec?: Partial<FormView>): FormViewBuilder => new FormViewBuilder(spec)\n\n/** @internal */\nexport const component = (\n  componentOrSpec?: UserViewComponent | Partial<ComponentView>,\n): ComponentViewBuilder => new ComponentViewBuilder(componentOrSpec)\n", "import {type SchemaType} from '@sanity/types'\nimport {uniq} from 'lodash'\nimport {type I18nTextRecord} from 'sanity'\n\nimport {type ChildResolver} from './ChildResolver'\nimport {HELP_URL, SerializeError} from './SerializeError'\nimport {\n  type Child,\n  type DocumentNode,\n  type EditorNode,\n  type Serializable,\n  type SerializeOptions,\n} from './StructureNodes'\nimport {type StructureContext, type View} from './types'\nimport {getStructureNodeId} from './util/getStructureNodeId'\nimport {resolveTypeForDocument} from './util/resolveTypeForDocument'\nimport {validateId} from './util/validateId'\nimport {form} from './views'\nimport {maybeSerializeView, type ViewBuilder} from './views/View'\n\nconst createDocumentChildResolver =\n  ({resolveDocumentNode, getClient}: StructureContext): ChildResolver =>\n  async (itemId, {params, path}) => {\n    let type = params.type\n\n    const parentPath = path.slice(0, path.length - 1)\n    const currentSegment = path[path.length - 1]\n\n    if (!type) {\n      type = await resolveTypeForDocument(getClient, itemId)\n    }\n\n    if (!type) {\n      throw new SerializeError(\n        `Failed to resolve document, and no type provided in parameters.`,\n        parentPath,\n        currentSegment,\n      )\n    }\n\n    return resolveDocumentNode({documentId: itemId, schemaType: type})\n  }\n\n/**\n * Interface for options of Partial Documents. See {@link PartialDocumentNode}\n *\n * @public */\nexport interface DocumentOptions {\n  /** Document Id */\n  id: string\n  /** Document Type */\n  type: string\n  /** Document Template */\n  template?: string\n  /** Template parameters */\n  templateParameters?: Record<string, unknown>\n}\n\n/**\n * Interface for partial document (focused on the document pane)\n *\n * @public */\nexport interface PartialDocumentNode {\n  /** Document Id */\n  id?: string\n  /** Document title */\n  title?: string\n  /** I18n key and namespace used to populate the localized title */\n  i18n?: I18nTextRecord<'title'>\n  /** Document children of type {@link Child} */\n  child?: Child\n  /**\n   * Views for the document pane. See {@link ViewBuilder} and {@link View}\n   */\n  views?: (View | ViewBuilder)[]\n  /**\n   * Document options. See {@link DocumentOptions}\n   */\n  options?: Partial<DocumentOptions>\n}\n\n/**\n * A `DocumentBuilder` is used to build a document node.\n *\n * @public */\nexport class DocumentBuilder implements Serializable<DocumentNode> {\n  /** Component builder option object See {@link PartialDocumentNode} */\n  protected spec: PartialDocumentNode\n\n  constructor(\n    /**\n     * Structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: PartialDocumentNode,\n  ) {\n    this.spec = spec ? spec : {}\n  }\n\n  /** Set Document Builder ID\n   * @param id - document builder ID\n   * @returns document builder based on ID provided. See {@link DocumentBuilder}\n   */\n  id(id: string): DocumentBuilder {\n    return this.clone({id})\n  }\n\n  /** Get Document Builder ID\n   * @returns document ID. See {@link PartialDocumentNode}\n   */\n  getId(): PartialDocumentNode['id'] {\n    return this.spec.id\n  }\n\n  /** Set Document title\n   * @param title - document title\n   * @returns document builder based on title provided (and ID). See {@link DocumentBuilder}\n   */\n  title(title: string): DocumentBuilder {\n    return this.clone({title, id: getStructureNodeId(title, this.spec.id)})\n  }\n\n  /** Get Document title\n   * @returns document title. See {@link PartialDocumentNode}\n   */\n  getTitle(): PartialDocumentNode['title'] {\n    return this.spec.title\n  }\n\n  /** Set the i18n key and namespace used to populate the localized title.\n   * @param i18n - the key and namespaced used to populate the localized title.\n   * @returns component builder based on i18n key and ns provided\n   */\n  i18n(i18n: I18nTextRecord<'title'>): DocumentBuilder {\n    return this.clone({i18n})\n  }\n\n  /** Get i18n key and namespace used to populate the localized title\n   * @returns the i18n key and namespace used to populate the localized title\n   */\n  getI18n(): I18nTextRecord<'title'> | undefined {\n    return this.spec.i18n\n  }\n\n  /** Set Document child\n   * @param child - document child\n   * @returns document builder based on child provided. See {@link DocumentBuilder}\n   */\n  child(child: Child): DocumentBuilder {\n    return this.clone({child})\n  }\n\n  /** Get Document child\n   * @returns document child. See {@link PartialDocumentNode}\n   */\n  getChild(): PartialDocumentNode['child'] {\n    return this.spec.child\n  }\n\n  /** Set Document ID\n   * @param documentId - document ID\n   * @returns document builder with document based on ID provided. See {@link DocumentBuilder}\n   */\n  documentId(documentId: string): DocumentBuilder {\n    // Let's try to be a bit helpful and assign an ID from document ID if none is specified\n    const paneId = this.spec.id || documentId\n    return this.clone({\n      id: paneId,\n      options: {\n        ...(this.spec.options || {}),\n        id: documentId,\n      },\n    })\n  }\n\n  /** Get Document ID\n   * @returns document ID. See {@link DocumentOptions}\n   */\n  getDocumentId(): Partial<DocumentOptions>['id'] {\n    return this.spec.options?.id\n  }\n\n  /** Set Document Type\n   * @param documentType - document type\n   * @returns document builder with document based on type provided. See {@link DocumentBuilder}\n   */\n  schemaType(documentType: SchemaType | string): DocumentBuilder {\n    return this.clone({\n      options: {\n        ...(this.spec.options || {}),\n        type: typeof documentType === 'string' ? documentType : documentType.name,\n      },\n    })\n  }\n\n  /** Get Document Type\n   * @returns document type. See {@link DocumentOptions}\n   */\n  getSchemaType(): Partial<DocumentOptions>['type'] {\n    return this.spec.options?.type\n  }\n\n  /** Set Document Template\n   * @param templateId - document template ID\n   * @param parameters - document template parameters\n   * @returns document builder with document based on template provided. See {@link DocumentBuilder}\n   */\n  initialValueTemplate(templateId: string, parameters?: Record<string, unknown>): DocumentBuilder {\n    return this.clone({\n      options: {\n        ...(this.spec.options || {}),\n        template: templateId,\n        templateParameters: parameters,\n      },\n    })\n  }\n\n  /** Get Document Template\n   * @returns document template. See {@link DocumentOptions}\n   */\n  getInitialValueTemplate(): Partial<DocumentOptions>['template'] {\n    return this.spec.options?.template\n  }\n\n  /** Get Document's initial value Template parameters\n   * @returns document template parameters. See {@link DocumentOptions}\n   */\n  getInitialValueTemplateParameters(): Partial<DocumentOptions>['templateParameters'] {\n    return this.spec.options?.templateParameters\n  }\n\n  /** Set Document views\n   * @param views - document views. See {@link ViewBuilder} and {@link View}\n   * @returns document builder with document based on views provided. See {@link DocumentBuilder}\n   */\n  views(views: (View | ViewBuilder)[]): DocumentBuilder {\n    return this.clone({views})\n  }\n\n  /** Get Document views\n   * @returns document views. See {@link ViewBuilder} and {@link View}\n   */\n  getViews(): (View | ViewBuilder)[] {\n    return this.spec.views || []\n  }\n\n  /** Serialize Document builder\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns document node based on path, index and hint provided in options. See {@link DocumentNode}\n   */\n  serialize({path = [], index, hint}: SerializeOptions = {path: []}): DocumentNode {\n    const urlId = path[index || path.length - 1]\n\n    // Try to grab document ID / editor ID from URL if not defined\n    const id = this.spec.id || (urlId && `${urlId}`) || ''\n    const options: Partial<DocumentOptions> = {\n      id,\n      type: undefined,\n      template: undefined,\n      templateParameters: undefined,\n      ...this.spec.options,\n    }\n\n    if (typeof id !== 'string' || !id) {\n      throw new SerializeError(\n        '`id` is required for document nodes',\n        path,\n        index,\n        hint,\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!options || !options.id) {\n      throw new SerializeError(\n        'document id (`id`) is required for document nodes',\n        path,\n        id,\n        hint,\n      ).withHelpUrl(HELP_URL.DOCUMENT_ID_REQUIRED)\n    }\n\n    if (!options || !options.type) {\n      throw new SerializeError(\n        'document type (`schemaType`) is required for document nodes',\n        path,\n        id,\n        hint,\n      )\n    }\n\n    const views = (this.spec.views && this.spec.views.length > 0 ? this.spec.views : [form()]).map(\n      (item, i) => maybeSerializeView(item, i, path),\n    )\n\n    const viewIds = views.map((view) => view.id)\n    const dupes = uniq(viewIds.filter((viewId, i) => viewIds.includes(viewId, i + 1)))\n    if (dupes.length > 0) {\n      throw new SerializeError(\n        `document node has views with duplicate IDs: ${dupes.join(',  ')}`,\n        path,\n        id,\n        hint,\n      )\n    }\n\n    return {\n      ...this.spec,\n      child: this.spec.child || createDocumentChildResolver(this._context),\n      id: validateId(id, path, index),\n      type: 'document',\n      options: getDocumentOptions(options),\n      views,\n    }\n  }\n\n  /** Clone Document builder\n   * @param withSpec - partial document node specification used to extend the cloned builder. See {@link PartialDocumentNode}\n   * @returns document builder based on context and spec provided. See {@link DocumentBuilder}\n   */\n  clone(withSpec: PartialDocumentNode = {}): DocumentBuilder {\n    const builder = new DocumentBuilder(this._context)\n    const options = {...(this.spec.options || {}), ...(withSpec.options || {})}\n    builder.spec = {...this.spec, ...withSpec, options}\n    return builder\n  }\n}\n\nfunction getDocumentOptions(spec: Partial<DocumentOptions>): DocumentOptions {\n  const opts: DocumentOptions = {\n    id: spec.id || '',\n    type: spec.type || '*',\n  }\n\n  if (spec.template) {\n    opts.template = spec.template\n  }\n\n  if (spec.templateParameters) {\n    opts.templateParameters = spec.templateParameters\n  }\n\n  return opts\n}\n\n/** @internal */\nexport function documentFromEditor(context: StructureContext, spec?: EditorNode): DocumentBuilder {\n  let doc = spec?.type\n    ? // Use user-defined document fragment as base if possible\n      context.resolveDocumentNode({schemaType: spec.type})\n    : // Fall back to plain old document builder\n      new DocumentBuilder(context)\n\n  if (!spec) return doc\n\n  const {id, type, template, templateParameters} = spec.options\n  doc = doc.id(spec.id).documentId(id)\n\n  if (type) {\n    doc = doc.schemaType(type)\n  }\n  if (template) {\n    doc = doc.initialValueTemplate(template, templateParameters)\n  }\n  if (spec.child) {\n    doc = doc.child(spec.child)\n  }\n\n  return doc\n}\n\n/** @internal */\nexport function documentFromEditorWithInitialValue(\n  {resolveDocumentNode, templates}: StructureContext,\n  templateId: string,\n  parameters?: Record<string, unknown>,\n): DocumentBuilder {\n  const template = templates.find((t) => t.id === templateId)\n\n  if (!template) {\n    throw new Error(`Template with ID \"${templateId}\" not defined`)\n  }\n\n  return resolveDocumentNode({schemaType: template.schemaType}).initialValueTemplate(\n    templateId,\n    parameters,\n  )\n}\n", "import {AddIcon} from '@sanity/icons'\nimport {type InitialValueTemplateItem} from 'sanity'\n\nimport {type BaseIntentParams, type IntentParams} from './Intent'\nimport {type MenuItem, MenuItemBuilder} from './MenuItem'\nimport {HELP_URL, SerializeError} from './SerializeError'\nimport {type Serializable, type SerializeOptions, type SerializePath} from './StructureNodes'\nimport {type StructureContext} from './types'\n\n/**\n * A `InitialValueTemplateItemBuilder` is used to build a document node with an initial value set.\n *\n * @public\n */\nexport class InitialValueTemplateItemBuilder implements Serializable<InitialValueTemplateItem> {\n  /** Initial Value template item option object. See {@link InitialValueTemplateItem} */\n  protected spec: Partial<InitialValueTemplateItem>\n\n  constructor(\n    /**\n     * Structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: Partial<InitialValueTemplateItem>,\n  ) {\n    this.spec = spec ? spec : {}\n  }\n\n  /** Set initial value template item builder ID\n   * @param id - initial value template item ID\n   * @returns initial value template item based on ID provided. See {@link InitialValueTemplateItemBuilder}\n   */\n  id(id: string): InitialValueTemplateItemBuilder {\n    return this.clone({id})\n  }\n\n  /** Get initial value template item builder ID\n   * @returns initial value template item ID. See {@link InitialValueTemplateItem}\n   */\n  getId(): Partial<InitialValueTemplateItem>['id'] {\n    return this.spec.id\n  }\n\n  /** Set initial value template item title\n   * @param title - initial value template item title\n   * @returns initial value template item based on title provided. See {@link InitialValueTemplateItemBuilder}\n   */\n  title(title: string): InitialValueTemplateItemBuilder {\n    return this.clone({title})\n  }\n\n  /** Get initial value template item title\n   * @returns initial value template item title. See {@link InitialValueTemplateItem}\n   */\n  getTitle(): Partial<InitialValueTemplateItem>['title'] {\n    return this.spec.title\n  }\n\n  /** Set initial value template item description\n   * @param description - initial value template item description\n   * @returns initial value template item builder based on description provided. See {@link InitialValueTemplateItemBuilder}\n   */\n  description(description: string): InitialValueTemplateItemBuilder {\n    return this.clone({description})\n  }\n\n  /** Get initial value template item description\n   * @returns initial value template item description. See {@link InitialValueTemplateItem}\n   */\n  getDescription(): Partial<InitialValueTemplateItem>['description'] {\n    return this.spec.description\n  }\n\n  /** Set initial value template ID\n   * @param templateId - initial value template item template ID\n   * @returns initial value template item based builder on template ID provided. See {@link InitialValueTemplateItemBuilder}\n   */\n  templateId(templateId: string): InitialValueTemplateItemBuilder {\n    // Let's try to be a bit helpful and assign an ID from template ID if none is specified\n    const paneId = this.spec.id || templateId\n    return this.clone({\n      id: paneId,\n      templateId,\n    })\n  }\n\n  /** Get initial value template item template ID\n   * @returns initial value template item ID. See {@link InitialValueTemplateItem}\n   */\n  getTemplateId(): Partial<InitialValueTemplateItem>['templateId'] {\n    return this.spec.templateId\n  }\n\n  /** Get initial value template item template parameters\n   * @param parameters - initial value template item parameters\n   * @returns initial value template item builder based on parameters provided. See {@link InitialValueTemplateItemBuilder}\n   */\n  parameters(parameters: {[key: string]: any}): InitialValueTemplateItemBuilder {\n    return this.clone({parameters})\n  }\n\n  /** Get initial value template item template parameters\n   * @returns initial value template item parameters. See {@link InitialValueTemplateItem}\n   */\n  getParameters(): Partial<InitialValueTemplateItem>['parameters'] {\n    return this.spec.parameters\n  }\n\n  /** Serialize initial value template item\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns initial value template item object based on the path, index and hint provided in options. See {@link InitialValueTemplateItem}\n   */\n  serialize({path = [], index, hint}: SerializeOptions = {path: []}): InitialValueTemplateItem {\n    const {spec, _context} = this\n    const {templates} = _context\n\n    if (typeof spec.id !== 'string' || !spec.id) {\n      throw new SerializeError(\n        '`id` is required for initial value template item nodes',\n        path,\n        index,\n        hint,\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!spec.templateId) {\n      throw new SerializeError(\n        'template id (`templateId`) is required for initial value template item nodes',\n        path,\n        spec.id,\n        hint,\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    const template = templates.find((t) => t.id === spec.templateId)\n\n    if (!template) {\n      throw new SerializeError(\n        'template id (`templateId`) is required for initial value template item nodes',\n        path,\n        spec.id,\n        hint,\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    return {\n      id: spec.id,\n      templateId: spec.id,\n      schemaType: template.schemaType,\n      type: 'initialValueTemplateItem',\n      description: spec.description || template.description,\n      title: spec.title || template.title,\n      subtitle: spec.subtitle,\n      icon: spec.icon || template.icon,\n      initialDocumentId: spec.initialDocumentId,\n      parameters: spec.parameters,\n    }\n  }\n\n  /** Clone generic view builder (allows for options overriding)\n   * @param withSpec - initial value template item builder options. See {@link InitialValueTemplateItemBuilder}\n   * @returns initial value template item builder based on the context and options provided. See {@link InitialValueTemplateItemBuilder}\n   */\n  clone(withSpec: Partial<InitialValueTemplateItem> = {}): InitialValueTemplateItemBuilder {\n    const builder = new InitialValueTemplateItemBuilder(this._context)\n    builder.spec = {...this.spec, ...withSpec}\n    return builder\n  }\n}\n\n/** @internal */\nexport function defaultInitialValueTemplateItems(\n  context: StructureContext,\n): InitialValueTemplateItemBuilder[] {\n  const {schema, getStructureBuilder, templates} = context\n\n  // Sort templates by their schema type, in order or definition\n  const typeNames = schema.getTypeNames()\n  const ordered = templates\n    // Don't list templates that require parameters\n    // TODO: this should use the new-document template items instead maybe?\n    .filter((tpl) => !tpl.parameters?.length)\n    .sort((a, b) => typeNames.indexOf(a.schemaType) - typeNames.indexOf(b.schemaType))\n\n  // Create actual template items out of the templates\n  return ordered.map((tpl) => getStructureBuilder().initialValueTemplateItem(tpl.id))\n}\n\n/** @internal */\nexport function maybeSerializeInitialValueTemplateItem(\n  item: InitialValueTemplateItem | InitialValueTemplateItemBuilder,\n  index: number,\n  path: SerializePath,\n): InitialValueTemplateItem {\n  return item instanceof InitialValueTemplateItemBuilder ? item.serialize({path, index}) : item\n}\n\n/** @internal */\nexport function menuItemsFromInitialValueTemplateItems(\n  context: StructureContext,\n  templateItems: InitialValueTemplateItem[],\n): MenuItem[] {\n  const {schema, templates} = context\n  return templateItems.map((item) => {\n    const template = templates.find((t) => t.id === item.templateId)\n    const title = item.title || template?.title || 'Create'\n\n    const params: BaseIntentParams = {}\n    if (template && template.schemaType) {\n      params.type = template.schemaType\n    }\n\n    if (item.templateId) {\n      params.template = item.templateId\n    }\n\n    const intentParams: IntentParams = item.parameters ? [params, item.parameters] : params\n    const schemaType = template && schema.get(template.schemaType)\n\n    const i18n = item.i18n || template?.i18n\n\n    let builder = new MenuItemBuilder(context)\n      .title(title)\n      .icon((template && template.icon) || schemaType?.icon || AddIcon)\n      .intent({type: 'create', params: intentParams})\n\n    if (i18n) {\n      builder = builder.i18n(i18n)\n    }\n\n    return builder.serialize()\n  })\n}\n", "import {getTypeNamesFromFilter, type PartialDocumentList} from './DocumentList'\nimport {type StructureNode} from './StructureNodes'\n\n/**\n * Intent parameters (json)\n *\n * @public\n */\nexport type IntentJsonParams = {[key: string]: any}\n\n/**\n * Base intent parameters\n *\n * @public\n * @todo dedupe with core\n */\nexport interface BaseIntentParams {\n  /**\n   * Document schema type name to create/edit.\n   * Required for `create` intents, optional for `edit` (but encouraged, safer and faster)\n   */\n  type?: string\n\n  /**\n   * ID of the document to create/edit.\n   * Required for `edit` intents, optional for `create`.\n   */\n  id?: string\n\n  /**\n   * Name (ID) of initial value template to use for `create` intent. Optional.\n   */\n  template?: string\n\n  /**\n   * Experimental field path\n   *\n   * @beta\n   * @experimental\n   * @hidden\n   */\n  path?: string\n\n  /**\n   * Optional \"mode\" to use for edit intent.\n   * Known modes are `structure` and `presentation`.\n   */\n  mode?: string\n\n  /**\n   * Arbitrary/custom parameters are generally discouraged - try to keep them to a minimum,\n   * or use `payload` (arbitrary JSON-serializable object) instead.\n   */\n  [key: string]: string | undefined\n}\n\n/** @internal */\nexport const DEFAULT_INTENT_HANDLER = Symbol('Document type list canHandleIntent')\n\n/**\n * Intent parameters\n * See {@link router.BaseIntentParams} and {@link router.IntentJsonParams}\n *\n * @public\n */\nexport type IntentParams = BaseIntentParams | [BaseIntentParams, IntentJsonParams]\n\n/**\n * Interface for intents\n * @public */\n// TODO: intents should be unified somewhere\nexport interface Intent {\n  /** Intent type */\n  type: string\n  /** Intent parameters. See {@link IntentParams}\n   */\n  params?: IntentParams\n}\n\n/**\n * Interface for intent checker\n *\n * @public\n */\nexport interface IntentChecker {\n  (\n    /** Intent name */\n    intentName: string,\n    /** Intent checker parameter */\n    params: {[key: string]: any},\n    /** Structure context. See {@link StructureNode} */\n    context: {pane: StructureNode; index: number},\n  ): boolean\n  /** intent checker identify */\n  identity?: symbol\n}\n\n/** @internal */\nexport const defaultIntentChecker: IntentChecker = (intentName, params, {pane}): boolean => {\n  const isEdit = intentName === 'edit'\n  const isCreate = intentName === 'create'\n  const typedSpec = pane as PartialDocumentList\n  const paneFilter = typedSpec.options?.filter || ''\n  const paneParams = typedSpec.options?.params || {}\n  const typeNames = typedSpec.schemaTypeName\n    ? [typedSpec.schemaTypeName]\n    : getTypeNamesFromFilter(paneFilter, paneParams)\n\n  const initialValueTemplates = typedSpec.initialValueTemplates || []\n\n  if (isCreate && params.template) {\n    return initialValueTemplates.some((tpl) => tpl.templateId === params.template)\n  }\n\n  return (\n    (isEdit && params.id && typeNames.includes(params.type)) ||\n    (isCreate && typeNames.includes(params.type))\n  )\n}\n\ndefaultIntentChecker.identity = DEFAULT_INTENT_HANDLER\n", "export const layoutOptions = ['default', 'card', 'media', 'detail', 'block']\n", "import {type I18nTextRecord, type InitialValueTemplateItem, type PreviewLayoutKey} from 'sanity'\n\nimport {\n  type InitialValueTemplateItemBuilder,\n  maybeSerializeInitialValueTemplateItem,\n} from './InitialValueTemplateItem'\nimport {defaultIntentChecker, type IntentChecker} from './Intent'\nimport {layoutOptions} from './Layout'\nimport {maybeSerializeMenuItem, type MenuItem, type MenuItemBuilder} from './MenuItem'\nimport {\n  maybeSerializeMenuItemGroup,\n  type MenuItemGroup,\n  type MenuItemGroupBuilder,\n} from './MenuItemGroup'\nimport {SerializeError} from './SerializeError'\nimport {\n  type Child,\n  type Serializable,\n  type SerializeOptions,\n  type StructureNode,\n} from './StructureNodes'\nimport {getStructureNodeId} from './util/getStructureNodeId'\nimport {validateId} from './util/validateId'\n\nfunction noChildResolver() {\n  return undefined\n}\n\n/** @internal */\nexport const shallowIntentChecker: IntentChecker = (intentName, params, {pane, index}): boolean => {\n  return index <= 1 && defaultIntentChecker(intentName, params, {pane, index})\n}\n\n/**\n * Interface for list display options\n *\n * @public */\nexport interface ListDisplayOptions {\n  /** Check if list display should show icons */\n  showIcons?: boolean\n}\n\n/**\n * Interface for base generic list\n *\n * @public\n */\nexport interface BaseGenericList extends StructureNode {\n  /** List layout key. */\n  defaultLayout?: PreviewLayoutKey\n  /** Can handle intent. See {@link IntentChecker} */\n  canHandleIntent?: IntentChecker\n  /** List display options. See {@link ListDisplayOptions} */\n  displayOptions?: ListDisplayOptions\n  /** List child. See {@link Child} */\n  child: Child\n  /** List initial values array. See {@link InitialValueTemplateItem} and {@link InitialValueTemplateItemBuilder} */\n  initialValueTemplates?: (InitialValueTemplateItem | InitialValueTemplateItemBuilder)[]\n}\n\n/**\n * Interface for generic list\n *\n * @public\n */\n// \"POJO\"/verbatim-version - end result\nexport interface GenericList extends BaseGenericList {\n  /** List type */\n  type: string\n  /** List menu items array. See {@link MenuItem} */\n  menuItems: MenuItem[]\n  /** List menu item groups array. See {@link MenuItemGroup} */\n  menuItemGroups: MenuItemGroup[]\n}\n\n/**\n * Interface for buildable generic list\n *\n * @public\n */\n// Used internally in builder classes to make everything optional\nexport interface BuildableGenericList extends Partial<BaseGenericList> {\n  /** List menu items array. See {@link MenuItem} and {@link MenuItemBuilder} */\n  menuItems?: (MenuItem | MenuItemBuilder)[]\n  /** List menu items groups array. See {@link MenuItemGroup} and {@link MenuItemGroupBuilder} */\n  menuItemGroups?: (MenuItemGroup | MenuItemGroupBuilder)[]\n}\n\n/**\n * Interface for generic list input\n * Allows builders and only requires things not inferrable\n *\n * @public */\n// Input version, allows builders and only requires things not inferrable\nexport interface GenericListInput extends StructureNode {\n  /** Input id */\n  id: string\n  /** Input title */\n  title: string\n  /** Input menu items groups. See {@link MenuItem} and {@link MenuItemBuilder} */\n  menuItems?: (MenuItem | MenuItemBuilder)[]\n  /** Input menu items groups. See {@link MenuItemGroup} and {@link MenuItemGroupBuilder} */\n  menuItemGroups?: (MenuItemGroup | MenuItemGroupBuilder)[]\n  /** Input initial value array. See {@link InitialValueTemplateItem} and {@link InitialValueTemplateItemBuilder} */\n  initialValueTemplates?: (InitialValueTemplateItem | InitialValueTemplateItemBuilder)[]\n  /** Input default layout. */\n  defaultLayout?: PreviewLayoutKey\n  /** If input can handle intent. See {@link IntentChecker} */\n  canHandleIntent?: IntentChecker\n  /** Input child of type {@link Child} */\n  child?: Child\n}\n\n/**\n * Class for building generic lists\n *\n * @public\n */\nexport abstract class GenericListBuilder<TList extends BuildableGenericList, ConcreteImpl>\n  implements Serializable<GenericList>\n{\n  /** Check if initial value templates are set */\n  protected initialValueTemplatesSpecified = false\n  /** Generic list option object */\n  protected spec: TList = {} as TList\n\n  /** Set generic list ID\n   * @param id - generic list ID\n   * @returns generic list builder based on ID provided.\n   */\n  id(id: string): ConcreteImpl {\n    return this.clone({id})\n  }\n\n  /** Get generic list ID\n   * @returns generic list ID\n   */\n  getId(): TList['id'] {\n    return this.spec.id\n  }\n\n  /** Set generic list title\n   * @param title - generic list title\n   * @returns generic list builder based on title and ID provided.\n   */\n  title(title: string): ConcreteImpl {\n    return this.clone({title, id: getStructureNodeId(title, this.spec.id)})\n  }\n\n  /** Get generic list title\n   * @returns generic list title\n   */\n  getTitle(): TList['title'] {\n    return this.spec.title\n  }\n\n  /** Set the i18n key and namespace used to populate the localized title.\n   * @param i18n - the key and namespaced used to populate the localized title.\n   * @returns component builder based on i18n key and ns provided\n   */\n  i18n(i18n: I18nTextRecord<'title'>): ConcreteImpl {\n    return this.clone({i18n})\n  }\n\n  /** Get i18n key and namespace used to populate the localized title\n   * @returns the i18n key and namespace used to populate the localized title\n   */\n  getI18n(): TList['i18n'] {\n    return this.spec.i18n\n  }\n\n  /** Set generic list layout\n   * @param defaultLayout - generic list layout key.\n   * @returns generic list builder based on layout provided.\n   */\n  defaultLayout(defaultLayout: PreviewLayoutKey): ConcreteImpl {\n    return this.clone({defaultLayout})\n  }\n\n  /** Get generic list layout\n   * @returns generic list layout\n   */\n  getDefaultLayout(): TList['defaultLayout'] {\n    return this.spec.defaultLayout\n  }\n\n  /** Set generic list menu items\n   * @param menuItems - generic list menu items. See {@link MenuItem} and {@link MenuItemBuilder}\n   * @returns generic list builder based on menu items provided.\n   */\n  menuItems(menuItems: (MenuItem | MenuItemBuilder)[] | undefined): ConcreteImpl {\n    return this.clone({menuItems})\n  }\n\n  /** Get generic list menu items\n   * @returns generic list menu items\n   */\n  getMenuItems(): TList['menuItems'] {\n    return this.spec.menuItems\n  }\n\n  /** Set generic list menu item groups\n   * @param menuItemGroups - generic list menu item groups. See {@link MenuItemGroup} and {@link MenuItemGroupBuilder}\n   * @returns generic list builder based on menu item groups provided.\n   */\n  menuItemGroups(menuItemGroups: (MenuItemGroup | MenuItemGroupBuilder)[]): ConcreteImpl {\n    return this.clone({menuItemGroups})\n  }\n\n  /** Get generic list menu item groups\n   * @returns generic list menu item groups\n   */\n  getMenuItemGroups(): TList['menuItemGroups'] {\n    return this.spec.menuItemGroups\n  }\n\n  /** Set generic list child\n   * @param child - generic list child. See {@link Child}\n   * @returns generic list builder based on child provided (clone).\n   */\n  child(child: Child): ConcreteImpl {\n    return this.clone({child})\n  }\n\n  /** Get generic list child\n   * @returns generic list child\n   */\n  getChild(): TList['child'] {\n    return this.spec.child\n  }\n\n  /** Set generic list can handle intent\n   * @param canHandleIntent - generic list intent checker. See {@link IntentChecker}\n   * @returns generic list builder based on can handle intent provided.\n   */\n  canHandleIntent(canHandleIntent?: IntentChecker): ConcreteImpl {\n    return this.clone({canHandleIntent})\n  }\n\n  /** Get generic list can handle intent\n   * @returns generic list can handle intent\n   */\n  getCanHandleIntent(): TList['canHandleIntent'] {\n    return this.spec.canHandleIntent\n  }\n\n  /** Set generic list display options\n   * @param enabled - allow / disallow for showing icons\n   * @returns generic list builder based on display options (showIcons) provided.\n   */\n  showIcons(enabled = true): ConcreteImpl {\n    return this.clone({\n      displayOptions: {...(this.spec.displayOptions || {}), showIcons: enabled},\n    })\n  }\n\n  /** Get generic list display options\n   * @returns generic list display options (specifically showIcons)\n   */\n  getShowIcons(): boolean | undefined {\n    return this.spec.displayOptions ? this.spec.displayOptions.showIcons : undefined\n  }\n\n  /** Set generic list initial value templates\n   * @param templates - generic list initial value templates. See {@link InitialValueTemplateItemBuilder}\n   * @returns generic list builder based on templates provided.\n   */\n  initialValueTemplates(\n    templates:\n      | InitialValueTemplateItem\n      | InitialValueTemplateItemBuilder\n      | Array<InitialValueTemplateItem | InitialValueTemplateItemBuilder>,\n  ): ConcreteImpl {\n    this.initialValueTemplatesSpecified = true\n    return this.clone({initialValueTemplates: Array.isArray(templates) ? templates : [templates]})\n  }\n\n  /** Get generic list initial value templates\n   * @returns generic list initial value templates\n   */\n  getInitialValueTemplates(): TList['initialValueTemplates'] {\n    return this.spec.initialValueTemplates\n  }\n\n  /** Serialize generic list\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns generic list object based on path provided in options. See {@link GenericList}\n   */\n  serialize(options: SerializeOptions = {path: []}): GenericList {\n    const id = this.spec.id || ''\n    const path = options.path\n\n    const defaultLayout = this.spec.defaultLayout\n    if (defaultLayout && !layoutOptions.includes(defaultLayout)) {\n      throw new SerializeError(\n        `\\`layout\\` must be one of ${layoutOptions.map((item) => `\"${item}\"`).join(', ')}`,\n        path,\n        id || options.index,\n        this.spec.title,\n      )\n    }\n\n    const initialValueTemplates = (this.spec.initialValueTemplates || []).map((item, i) =>\n      maybeSerializeInitialValueTemplateItem(item, i, path),\n    )\n\n    return {\n      id: validateId(id, options.path, id || options.index),\n      title: this.spec.title,\n      i18n: this.spec.i18n,\n      type: 'genericList',\n      defaultLayout,\n      child: this.spec.child || noChildResolver,\n      canHandleIntent: this.spec.canHandleIntent || shallowIntentChecker,\n      displayOptions: this.spec.displayOptions,\n      initialValueTemplates,\n      menuItems: (this.spec.menuItems || []).map((item, i) =>\n        maybeSerializeMenuItem(item, i, path),\n      ),\n      menuItemGroups: (this.spec.menuItemGroups || []).map((item, i) =>\n        maybeSerializeMenuItemGroup(item, i, path),\n      ),\n    }\n  }\n\n  /** Clone generic list builder (allows for options overriding)\n   * @param _withSpec - generic list options.\n   * @returns generic list builder.\n   */\n  abstract clone(_withSpec?: object): ConcreteImpl\n}\n", "import {generateHelpUrl} from '@sanity/generate-help-url'\nimport {AddIcon} from '@sanity/icons'\nimport {type SchemaType, type SortOrderingItem} from '@sanity/types'\nimport {DEFAULT_STUDIO_CLIENT_OPTIONS, type InitialValueTemplateItem} from 'sanity'\n\nimport {type ChildResolver, type ChildResolverOptions, type ItemChild} from './ChildResolver'\nimport {DocumentBuilder} from './Document'\nimport {\n  type BuildableGenericList,\n  type GenericList,\n  GenericListBuilder,\n  type GenericListInput,\n} from './GenericList'\nimport {HELP_URL, SerializeError} from './SerializeError'\nimport {type Child, type SerializeOptions} from './StructureNodes'\nimport {type StructureContext} from './types'\nimport {resolveTypeForDocument} from './util/resolveTypeForDocument'\n\nconst validateFilter = (spec: PartialDocumentList, options: SerializeOptions) => {\n  const filter = spec.options?.filter.trim() || ''\n\n  if (['*', '{'].includes(filter[0])) {\n    throw new SerializeError(\n      `\\`filter\\` cannot start with \\`${filter[0]}\\` - looks like you are providing a query, not a filter`,\n      options.path,\n      spec.id,\n      spec.title,\n    ).withHelpUrl(HELP_URL.QUERY_PROVIDED_FOR_FILTER)\n  }\n\n  return filter\n}\n\nconst createDocumentChildResolverForItem =\n  (context: StructureContext): ChildResolver =>\n  (itemId: string, options: ChildResolverOptions): ItemChild | Promise<ItemChild> | undefined => {\n    const parentItem = options.parent as DocumentList\n    const template = options.params?.template\n      ? context.templates.find((tpl) => tpl.id === options.params.template)\n      : undefined\n    const type = template\n      ? template.schemaType\n      : parentItem.schemaTypeName || resolveTypeForDocument(context.getClient, itemId)\n\n    return Promise.resolve(type).then((schemaType) =>\n      schemaType\n        ? context.resolveDocumentNode({schemaType, documentId: itemId})\n        : new DocumentBuilder(context).id('editor').documentId(itemId).schemaType(''),\n    )\n  }\n\n/**\n * Partial document list\n *\n * @public\n */\nexport interface PartialDocumentList extends BuildableGenericList {\n  /** Document list options. See {@link DocumentListOptions} */\n  options?: DocumentListOptions\n  /** Schema type name */\n  schemaTypeName?: string\n}\n\n/**\n * Interface for document list input\n *\n * @public\n */\nexport interface DocumentListInput extends GenericListInput {\n  /** Document list options. See {@link DocumentListOptions} */\n  options: DocumentListOptions\n}\n\n/**\n * Interface for document list\n *\n * @public\n */\nexport interface DocumentList extends GenericList {\n  type: 'documentList'\n  /** Document list options. See {@link DocumentListOptions} */\n  options: DocumentListOptions\n  /** Document list child. See {@link Child} */\n  child: Child\n  /** Document schema type name */\n  schemaTypeName?: string\n}\n\n/**\n * Interface for document List options\n *\n * @public\n */\nexport interface DocumentListOptions {\n  /** Document list filter */\n  filter: string\n  /** Document list parameters */\n  params?: Record<string, unknown>\n  /** Document list API version */\n  apiVersion?: string\n  /** Document list API default ordering array. */\n  defaultOrdering?: SortOrderingItem[]\n}\n\n/**\n * Class for building document list\n *\n * @public\n */\nexport class DocumentListBuilder extends GenericListBuilder<\n  PartialDocumentList,\n  DocumentListBuilder\n> {\n  /** Document list options. See {@link PartialDocumentList} */\n  protected spec: PartialDocumentList\n\n  constructor(\n    /**\n     * Structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: DocumentListInput,\n  ) {\n    super()\n    this.spec = spec || {}\n    this.initialValueTemplatesSpecified = Boolean(spec?.initialValueTemplates)\n  }\n\n  /** Set API version\n   * @param apiVersion - API version\n   * @returns document list builder based on the options and API version provided. See {@link DocumentListBuilder}\n   */\n  apiVersion(apiVersion: string): DocumentListBuilder {\n    return this.clone({options: {...(this.spec.options || {filter: ''}), apiVersion}})\n  }\n\n  /** Get API version\n   * @returns API version\n   */\n  getApiVersion(): string | undefined {\n    return this.spec.options?.apiVersion\n  }\n\n  /** Set Document list filter\n   * @param filter - filter\n   * @returns document list builder based on the options and filter provided. See {@link DocumentListBuilder}\n   */\n  filter(filter: string): DocumentListBuilder {\n    return this.clone({options: {...(this.spec.options || {}), filter}})\n  }\n\n  /** Get Document list filter\n   * @returns filter\n   */\n  getFilter(): string | undefined {\n    return this.spec.options?.filter\n  }\n\n  /** Set Document list schema type name\n   * @param type - schema type name.\n   * @returns document list builder based on the schema type name provided. See {@link DocumentListBuilder}\n   */\n  schemaType(type: SchemaType | string): DocumentListBuilder {\n    const schemaTypeName = typeof type === 'string' ? type : type.name\n    return this.clone({schemaTypeName})\n  }\n\n  /** Get Document list schema type name\n   * @returns schema type name\n   */\n  getSchemaType(): string | undefined {\n    return this.spec.schemaTypeName\n  }\n\n  /** Set Document list options' parameters\n   * @param params - parameters\n   * @returns document list builder based on the options provided. See {@link DocumentListBuilder}\n   */\n  params(params: Record<string, unknown>): DocumentListBuilder {\n    return this.clone({\n      options: {...(this.spec.options || {filter: ''}), params},\n    })\n  }\n\n  /** Get Document list options' parameters\n   * @returns options\n   */\n  getParams(): Record<string, unknown> | undefined {\n    return this.spec.options?.params\n  }\n\n  /** Set Document list default ordering\n   * @param ordering - default sort ordering array. See {@link SortOrderingItem}\n   * @returns document list builder based on ordering provided. See {@link DocumentListBuilder}\n   */\n  defaultOrdering(ordering: SortOrderingItem[]): DocumentListBuilder {\n    if (!Array.isArray(ordering)) {\n      throw new Error('`defaultOrdering` must be an array of order clauses')\n    }\n\n    return this.clone({\n      options: {...(this.spec.options || {filter: ''}), defaultOrdering: ordering},\n    })\n  }\n\n  /** Get Document list default ordering\n   * @returns default ordering. See {@link SortOrderingItem}\n   */\n  getDefaultOrdering(): SortOrderingItem[] | undefined {\n    return this.spec.options?.defaultOrdering\n  }\n\n  /** Serialize Document list\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns document list object based on path provided in options. See {@link DocumentList}\n   */\n  serialize(options: SerializeOptions = {path: []}): DocumentList {\n    if (typeof this.spec.id !== 'string' || !this.spec.id) {\n      throw new SerializeError(\n        '`id` is required for document lists',\n        options.path,\n        options.index,\n        this.spec.title,\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!this.spec.options || !this.spec.options.filter) {\n      throw new SerializeError(\n        '`filter` is required for document lists',\n        options.path,\n        this.spec.id,\n        this.spec.title,\n      ).withHelpUrl(HELP_URL.FILTER_REQUIRED)\n    }\n\n    const hasSimpleFilter = this.spec.options?.filter === '_type == $type'\n    if (!hasSimpleFilter && this.spec.options.filter && !this.spec.options.apiVersion) {\n      console.warn(\n        `No apiVersion specified for document type list with custom filter: \\`${this.spec.options.filter}\\`. This will be required in the future. See %s for more info.`,\n        generateHelpUrl(HELP_URL.API_VERSION_REQUIRED_FOR_CUSTOM_FILTER),\n      )\n    }\n    return {\n      ...super.serialize(options),\n      type: 'documentList',\n      schemaTypeName: this.spec.schemaTypeName,\n      child: this.spec.child || createDocumentChildResolverForItem(this._context),\n      options: {\n        ...this.spec.options,\n        // @todo: make specifying .apiVersion required when using custom (non-simple) filters in v4\n        apiVersion: this.spec.options.apiVersion || DEFAULT_STUDIO_CLIENT_OPTIONS.apiVersion,\n        filter: validateFilter(this.spec, options),\n      },\n    }\n  }\n\n  /** Clone Document list builder (allows for options overriding)\n   * @param withSpec - override document list spec. See {@link PartialDocumentList}\n   * @returns document list builder. See {@link DocumentListBuilder}\n   */\n  clone(withSpec?: PartialDocumentList): DocumentListBuilder {\n    const builder = new DocumentListBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n\n    if (!this.initialValueTemplatesSpecified) {\n      builder.spec.initialValueTemplates = inferInitialValueTemplates(this._context, builder.spec)\n    }\n\n    if (!builder.spec.schemaTypeName) {\n      builder.spec.schemaTypeName = inferTypeName(builder.spec)\n    }\n\n    return builder\n  }\n\n  /** Get Document list spec\n   * @returns document list spec. See {@link PartialDocumentList}\n   */\n  getSpec(): PartialDocumentList {\n    return this.spec\n  }\n}\n\nfunction inferInitialValueTemplates(\n  context: StructureContext,\n  spec: PartialDocumentList,\n): InitialValueTemplateItem[] | undefined {\n  const {document} = context\n  const {schemaTypeName, options} = spec\n  const {filter, params} = options || {filter: '', params: {}}\n  const typeNames = schemaTypeName\n    ? [schemaTypeName]\n    : Array.from(new Set(getTypeNamesFromFilter(filter, params)))\n\n  if (typeNames.length === 0) {\n    return undefined\n  }\n\n  return typeNames\n    .flatMap((schemaType) =>\n      document.resolveNewDocumentOptions({\n        type: 'structure',\n        schemaType,\n      }),\n    )\n    .map((option) => ({...option, icon: AddIcon}))\n}\n\nfunction inferTypeName(spec: PartialDocumentList): string | undefined {\n  const {options} = spec\n  const {filter, params} = options || {filter: '', params: {}}\n  const typeNames = getTypeNamesFromFilter(filter, params)\n  return typeNames.length === 1 ? typeNames[0] : undefined\n}\n\n/** @internal */\nexport function getTypeNamesFromFilter(\n  filter: string,\n  params: Record<string, unknown> = {},\n): string[] {\n  let typeNames = getTypeNamesFromEqualityFilter(filter, params)\n\n  if (typeNames.length === 0) {\n    typeNames = getTypeNamesFromInTypesFilter(filter, params)\n  }\n\n  return typeNames\n}\n\n// From _type == \"movie\" || _type == $otherType\nfunction getTypeNamesFromEqualityFilter(\n  filter: string,\n  params: Record<string, unknown> = {},\n): string[] {\n  const pattern =\n    /\\b_type\\s*==\\s*(['\"].*?['\"]|\\$.*?(?:\\s|$))|\\B(['\"].*?['\"]|\\$.*?(?:\\s|$))\\s*==\\s*_type/g\n  const matches: string[] = []\n  let match\n  while ((match = pattern.exec(filter)) !== null) {\n    matches.push(match[1] || match[2])\n  }\n\n  return matches\n    .map((candidate) => {\n      const typeName = candidate[0] === '$' ? params[candidate.slice(1)] : candidate\n      const normalized = ((typeName as string) || '').trim().replace(/^[\"']|[\"']$/g, '')\n      return normalized\n    })\n    .filter(Boolean)\n}\n\n// From _type in [\"dog\", \"cat\", $otherSpecies]\nfunction getTypeNamesFromInTypesFilter(\n  filter: string,\n  params: Record<string, unknown> = {},\n): string[] {\n  const pattern = /\\b_type\\s+in\\s+\\[(.*?)\\]/\n  const matches = filter.match(pattern)\n  if (!matches) {\n    return []\n  }\n\n  return matches[1]\n    .split(/,\\s*/)\n    .map((match) => match.trim().replace(/^[\"']+|[\"']+$/g, ''))\n    .map((item) => (item[0] === '$' ? params[item.slice(1)] : item))\n    .filter(Boolean) as string[]\n}\n", "import {find} from 'lodash'\nimport {isRecord} from 'sanity'\n\nimport {type ChildResolver, type ChildResolverOptions} from './ChildResolver'\nimport {isDocumentListItem} from './DocumentListItem'\nimport {\n  type BuildableGenericList,\n  type GenericList,\n  GenericListBuilder,\n  type GenericListInput,\n  shallowIntentChecker,\n} from './GenericList'\nimport {type IntentChecker} from './Intent'\nimport {type ListItem, ListItemBuilder} from './ListItem'\nimport {HELP_URL, SerializeError} from './SerializeError'\nimport {type Divider, type SerializeOptions, type SerializePath} from './StructureNodes'\nimport {type StructureContext} from './types'\n\nconst getArgType = (thing: ListItem) => {\n  if (thing instanceof ListBuilder) {\n    return 'ListBuilder'\n  }\n\n  if (isPromise<ListItem>(thing)) {\n    return 'Promise'\n  }\n\n  return Array.isArray(thing) ? 'array' : typeof thing\n}\n\nconst isListItem = (item: ListItem | Divider): item is ListItem => {\n  return item.type === 'listItem'\n}\n\nconst defaultCanHandleIntent: IntentChecker = (intentName: string, params, context) => {\n  const pane = context.pane as List\n  const items = pane.items || []\n  return (\n    items\n      .filter(isDocumentListItem)\n      .some((item) => item.schemaType.name === params.type && item._id === params.id) ||\n    shallowIntentChecker(intentName, params, context)\n  )\n}\n\nconst resolveChildForItem: ChildResolver = (itemId: string, options: ChildResolverOptions) => {\n  const parentItem = options.parent as List\n  const items = parentItem.items.filter(isListItem)\n  const target = (items.find((item) => item.id === itemId) || {child: undefined}).child\n\n  if (!target || typeof target !== 'function') {\n    return target\n  }\n\n  return typeof target === 'function' ? target(itemId, options) : target\n}\n\nfunction maybeSerializeListItem(\n  item: ListItem | ListItemBuilder | Divider,\n  index: number,\n  path: SerializePath,\n): ListItem | Divider {\n  if (item instanceof ListItemBuilder) {\n    return item.serialize({path, index})\n  }\n\n  const listItem = item as ListItem\n  if (listItem && listItem.type === 'divider') {\n    return item as Divider\n  }\n\n  if (!listItem || listItem.type !== 'listItem') {\n    const gotWhat = (listItem && listItem.type) || getArgType(listItem)\n    const helpText = gotWhat === 'array' ? ' - did you forget to spread (...moreItems)?' : ''\n    throw new SerializeError(\n      `List items must be of type \"listItem\", got \"${gotWhat}\"${helpText}`,\n      path,\n      index,\n    ).withHelpUrl(HELP_URL.INVALID_LIST_ITEM)\n  }\n\n  return item\n}\n\nfunction isPromise<T>(thing: unknown): thing is PromiseLike<T> {\n  return isRecord(thing) && typeof thing.then === 'function'\n}\n\n/**\n * Interface for List\n *\n * @public\n */\nexport interface List extends GenericList {\n  type: 'list'\n  /** List items. See {@link ListItem} and {@link Divider} */\n  items: (ListItem | Divider)[]\n}\n\n/**\n * Interface for list input\n *\n * @public\n */\nexport interface ListInput extends GenericListInput {\n  /** List input items array. See {@link ListItem}, {@link ListItemBuilder} and {@link Divider} */\n  items?: (ListItem | ListItemBuilder | Divider)[]\n}\n\n/**\n * Interface for buildable list\n *\n * @public\n */\nexport interface BuildableList extends BuildableGenericList {\n  /** List items. See {@link ListItem}, {@link ListItemBuilder} and {@link Divider} */\n  items?: (ListItem | ListItemBuilder | Divider)[]\n}\n\n/**\n * A `ListBuilder` is used to build a list of items in the structure tool.\n *\n * @public */\nexport class ListBuilder extends GenericListBuilder<BuildableList, ListBuilder> {\n  /** buildable list option object. See {@link BuildableList} */\n  protected spec: BuildableList\n\n  constructor(\n    /**\n     * Structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: ListInput,\n  ) {\n    super()\n    this.spec = spec ? spec : {}\n    this.initialValueTemplatesSpecified = Boolean(spec && spec.initialValueTemplates)\n  }\n\n  /**\n   * Set list builder based on items provided\n   * @param items - list items. See {@link ListItemBuilder}, {@link ListItem} and {@link Divider}\n   * @returns list builder based on items provided. See {@link ListBuilder}\n   */\n  items(items: (ListItemBuilder | ListItem | Divider)[]): ListBuilder {\n    return this.clone({items})\n  }\n\n  /** Get list builder items\n   * @returns list items. See {@link BuildableList}\n   */\n  getItems(): BuildableList['items'] {\n    return this.spec.items\n  }\n\n  /** Serialize list builder\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns list based on path in options. See {@link List}\n   */\n  serialize(options: SerializeOptions = {path: []}): List {\n    const id = this.spec.id\n    if (typeof id !== 'string' || !id) {\n      throw new SerializeError(\n        '`id` is required for lists',\n        options.path,\n        options.index,\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    const items = typeof this.spec.items === 'undefined' ? [] : this.spec.items\n    if (!Array.isArray(items)) {\n      throw new SerializeError(\n        '`items` must be an array of items',\n        options.path,\n        options.index,\n      ).withHelpUrl(HELP_URL.LIST_ITEMS_MUST_BE_ARRAY)\n    }\n\n    const path = (options.path || []).concat(id)\n    const serializedItems = items.map((item, index) => maybeSerializeListItem(item, index, path))\n    const dupes = serializedItems.filter((val, i) => find(serializedItems, {id: val.id}, i + 1))\n\n    if (dupes.length > 0) {\n      const dupeIds = dupes.map((item) => item.id).slice(0, 5)\n      const dupeDesc = dupes.length > 5 ? `${dupeIds.join(', ')}...` : dupeIds.join(', ')\n      throw new SerializeError(\n        `List items with same ID found (${dupeDesc})`,\n        options.path,\n        options.index,\n      ).withHelpUrl(HELP_URL.LIST_ITEM_IDS_MUST_BE_UNIQUE)\n    }\n\n    return {\n      ...super.serialize(options),\n      type: 'list',\n      canHandleIntent: this.spec.canHandleIntent || defaultCanHandleIntent,\n      child: this.spec.child || resolveChildForItem,\n      items: serializedItems,\n    }\n  }\n\n  /**\n   * Clone list builder and return new list builder based on context and spec provided\n   * @param withSpec - list options. See {@link BuildableList}\n   * @returns new list builder based on context and spec provided. See {@link ListBuilder}\n   */\n  clone(withSpec?: BuildableList): ListBuilder {\n    const builder = new ListBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n", "import {type SchemaType} from '@sanity/types'\nimport {type Observable} from 'rxjs'\nimport {type I18nTextRecord} from 'sanity'\n\nimport {type ChildResolver, type ItemChild} from './ChildResolver'\nimport {ComponentBuilder} from './Component'\nimport {DocumentBuilder} from './Document'\nimport {DocumentListBuilder} from './DocumentList'\nimport {ListBuilder} from './List'\nimport {HELP_URL, SerializeError} from './SerializeError'\nimport {\n  type Collection,\n  type CollectionBuilder,\n  type Serializable,\n  type SerializeOptions,\n} from './StructureNodes'\nimport {type StructureContext} from './types'\nimport {getStructureNodeId} from './util/getStructureNodeId'\nimport {validateId} from './util/validateId'\n\n/**\n * Unserialized list item child.\n * See {@link Collection}, {@link CollectionBuilder}, {@link ChildResolver} and {@link ItemChild}\n *\n * @public\n */\nexport type UnserializedListItemChild =\n  | Collection\n  | CollectionBuilder\n  | ChildResolver\n  | Observable<ItemChild>\n\n/**\n * Child of List Item\n * See {@link Collection}, {@link ChildResolver}, {@link ItemChild}\n * @public\n */\nexport type ListItemChild = Collection | ChildResolver | Observable<ItemChild> | undefined\n\n/**\n * Interface for serialize list item options\n *\n * @public\n */\nexport interface ListItemSerializeOptions extends SerializeOptions {\n  /** Check if list item title is optional */\n  titleIsOptional?: boolean\n}\n\n/**\n * Interface for ist item display options\n *\n * @public */\nexport interface ListItemDisplayOptions {\n  /** Check if list item display should show icon */\n  showIcon?: boolean\n}\n\n/**\n * interface for list item input\n *\n * @public */\nexport interface ListItemInput {\n  /** List item id */\n  id: string\n  /** List item title */\n  title?: string\n  /** List item icon */\n  icon?: React.ComponentType | React.ReactNode\n  /** List item child. See {@link ListItemChild} */\n  child?: ListItemChild\n  /** List item display options. See {@link ListItemDisplayOptions} */\n  displayOptions?: ListItemDisplayOptions\n  /** List item schema type. See {@link SchemaType} */\n  schemaType?: SchemaType | string\n}\n\n/**\n * Interface for List Item\n *\n * @public */\nexport interface ListItem {\n  /** List item id */\n  id: string\n  /** List item type */\n  type: string\n  /**\n   * The i18n key and namespace used to populate the localized title. This is\n   * the recommend way to set the title if you are localizing your studio.\n   */\n  i18n?: I18nTextRecord<'title'>\n  /** List item title. Note that the `i18n` key and namespace will take precedence. */\n  title?: string\n  /** List item icon */\n  icon?: React.ComponentType | React.ReactNode\n  /** List item child. See {@link ListItemChild} */\n  child?: ListItemChild\n  /** List item display options. See {@link ListItemDisplayOptions} */\n  displayOptions?: ListItemDisplayOptions\n  /** List item schema type. See {@link SchemaType} */\n  schemaType?: SchemaType\n}\n\n/**\n * Interface for unserialized list items.\n *\n * @public\n */\nexport interface UnserializedListItem {\n  /** List item ID */\n  id: string\n  /** List item title */\n  title: string\n  /**\n   * The i18n key and namespace used to populate the localized title. This is\n   * the recommend way to set the title if you are localizing your studio.\n   */\n  i18n?: I18nTextRecord<'title'>\n  /** List item icon */\n  icon?: React.ComponentType | React.ReactNode\n  /** List item child. See {@link UnserializedListItemChild} */\n  child?: UnserializedListItemChild\n  /** List item display options. See {@link ListItemDisplayOptions} */\n  displayOptions?: ListItemDisplayOptions\n  /** List item schema. See {@link SchemaType} */\n  schemaType?: SchemaType | string\n}\n\n/**\n * Partial list item. See {@link UnserializedListItem}\n *\n * @public */\nexport type PartialListItem = Partial<UnserializedListItem>\n\n/**\n * Class for building list items\n *\n * @public */\nexport class ListItemBuilder implements Serializable<ListItem> {\n  /** List item option object. See {@link PartialListItem} */\n  protected spec: PartialListItem\n\n  constructor(\n    /**\n     * Structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: ListItemInput,\n  ) {\n    this.spec = spec ? spec : {}\n  }\n\n  /**\n   * Set list item ID\n   * @returns list item builder based on ID provided. See {@link ListItemBuilder}\n   */\n  id(id: string): ListItemBuilder {\n    return this.clone({id})\n  }\n\n  /**\n   * Get list item ID\n   * @returns list item ID. See {@link PartialListItem}\n   */\n  getId(): PartialListItem['id'] {\n    return this.spec.id\n  }\n\n  /**\n   * Set list item title\n   * @returns list item builder based on title provided. See {@link ListItemBuilder}\n   */\n  title(title: string): ListItemBuilder {\n    return this.clone({title, id: getStructureNodeId(title, this.spec.id)})\n  }\n\n  /**\n   * Get list item title\n   * @returns list item title. See {@link PartialListItem}\n   */\n  getTitle(): PartialListItem['title'] {\n    return this.spec.title\n  }\n\n  /** Set the i18n key and namespace used to populate the localized title.\n   * @param i18n - the key and namespaced used to populate the localized title.\n   * @returns component builder based on i18n key and ns provided\n   */\n  i18n(i18n: I18nTextRecord<'title'>): ListItemBuilder {\n    return this.clone({i18n})\n  }\n\n  /** Get i18n key and namespace used to populate the localized title\n   * @returns the i18n key and namespace used to populate the localized title\n   */\n  getI18n(): I18nTextRecord<'title'> | undefined {\n    return this.spec.i18n\n  }\n\n  /**\n   * Set list item icon\n   * @returns list item builder based on icon provided. See {@link ListItemBuilder}\n   */\n  icon(icon: React.ComponentType | React.ReactNode): ListItemBuilder {\n    return this.clone({icon})\n  }\n\n  /**\n   * Set if list item should show icon\n   * @returns list item builder based on showIcon provided. See {@link ListItemBuilder}\n   */\n  showIcon(enabled = true): ListItemBuilder {\n    return this.clone({\n      displayOptions: {...(this.spec.displayOptions || {}), showIcon: enabled},\n    })\n  }\n\n  /**\n   * Check if list item should show icon\n   * @returns true if it should show the icon, false if not, undefined if not set\n   */\n  getShowIcon(): boolean | undefined {\n    return this.spec.displayOptions ? this.spec.displayOptions.showIcon : undefined\n  }\n\n  /**\n   *Get list item icon\n   * @returns list item icon. See {@link PartialListItem}\n   */\n  getIcon(): PartialListItem['icon'] {\n    return this.spec.icon\n  }\n\n  /**\n   * Set list item child\n   * @param child - list item child. See {@link UnserializedListItemChild}\n   * @returns list item builder based on child provided. See {@link ListItemBuilder}\n   */\n  child(child: UnserializedListItemChild): ListItemBuilder {\n    return this.clone({child})\n  }\n\n  /**\n   * Get list item child\n   * @returns list item child. See {@link PartialListItem}\n   */\n  getChild(): PartialListItem['child'] {\n    return this.spec.child\n  }\n\n  /**\n   * Set list item schema type\n   * @param schemaType - list item schema type. See {@link SchemaType}\n   * @returns list item builder based on schema type provided. See {@link ListItemBuilder}\n   */\n  schemaType(schemaType: SchemaType | string): ListItemBuilder {\n    return this.clone({schemaType})\n  }\n\n  /**\n   * Get list item schema type\n   * @returns list item schema type. See {@link PartialListItem}\n   */\n  getSchemaType(): PartialListItem['schemaType'] {\n    const schemaType = this.spec.schemaType\n\n    if (typeof schemaType === 'string') {\n      return this._context.schema.get(schemaType)\n    }\n\n    return this.spec.schemaType\n  }\n\n  /** Serialize list item builder\n   * @param options - serialization options. See {@link ListItemSerializeOptions}\n   * @returns list item node based on path provided in options. See {@link ListItem}\n   */\n  serialize(options: ListItemSerializeOptions = {path: []}): ListItem {\n    const {id, title, child} = this.spec\n    if (typeof id !== 'string' || !id) {\n      throw new SerializeError(\n        '`id` is required for list items',\n        options.path,\n        options.index,\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!options.titleIsOptional && (typeof title !== 'string' || !title)) {\n      throw new SerializeError('`title` is required for list items', options.path, id).withHelpUrl(\n        HELP_URL.TITLE_REQUIRED,\n      )\n    }\n\n    let schemaType = this.spec.schemaType\n    if (typeof schemaType === 'string') {\n      const type = this._context.schema.get(schemaType)\n      if (!type) {\n        throw new SerializeError(\n          `Could not find type \"${schemaType}\" in schema`,\n          options.path,\n          id,\n        ).withHelpUrl(HELP_URL.SCHEMA_TYPE_NOT_FOUND)\n      }\n\n      schemaType = type\n    }\n\n    const serializeOptions = {path: options.path.concat(id), hint: 'child'}\n    let listChild =\n      child instanceof ComponentBuilder ||\n      child instanceof DocumentListBuilder ||\n      child instanceof DocumentBuilder ||\n      child instanceof ListBuilder\n        ? child.serialize(serializeOptions)\n        : child\n\n    // In the case of a function, create a bound version that will pass the correct serialize\n    // context, so we may lazily resolve it at some point in the future without losing context\n    if (typeof listChild === 'function') {\n      const originalChild = listChild\n      listChild = (itemId, childOptions) => {\n        return originalChild(itemId, {...childOptions, serializeOptions})\n      }\n    }\n\n    return {\n      ...this.spec,\n      id: validateId(id, options.path, options.index),\n      schemaType,\n      child: listChild,\n      title,\n      type: 'listItem',\n    }\n  }\n\n  /** Clone list item builder\n   * @param withSpec - partial list item options. See {@link PartialListItem}\n   * @returns list item builder based on context and spec provided. See {@link ListItemBuilder}\n   */\n  clone(withSpec?: PartialListItem): ListItemBuilder {\n    const builder = new ListItemBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n", "import {type SchemaType} from '@sanity/types'\nimport {isRecord} from 'sanity'\n\nimport {DocumentBuilder} from './Document'\nimport {\n  type ListItem,\n  ListItemBuilder,\n  type ListItemInput,\n  type UnserializedListItem,\n} from './ListItem'\nimport {HELP_URL, SerializeError} from './SerializeError'\nimport {type SerializeOptions} from './StructureNodes'\nimport {type StructureContext} from './types'\n\n/**\n * Interface for document list item input\n *\n * @public\n */\nexport interface DocumentListItemInput extends ListItemInput {\n  /** Document list item input schema type. See {@link SchemaType} */\n  schemaType: SchemaType | string\n}\n\n/**\n * Interface for document list item\n *\n * @public\n */\nexport interface DocumentListItem extends ListItem {\n  /** Document schema type. See {@link SchemaType} */\n  schemaType: SchemaType\n  /** Document ID */\n  _id: string\n}\n\n/**\n * Partial document list item\n *\n * @public\n */\nexport type PartialDocumentListItem = Partial<UnserializedListItem>\n\nconst createDefaultChildResolver =\n  (context: StructureContext, spec: PartialDocumentListItem) => (documentId: string) => {\n    const schemaType =\n      spec.schemaType &&\n      (typeof spec.schemaType === 'string' ? spec.schemaType : spec.schemaType.name)\n\n    return schemaType\n      ? context.resolveDocumentNode({schemaType, documentId})\n      : new DocumentBuilder(context).id('documentEditor').documentId(documentId)\n  }\n\n/**\n * Class for building a document list item\n *\n * @public\n */\nexport class DocumentListItemBuilder extends ListItemBuilder {\n  /** Document list options. See {@link PartialDocumentListItem} */\n  protected spec: PartialDocumentListItem\n\n  constructor(\n    /**\n     * Structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: DocumentListItemInput,\n  ) {\n    super(_context, spec)\n    this.spec = spec ? spec : {}\n  }\n\n  /**\n   * Serialize document list item\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns document list item object based on path provided in options. See {@link DocumentListItem}\n   */\n  serialize(options: SerializeOptions = {path: []}): DocumentListItem {\n    const spec = super.serialize({...options, titleIsOptional: true})\n\n    if (!spec.schemaType) {\n      throw new SerializeError(\n        '`schemaType` is required for document list items',\n        options.path,\n        options.index,\n      ).withHelpUrl(HELP_URL.SCHEMA_TYPE_REQUIRED)\n    }\n\n    const child = spec.child || createDefaultChildResolver(this._context, spec)\n    return {...spec, child, schemaType: spec.schemaType, _id: spec.id}\n  }\n\n  /** Clone Document list item builder (allows for options overriding)\n   * @param withSpec - Document list item builder options. See {@link PartialDocumentListItem}\n   * @returns document list item builder. See {@link DocumentListItemBuilder}\n   */\n  clone(withSpec?: PartialDocumentListItem): DocumentListItemBuilder {\n    const builder = new DocumentListItemBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n\n/** @internal */\nexport function isDocumentListItem(item: unknown): item is DocumentListItem {\n  return isRecord(item) && typeof item.schemaType !== 'undefined' && typeof item._id === 'string'\n}\n", "import {type SchemaType} from '@sanity/types'\n\nimport {DocumentListBuilder, type DocumentListInput, type PartialDocumentList} from './DocumentList'\nimport {type GenericListInput} from './GenericList'\nimport {DEFAULT_INTENT_HANDLER} from './Intent'\nimport {type Child} from './StructureNodes'\nimport {type StructureContext} from './types'\n\n/**\n * Interface for document type list input\n *\n * @public\n */\nexport interface DocumentTypeListInput extends Partial<GenericListInput> {\n  /** Document type list input schema type. See {@link SchemaType} */\n  schemaType: SchemaType | string\n}\n\n/**\n * Class for building a document type list\n *\n * @public\n */\nexport class DocumentTypeListBuilder extends DocumentListBuilder {\n  /** Document list options. See {@link PartialDocumentList} */\n  protected spec: PartialDocumentList\n\n  constructor(\n    /**\n     * Structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: DocumentListInput,\n  ) {\n    super(_context)\n    this.spec = spec ? spec : {}\n  }\n\n  /**\n   * Set Document type list child\n   * @param child - Child component. See {@link Child}\n   * @returns document type list builder based on child component provided without default intent handler. See {@link DocumentTypeListBuilder}\n   */\n  child(child: Child): DocumentTypeListBuilder {\n    return this.cloneWithoutDefaultIntentHandler({child})\n  }\n\n  /** Clone Document type list builder (allows for options overriding)\n   * @param withSpec - Document type list builder options. See {@link PartialDocumentList}\n   * @returns document type list builder. See {@link DocumentTypeListBuilder}\n   */\n  clone(withSpec?: PartialDocumentList): DocumentTypeListBuilder {\n    const parent = super.clone(withSpec)\n    const builder = new DocumentTypeListBuilder(this._context)\n    builder.spec = {...this.spec, ...parent.getSpec(), ...(withSpec || {})}\n    return builder\n  }\n\n  /** Clone Document type list builder (allows for options overriding) and remove default intent handler\n   * @param withSpec - Document type list builder options. See {@link PartialDocumentList}\n   * @returns document type list builder without default intent handler. See {@link DocumentTypeListBuilder}\n   */\n  cloneWithoutDefaultIntentHandler(withSpec?: PartialDocumentList): DocumentTypeListBuilder {\n    const parent = super.clone(withSpec)\n    const builder = new DocumentTypeListBuilder(this._context)\n    const canHandleIntent = this.spec.canHandleIntent\n    const shouldOverride = canHandleIntent && canHandleIntent.identity === DEFAULT_INTENT_HANDLER\n    const override = shouldOverride ? {canHandleIntent: undefined} : {}\n    builder.spec = {\n      ...parent.getSpec(),\n      ...this.spec,\n      ...(withSpec || {}),\n      ...override,\n    }\n    return builder\n  }\n}\n", "import {StackCompactIcon, StackIcon} from '@sanity/icons'\nimport {type SchemaType} from '@sanity/types'\nimport {startCase} from 'lodash'\n\nimport {structureLocaleNamespace} from '../i18n'\nimport {type DocumentListBuilder} from './DocumentList'\nimport {DocumentTypeListBuilder, type DocumentTypeListInput} from './DocumentTypeList'\nimport {defaultIntentChecker} from './Intent'\nimport {type List} from './List'\nimport {type ListItem, ListItemBuilder} from './ListItem'\nimport {getOrderingMenuItemsForSchemaType, MenuItemBuilder} from './MenuItem'\nimport {DEFAULT_SELECTED_ORDERING_OPTION} from './Sort'\nimport {type Collection} from './StructureNodes'\nimport {type StructureContext} from './types'\n\nconst BUNDLED_DOC_TYPES = ['sanity.imageAsset', 'sanity.fileAsset']\n\nfunction isBundledDocType(typeName: string) {\n  return BUNDLED_DOC_TYPES.includes(typeName)\n}\n\nfunction isDocumentType(schemaType: SchemaType) {\n  return schemaType.type?.name === 'document'\n}\n\nfunction isList(collection: Collection): collection is List {\n  return collection.type === 'list'\n}\n\nexport function getDocumentTypes({schema}: StructureContext): string[] {\n  return schema\n    .getTypeNames()\n    .filter((n) => {\n      const schemaType = schema.get(n)\n      return schemaType && isDocumentType(schemaType)\n    })\n    .filter((n) => !isBundledDocType(n))\n}\n\nexport function getDocumentTypeListItems(context: StructureContext): ListItemBuilder[] {\n  const types = getDocumentTypes(context)\n  return types.map((typeName) => getDocumentTypeListItem(context, typeName))\n}\n\nexport function getDocumentTypeListItem(\n  context: StructureContext,\n  typeName: string,\n): ListItemBuilder {\n  const {schema} = context\n\n  const type = schema.get(typeName)\n  if (!type) {\n    throw new Error(`Schema type with name \"${typeName}\" not found`)\n  }\n\n  const title = type.title || startCase(typeName)\n\n  return new ListItemBuilder(context)\n    .id(typeName)\n    .title(title)\n    .schemaType(type)\n    .child((id, childContext) => {\n      const parent = childContext.parent as Collection\n      const parentItem = isList(parent)\n        ? (parent.items.find((item) => item.id === id) as ListItem)\n        : null\n\n      let list = getDocumentTypeList(context, typeName)\n      if (parentItem && parentItem.title) {\n        list = list.title(parentItem.title)\n      }\n\n      return list\n    })\n}\n\nexport function getDocumentTypeList(\n  context: StructureContext,\n  typeNameOrSpec: string | DocumentTypeListInput,\n): DocumentListBuilder {\n  const {schema, resolveDocumentNode} = context\n\n  const schemaType = typeof typeNameOrSpec === 'string' ? typeNameOrSpec : typeNameOrSpec.schemaType\n  const typeName = typeof schemaType === 'string' ? schemaType : schemaType.name\n  const spec: DocumentTypeListInput =\n    typeof typeNameOrSpec === 'string' ? {schemaType} : typeNameOrSpec\n\n  const type = schema.get(typeName)\n  if (!type) {\n    throw new Error(`Schema type with name \"${typeName}\" not found`)\n  }\n\n  const title = type.title || startCase(typeName)\n\n  return new DocumentTypeListBuilder(context)\n    .id(spec.id || typeName)\n    .title(spec.title || title)\n    .filter('_type == $type')\n    .params({type: typeName})\n    .schemaType(type)\n    .defaultOrdering(DEFAULT_SELECTED_ORDERING_OPTION.by)\n    .menuItemGroups(\n      spec.menuItemGroups || [\n        {\n          id: 'sorting',\n          title: 'Sort',\n          i18n: {title: {key: 'menu-item-groups.actions-group', ns: structureLocaleNamespace}},\n        },\n        {\n          id: 'layout',\n          title: 'Layout',\n          i18n: {title: {key: 'menu-item-groups.layout-group', ns: structureLocaleNamespace}},\n        },\n        {\n          id: 'actions',\n          title: 'Actions',\n          i18n: {title: {key: 'menu-item-groups.sorting-group', ns: structureLocaleNamespace}},\n        },\n      ],\n    )\n    .child(\n      spec.child ||\n        ((documentId: string) => resolveDocumentNode({schemaType: typeName, documentId})),\n    )\n    .canHandleIntent(spec.canHandleIntent || defaultIntentChecker)\n    .menuItems(\n      spec.menuItems || [\n        // Create new (from action button) will be added in serialization step of GenericList\n\n        // Sort by <Y>\n        ...getOrderingMenuItemsForSchemaType(context, type),\n\n        // Display as <Z>\n        new MenuItemBuilder(context)\n          .group('layout')\n          .i18n({title: {key: 'menu-items.layout.compact-view', ns: structureLocaleNamespace}})\n          .title('Compact view') // fallback title\n          .icon(StackCompactIcon)\n          .action('setLayout')\n          .params({layout: 'default'}),\n\n        new MenuItemBuilder(context)\n          .group('layout')\n          .i18n({title: {key: 'menu-items.layout.detailed-view', ns: structureLocaleNamespace}})\n          .title('Detailed view') // fallback title\n          .icon(StackIcon)\n          .action('setLayout')\n          .params({layout: 'detail'}),\n\n        // Create new (from menu) will be added in serialization step of GenericList\n      ],\n    )\n}\n", "import {type SchemaType} from '@sanity/types'\nimport {uniqueId} from 'lodash'\nimport {isValidElementType} from 'react-is'\nimport {getConfigContextFromSource, getPublishedId, type Source} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\nimport {ComponentBuilder, type ComponentInput} from './Component'\nimport {DocumentBuilder, documentFromEditor, documentFromEditorWithInitialValue} from './Document'\nimport {DocumentListBuilder} from './DocumentList'\nimport {DocumentListItemBuilder} from './DocumentListItem'\nimport {\n  getDocumentTypeList,\n  getDocumentTypeListItem,\n  getDocumentTypeListItems,\n} from './documentTypeListItems'\nimport {\n  defaultInitialValueTemplateItems,\n  InitialValueTemplateItemBuilder,\n  menuItemsFromInitialValueTemplateItems,\n} from './InitialValueTemplateItem'\nimport {ListBuilder} from './List'\nimport {ListItemBuilder} from './ListItem'\nimport {getOrderingMenuItem, getOrderingMenuItemsForSchemaType, MenuItemBuilder} from './MenuItem'\nimport {MenuItemGroupBuilder} from './MenuItemGroup'\nimport {type Divider} from './StructureNodes'\nimport {\n  type DefaultDocumentNodeResolver,\n  type StructureBuilder,\n  type StructureContext,\n  type UserComponent,\n} from './types'\nimport * as views from './views'\n\n/** @internal */\nexport interface StructureBuilderOptions {\n  source: Source\n  defaultDocumentNode?: DefaultDocumentNodeResolver\n}\n\nfunction hasIcon(schemaType?: SchemaType | string): boolean {\n  if (!schemaType || typeof schemaType === 'string') {\n    return false\n  }\n\n  return Boolean(schemaType.icon)\n}\n\nfunction getDefaultStructure(context: StructureContext): ListBuilder {\n  const items = getDocumentTypeListItems(context)\n  return new ListBuilder(context)\n    .id('__root__')\n    .title('Content')\n    .i18n({title: {key: 'default-definition.content-title', ns: structureLocaleNamespace}})\n    .items(items)\n    .showIcons(items.some((item) => hasIcon(item.getSchemaType())))\n}\n\n/** @internal */\nexport function createStructureBuilder({\n  defaultDocumentNode,\n  source,\n}: StructureBuilderOptions): StructureBuilder {\n  const configContext = getConfigContextFromSource(source)\n  const context: StructureContext = {\n    ...source,\n    getStructureBuilder: () => structureBuilder,\n    resolveDocumentNode: (options) => {\n      let builder =\n        defaultDocumentNode?.(structureBuilder, {...options, ...configContext}) ||\n        new DocumentBuilder(context)\n\n      if (!builder.getId()) {\n        builder = builder.id('documentEditor')\n      }\n\n      if (options.documentId) {\n        builder = builder.documentId(getPublishedId(options.documentId))\n      }\n\n      return builder.schemaType(options.schemaType)\n    },\n  }\n\n  const structureBuilder: StructureBuilder = {\n    defaults: () => getDefaultStructure(context),\n    documentTypeList: (...args) => getDocumentTypeList(context, ...args),\n    documentTypeListItem: (...args) => getDocumentTypeListItem(context, ...args),\n    documentTypeListItems: (...args) => getDocumentTypeListItems(context, ...args),\n    document: (...args) => new DocumentBuilder(context, ...args),\n    documentWithInitialValueTemplate: (...args) =>\n      documentFromEditorWithInitialValue(context, ...args),\n    defaultDocument: context.resolveDocumentNode,\n\n    list: (...args) => new ListBuilder(context, ...args),\n    listItem: (...args) => new ListItemBuilder(context, ...args),\n\n    menuItem: (...args) => new MenuItemBuilder(context, ...args),\n    menuItemGroup: (...args) => new MenuItemGroupBuilder(context, ...args),\n    menuItemsFromInitialValueTemplateItems: (...args) =>\n      menuItemsFromInitialValueTemplateItems(context, ...args),\n\n    documentList: (...args) => new DocumentListBuilder(context, ...args),\n    documentListItem: (...args) => new DocumentListItemBuilder(context, ...args),\n\n    orderingMenuItem: (...args) => getOrderingMenuItem(context, ...args),\n    orderingMenuItemsForType: (...args) => getOrderingMenuItemsForSchemaType(context, ...args),\n\n    editor: (...args) => documentFromEditor(context, ...args),\n\n    defaultInitialValueTemplateItems: (...args) =>\n      defaultInitialValueTemplateItems(context, ...args),\n\n    initialValueTemplateItem: (\n      templateId: string,\n      parameters?: Record<string, unknown>,\n    ): InitialValueTemplateItemBuilder =>\n      new InitialValueTemplateItemBuilder(context, {\n        id: templateId,\n        parameters,\n        templateId,\n      }),\n\n    component: (spec?: ComponentInput | UserComponent) => {\n      return isValidElementType(spec)\n        ? new ComponentBuilder().component(spec as UserComponent)\n        : new ComponentBuilder(spec as ComponentInput)\n    },\n\n    divider: (): Divider => ({id: uniqueId('__divider__'), type: 'divider'}),\n\n    view: views,\n    context,\n  }\n\n  return structureBuilder\n}\n", "import {type DocumentBadgeComponent} from 'sanity'\n\n/** @internal */\nexport const LiveEditBadge: DocumentBadgeComponent = (props) => {\n  const {liveEdit} = props\n\n  if (liveEdit) {\n    return {\n      label: 'Live',\n      color: 'danger',\n    }\n  }\n\n  return null\n}\n", "import {uuid} from '@sanity/uuid'\n\nimport {EMPTY_PARAMS, type LOADING_PANE} from './constants'\nimport {type PaneNode, type RouterPanes} from './types'\n\nconst state: {\n  activePanes: Array<PaneNode | typeof LOADING_PANE>\n} = {activePanes: []}\n\nexport function setActivePanes(panes: Array<PaneNode | typeof LOADING_PANE>): void {\n  state.activePanes = panes\n}\n\n/**\n * This function looks at the _active panes_ to resolve an intent. this type of\n * intent resolution is faster and does not cause the panes to reset\n *\n * @internal\n */\nexport function getIntentState(\n  intent: string,\n  params: Record<string, string>,\n  routerState: {panes?: RouterPanes} | undefined,\n  payload: unknown,\n): {panes: RouterPanes} | {intent: string; params: Record<string, string>; payload: unknown} {\n  const panes = routerState?.panes || []\n  const activePanes = state.activePanes || []\n  const editDocumentId = params.id || uuid()\n  const isTemplate = intent === 'create' && params.template\n\n  // Loop through open panes and see if any of them can handle the intent\n  for (let i = activePanes.length - 1; i >= 0; i--) {\n    const pane = activePanes[i]\n\n    if (typeof pane !== 'object') continue\n\n    // NOTE: if you update this logic, please also update the similar handler in\n    // `resolveIntent.ts`\n    if (\n      pane.canHandleIntent?.(intent, params, {\n        pane,\n        index: i,\n      }) ||\n      // see `resolveIntent.ts` for more info\n      (pane.type === 'documentList' &&\n        pane.schemaTypeName === params.type &&\n        pane.options.filter === '_type == $type')\n    ) {\n      const paneParams = isTemplate ? {template: params.template} : EMPTY_PARAMS\n\n      return {\n        panes: panes\n          .slice(0, i)\n          .concat([[{id: editDocumentId, params: paneParams, payload}]]) as RouterPanes,\n      }\n    }\n  }\n\n  return {intent: intent, params, payload}\n}\n", "import {type AnnotationDetails, type Diff, visitDiff} from 'sanity'\n\nexport function collectLatestAuthorAnnotations(diff: Diff): AnnotationDetails[] {\n  const authorMap = new Map<string, AnnotationDetails>()\n  visitDiff(diff, (child) => {\n    if (child.action === 'unchanged' || !('annotation' in child) || !child.annotation) {\n      return true\n    }\n\n    const {author, timestamp} = child.annotation\n    const previous = authorMap.get(author)\n    if (!previous || previous.timestamp < timestamp) {\n      authorMap.set(author, child.annotation)\n    }\n\n    return true\n  })\n\n  return Array.from(authorMap.values()).sort((a, b) => (a.timestamp < b.timestamp ? 1 : -1))\n}\n", "import {type ObjectDiff} from '@sanity/diff'\nimport {AvatarStack, BoundaryElementProvider, Box, Card, Flex} from '@sanity/ui'\nimport {type ReactElement, useMemo, useRef} from 'react'\nimport {\n  ChangeFieldWrapper,\n  ChangeList,\n  DiffTooltip,\n  type DocumentChangeContextInstance,\n  type DocumentInspectorProps,\n  LoadingBlock,\n  NoChanges,\n  type ObjectSchemaType,\n  ScrollContainer,\n  UserAvatar,\n  useTimelineSelector,\n  useTranslation,\n} from 'sanity'\nimport {DocumentChangeContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {DocumentInspectorHeader} from '../../documentInspector'\nimport {TimelineMenu} from '../../timeline'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {collectLatestAuthorAnnotations} from './helpers'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nexport function ChangesInspector(props: DocumentInspectorProps): ReactElement {\n  const {onClose} = props\n  const {documentId, schemaType, timelineError, timelineStore, value} = useDocumentPane()\n  const scrollRef = useRef<HTMLDivElement | null>(null)\n\n  // Subscribe to external timeline state changes\n  const diff = useTimelineSelector(timelineStore, (state) => state.diff)\n  const onOlderRevision = useTimelineSelector(timelineStore, (state) => state.onOlderRevision)\n  const selectionState = useTimelineSelector(timelineStore, (state) => state.selectionState)\n  const sinceTime = useTimelineSelector(timelineStore, (state) => state.sinceTime)\n  const loading = selectionState === 'loading'\n  const isComparingCurrent = !onOlderRevision\n\n  // Note that we are using the studio core namespace here, as changes theoretically should\n  // be part of Sanity core (needs to be moved from structure at some point)\n  const {t} = useTranslation('studio')\n\n  const documentContext: DocumentChangeContextInstance = useMemo(\n    () => ({\n      documentId,\n      schemaType,\n      FieldWrapper: ChangeFieldWrapper,\n      rootDiff: diff,\n      isComparingCurrent,\n      value,\n    }),\n    [documentId, diff, isComparingCurrent, schemaType, value],\n  )\n\n  const changeAnnotations = useMemo(\n    () => (diff ? collectLatestAuthorAnnotations(diff) : []),\n    [diff],\n  )\n\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\" overflow=\"hidden\">\n      <DocumentInspectorHeader\n        as=\"header\"\n        closeButtonLabel={t('changes.action.close-label')}\n        flex=\"none\"\n        onClose={onClose}\n        title={t('changes.title')}\n      >\n        <Flex gap={1} padding={3} paddingTop={0} paddingBottom={2}>\n          <Box flex={1}>\n            <TimelineMenu mode=\"since\" chunk={sinceTime} placement=\"bottom-start\" />\n          </Box>\n\n          <Box flex=\"none\">\n            <DiffTooltip\n              annotations={changeAnnotations}\n              description={t('changes.changes-by-author')}\n              portal\n            >\n              <AvatarStack maxLength={4} aria-label={t('changes.changes-by-author')}>\n                {changeAnnotations.map(({author}) => (\n                  <UserAvatar key={author} user={author} />\n                ))}\n              </AvatarStack>\n            </DiffTooltip>\n          </Box>\n        </Flex>\n      </DocumentInspectorHeader>\n\n      <Card flex={1}>\n        <BoundaryElementProvider element={scrollRef.current}>\n          <Scroller data-ui=\"Scroller\" ref={scrollRef}>\n            <Box flex={1} padding={4}>\n              <Content\n                diff={diff}\n                documentContext={documentContext}\n                error={timelineError}\n                loading={loading}\n                schemaType={schemaType}\n              />\n            </Box>\n          </Scroller>\n        </BoundaryElementProvider>\n      </Card>\n    </Flex>\n  )\n}\n\nfunction Content({\n  error,\n  diff,\n  documentContext,\n  loading,\n  schemaType,\n}: {\n  error?: Error | null\n  diff: ObjectDiff<any> | null\n  documentContext: DocumentChangeContextInstance\n  loading: boolean\n  schemaType: ObjectSchemaType\n}) {\n  if (error) {\n    return <NoChanges />\n  }\n\n  if (loading) {\n    return <LoadingBlock showText />\n  }\n\n  if (!diff) {\n    return <NoChanges />\n  }\n\n  return (\n    <DocumentChangeContext.Provider value={documentContext}>\n      <ChangeList diff={diff} schemaType={schemaType} />\n    </DocumentChangeContext.Provider>\n  )\n}\n", "import {RestoreIcon} from '@sanity/icons'\nimport {type DocumentInspector, useTranslation} from 'sanity'\n\nimport {useStructureTool} from '../../../../useStructureTool'\nimport {HISTORY_INSPECTOR_NAME} from '../../constants'\nimport {ChangesInspector} from './ChangesInspector'\n\nexport const changesInspector: DocumentInspector = {\n  name: HISTORY_INSPECTOR_NAME,\n  useMenuItem: () => {\n    const {features} = useStructureTool()\n    const {t} = useTranslation()\n\n    return {\n      hidden: !features.reviewChanges,\n      icon: RestoreIcon,\n      title: t('changes.title'),\n    }\n  },\n  component: ChangesInspector,\n  onClose: ({params}) => ({params: {...params, since: undefined}}),\n  onOpen: ({params}) => ({params: {...params, since: '@lastPublished'}}),\n}\n", "/* eslint-disable no-loop-func */\n\nimport {type Path, type SanityDocument, type SchemaType} from '@sanity/types'\nimport {isArray, isRecord} from 'sanity'\n\nexport function getPathTitles(options: {\n  path: Path\n  schemaType: SchemaType\n  value: Partial<SanityDocument> | null\n}): Array<{name: string; title?: string}> {\n  const {path, schemaType, value} = options\n  const result: Array<{name: string; title?: string}> = []\n\n  let s = schemaType\n  let v: unknown = value\n\n  for (const segment of path) {\n    // field name\n    if (typeof segment === 'string') {\n      if (!isRecord(v) && v !== undefined) {\n        throw new Error(`Parent value is not an object, cannot get path segment: .${segment}`)\n      }\n\n      if (s.jsonType !== 'object') {\n        throw new Error(\n          `Parent type is not an object schema type, cannot get path segment: .${segment}`,\n        )\n      }\n\n      v = v?.[segment]\n\n      const field = s.fields.find((f) => f.name === segment)\n\n      if (!field) {\n        result.push({name: segment})\n        return result\n      }\n\n      s = field.type\n\n      result.push(s)\n\n      continue\n    }\n\n    // array item index\n    if (typeof segment === 'number') {\n      if (!isArray(v) && v !== undefined) {\n        throw new Error(`Parent value is not an array, cannot get path segment: [${segment}]`)\n      }\n\n      if (s.jsonType !== 'array') {\n        throw new Error(\n          `Parent type is not an array schema type, cannot get path segment: [${segment}]`,\n        )\n      }\n\n      v = v?.[segment]\n\n      const itemType = s.of.find((ofType) => {\n        if (typeof v === 'string') {\n          return ofType.jsonType === 'string'\n        }\n\n        if (typeof v === 'number') {\n          return ofType.jsonType === 'number'\n        }\n\n        if (typeof v === 'boolean') {\n          return ofType.jsonType === 'boolean'\n        }\n\n        if (isRecord(v)) {\n          return ofType.name === v?._type\n        }\n\n        return false\n      })\n\n      if (!itemType) {\n        throw new Error(`Item type not found: [${segment}]`)\n      }\n\n      s = itemType\n\n      result.push(s)\n\n      continue\n    }\n\n    // array item key\n    if (isRecord(segment) && segment._key) {\n      if (!isArray(v)) {\n        throw new Error(\n          `Parent value is not an array, cannot get path segment: [_key == ${segment}]`,\n        )\n      }\n\n      if (s.jsonType !== 'array') {\n        throw new Error(\n          `Parent type is not an array schema type, cannot get path segment: .${segment}`,\n        )\n      }\n\n      const values = v ?? []\n\n      v = values.find((i) => isRecord(i) && i._key === segment._key)\n\n      if (!isRecord(v)) {\n        throw new Error(`Array item not found: [_key == ${segment._key}]`)\n      }\n\n      const ofType = s.of.find((i) => isRecord(v) && i.name === v?._type)\n\n      if (!ofType) {\n        throw new Error(`Array item type not found: .${v?._type}`)\n      }\n\n      s = ofType\n\n      result.push(s)\n\n      continue\n    }\n\n    throw new Error(`Invalid path segment: ${JSON.stringify(segment)}`)\n  }\n\n  return result\n}\n", "import {\n  ErrorOutlineIcon,\n  type IconComponent,\n  InfoOutlineIcon,\n  WarningOutlineIcon,\n} from '@sanity/icons'\nimport {\n  type ObjectSchemaType,\n  type Path,\n  type SanityDocument,\n  type SchemaType,\n  type ValidationMarker,\n} from '@sanity/types'\nimport {Box, Card, type CardTone, ErrorBoundary, Flex, Stack, Text} from '@sanity/ui'\nimport {createElement, type ErrorInfo, Fragment, useCallback, useMemo, useState} from 'react'\nimport {type DocumentInspectorProps, useTranslation} from 'sanity'\n\nimport {DocumentInspectorHeader} from '../../documentInspector'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {getPathTitles} from './getPathTitles'\n\nconst MARKER_ICON: Record<'error' | 'warning' | 'info', IconComponent> = {\n  error: ErrorOutlineIcon,\n  warning: WarningOutlineIcon,\n  info: InfoOutlineIcon,\n}\n\nconst MARKER_TONE: Record<'error' | 'warning' | 'info', CardTone> = {\n  error: 'critical',\n  warning: 'caution',\n  info: 'primary',\n}\n\nexport function ValidationInspector(props: DocumentInspectorProps) {\n  const {onClose} = props\n  const {onFocus, onPathOpen, schemaType, validation, value} = useDocumentPane()\n  const {t} = useTranslation('validation')\n\n  const handleOpen = useCallback(\n    (path: Path) => {\n      onPathOpen(path)\n      onFocus(path)\n    },\n    [onFocus, onPathOpen],\n  )\n\n  return (\n    <Flex direction=\"column\" height=\"fill\" overflow=\"hidden\">\n      <DocumentInspectorHeader\n        as=\"header\"\n        closeButtonLabel={t('panel.close-button-aria-label')}\n        flex=\"none\"\n        onClose={onClose}\n        title={t('panel.title')}\n      />\n\n      <Card flex={1} overflow=\"auto\" padding={3}>\n        {validation.length === 0 && (\n          <Box padding={2}>\n            <Text muted size={1}>\n              {t('panel.no-errors-message')}\n            </Text>\n          </Box>\n        )}\n\n        {validation.length > 0 && (\n          <Stack space={2}>\n            {validation.map((marker, i) => (\n              <ValidationCard\n                // eslint-disable-next-line react/no-array-index-key\n                key={i}\n                marker={marker}\n                onOpen={handleOpen}\n                schemaType={schemaType}\n                value={value}\n              />\n            ))}\n          </Stack>\n        )}\n      </Card>\n    </Flex>\n  )\n}\n\nfunction ValidationCard(props: {\n  marker: ValidationMarker\n  onOpen: (path: Path) => void\n  schemaType: ObjectSchemaType\n  value: Partial<SanityDocument> | null\n}) {\n  const {marker, onOpen, schemaType, value} = props\n  const handleOpen = useCallback(() => onOpen(marker.path), [marker, onOpen])\n  const [errorInfo, setErrorInfo] = useState<{error: Error; info: ErrorInfo} | null>(null)\n\n  return (\n    <ErrorBoundary onCatch={setErrorInfo}>\n      {errorInfo && (\n        <Card padding={3} radius={2} tone=\"critical\">\n          <Text size={1}>{errorInfo.error.message}</Text>\n        </Card>\n      )}\n\n      {!errorInfo && (\n        <Card\n          __unstable_focusRing\n          as=\"button\"\n          onClick={handleOpen}\n          padding={3}\n          radius={2}\n          tone={MARKER_TONE[marker.level]}\n        >\n          <Flex align=\"flex-start\" gap={3}>\n            <Box flex=\"none\">\n              <Text size={1}>{createElement(MARKER_ICON[marker.level])}</Text>\n            </Box>\n\n            <Stack flex={1} space={2}>\n              <DocumentNodePathBreadcrumbs\n                path={marker.path}\n                schemaType={schemaType}\n                value={value}\n              />\n\n              <Text muted size={1}>\n                {marker.message}\n              </Text>\n            </Stack>\n          </Flex>\n        </Card>\n      )}\n    </ErrorBoundary>\n  )\n}\n\nfunction DocumentNodePathBreadcrumbs(props: {\n  path: Path\n  schemaType: SchemaType\n  value: Partial<SanityDocument> | null\n}) {\n  const {path, schemaType, value} = props\n\n  const pathTitles = useMemo(() => {\n    try {\n      return getPathTitles({path, schemaType, value})\n    } catch (e) {\n      console.error(e)\n    }\n    return null\n  }, [path, schemaType, value])\n\n  if (!pathTitles?.length) return null\n\n  return (\n    <Text size={1}>\n      {pathTitles.map((t, i) => (\n        <Fragment key={i}>\n          {i > 0 && <span style={{color: 'var(--card-muted-fg-color)', opacity: 0.5}}> / </span>}\n          <span style={{fontWeight: 500}}>{t.title || t.name}</span>\n        </Fragment>\n      ))}\n    </Text>\n  )\n}\n", "import {CheckmarkCircleIcon, ErrorOutlineIcon, WarningOutlineIcon} from '@sanity/icons'\nimport {useMemo} from 'react'\nimport {\n  type DocumentInspector,\n  type DocumentInspectorMenuItem,\n  type DocumentInspectorUseMenuItemProps,\n  type FormNodeValidation,\n  isValidationError,\n  isValidationWarning,\n  useTranslation,\n  useValidationStatus,\n} from 'sanity'\n\nimport {VALIDATION_INSPECTOR_NAME} from '../../constants'\nimport {ValidationInspector} from './ValidationInspector'\n\nfunction useMenuItem(props: DocumentInspectorUseMenuItemProps): DocumentInspectorMenuItem {\n  const {documentId, documentType} = props\n  const {t} = useTranslation('validation')\n  const {validation: validationMarkers} = useValidationStatus(documentId, documentType)\n\n  const validation: FormNodeValidation[] = useMemo(\n    () =>\n      validationMarkers.map((item) => ({\n        level: item.level,\n        message: item.message,\n        path: item.path,\n      })),\n    [validationMarkers],\n  )\n\n  const hasErrors = validation.some(isValidationError)\n  const hasWarnings = validation.some(isValidationWarning)\n\n  const icon = useMemo(() => {\n    if (hasErrors) return ErrorOutlineIcon\n    if (hasWarnings) return WarningOutlineIcon\n    return CheckmarkCircleIcon\n  }, [hasErrors, hasWarnings])\n\n  const tone = useMemo(() => {\n    if (hasErrors) return 'critical'\n    if (hasWarnings) return 'caution'\n    return 'positive'\n  }, [hasErrors, hasWarnings])\n\n  return {\n    hidden: validation.length === 0,\n    icon,\n    title: t('panel.title'),\n    tone,\n    showAsAction: true,\n  }\n}\n\nexport const validationInspector: DocumentInspector = {\n  name: VALIDATION_INSPECTOR_NAME,\n  component: ValidationInspector,\n  useMenuItem,\n}\n", "import {omit} from 'lodash'\nimport {decodeJsonParams, encodeJsonParams, route} from 'sanity/router'\n\nimport {type RouterPaneGroup, type RouterPanes, type RouterPaneSibling} from './types'\n\nconst EMPTY_PARAMS = {}\n\n/**\n * @internal\n */\nexport function legacyEditParamsToState(params: string): Record<string, unknown> {\n  try {\n    return JSON.parse(decodeURIComponent(params))\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.warn('Failed to parse JSON parameters')\n    return {}\n  }\n}\n\nexport function encodePanesSegment(panes: RouterPanes): string {\n  return (panes || [])\n    .map((group) => group.map(encodeChunks).join('|'))\n    .map(encodeURIComponent)\n    .join(';')\n}\n\n/**\n * @internal\n */\nexport function legacyEditParamsToPath(params: Record<string, unknown>): string {\n  return JSON.stringify(params)\n}\n\n// http://localhost:3333/intent/create/template=book-by-author;type=book/eyJhdXRob3JJZCI6Imdycm0ifQ==\n\n/**\n * @internal\n */\nexport function toState(pathSegment: string): RouterPaneGroup[] {\n  return parsePanesSegment(decodeURIComponent(pathSegment))\n}\n\n/**\n * @internal\n */\nexport function toPath(panes: RouterPaneGroup[]): string {\n  return encodePanesSegment(panes)\n}\n\nexport const router = route.create('/', [\n  // \"Asynchronous intent resolving\" route\n  route.intents('/intent'),\n\n  // Legacy fallback route, will be redirected to new format\n  route.create('/edit/:type/:editDocumentId', [\n    route.create({\n      path: '/:params',\n      transform: {params: {toState: legacyEditParamsToState, toPath: legacyEditParamsToPath}},\n    }),\n  ]),\n\n  // The regular path - when the intent can be resolved to a specific pane\n  route.create({\n    path: '/:panes',\n    // Legacy URLs, used to handle redirects\n    children: [route.create('/:action', route.create('/:legacyEditDocumentId'))],\n    transform: {\n      panes: {toState, toPath},\n    },\n  }),\n])\n\n// old: authors;knut,{\"template\":\"diaryEntry\"}\n// new: authors;knut,view=diff,eyJyZXYxIjoiYWJjMTIzIiwicmV2MiI6ImRlZjQ1NiJ9|latest-posts\n\nconst panePattern = /^([.a-z0-9_-]+),?({.*?})?(?:(;|$))/i\nconst isParam = (str: string) => /^[a-z0-9]+=[^=]+/i.test(str)\nconst isPayloadLike = (str: string) => /^[A-Za-z0-9\\-_]+(?:={0,2})$/.test(str)\nconst exclusiveParams = ['view', 'since', 'rev', 'inspect', 'comment']\n\ntype Truthy<T> = T extends false\n  ? never\n  : T extends ''\n    ? never\n    : T extends 0\n      ? never\n      : T extends 0n\n        ? never\n        : T extends null | undefined\n          ? NonNullable<T>\n          : T\nconst isTruthy = Boolean as (t: unknown) => boolean as <T>(t: T) => t is Truthy<T>\n\nfunction parseChunks(chunks: string[], initial: RouterPaneSibling): RouterPaneSibling {\n  const sibling: RouterPaneSibling = {...initial, params: EMPTY_PARAMS, payload: undefined}\n  return chunks.reduce((pane, chunk) => {\n    if (isParam(chunk)) {\n      const key = chunk.slice(0, chunk.indexOf('='))\n      const value = chunk.slice(key.length + 1)\n      pane.params = {...pane.params, [decodeURIComponent(key)]: decodeURIComponent(value)}\n    } else if (isPayloadLike(chunk)) {\n      pane.payload = tryParseBase64Payload(chunk)\n    } else {\n      // eslint-disable-next-line no-console\n      console.warn('Unknown pane segment: %s - skipping', chunk)\n    }\n\n    return pane\n  }, sibling)\n}\n\nfunction encodeChunks(pane: RouterPaneSibling, index: number, group: RouterPaneGroup): string {\n  const {payload, params = {}, id} = pane\n  const [firstSibling] = group\n  const paneIsFirstSibling = pane === firstSibling\n  const sameAsFirst = index !== 0 && id === firstSibling.id\n  const encodedPayload =\n    typeof payload === 'undefined' ? undefined : encodeJsonParams(payload as any)\n\n  const encodedParams = Object.entries(params)\n    .filter((entry): entry is [string, string] => {\n      const [key, value] = entry\n      if (!value) return false\n      if (paneIsFirstSibling) return true\n\n      // omit the value if it's the same as the value from the first sibling\n      const valueFromFirstSibling = firstSibling.params?.[key]\n      if (value === valueFromFirstSibling && !exclusiveParams.includes(key)) return false\n      return true\n    })\n    .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`)\n\n  return (\n    [sameAsFirst ? '' : id]\n      .concat([encodedParams.length > 0 && encodedParams, encodedPayload].filter(isTruthy).flat())\n      .join(',') || ','\n  )\n}\n\nexport function parsePanesSegment(str: string): RouterPanes {\n  if (str.indexOf(',{') !== -1) {\n    return parseOldPanesSegment(str)\n  }\n\n  return str\n    .split(';')\n    .map((group) => {\n      const [firstSibling, ...restOfSiblings] = group.split('|').map((segment) => {\n        const [id, ...chunks] = segment.split(',')\n        return parseChunks(chunks, {id})\n      })\n\n      return [\n        firstSibling,\n        ...restOfSiblings.map((sibling) => ({\n          ...firstSibling,\n          ...sibling,\n          id: sibling.id || firstSibling.id,\n          params: {...omit(firstSibling.params, exclusiveParams), ...sibling.params},\n          payload: sibling.payload || firstSibling.payload,\n        })),\n      ]\n    })\n    .filter((group) => group.length > 0)\n}\n\nfunction parseOldPanesSegment(str: string): RouterPanes {\n  const chunks: RouterPaneGroup = []\n\n  let buffer = str\n  while (buffer.length) {\n    const [match, id, payloadChunk] = buffer.match(panePattern) || []\n    if (!match) {\n      buffer = buffer.slice(1)\n      continue\n    }\n\n    const payload = payloadChunk && tryParsePayload(payloadChunk)\n    chunks.push({id, payload})\n\n    buffer = buffer.slice(match.length)\n  }\n\n  return [chunks]\n}\n\nfunction tryParsePayload(json: string) {\n  try {\n    return JSON.parse(json)\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.warn(`Failed to parse parameters: ${err.message}`)\n    return undefined\n  }\n}\n\nfunction tryParseBase64Payload(data: string): unknown {\n  try {\n    return data ? decodeJsonParams(data) : undefined\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.warn(`Failed to parse parameters: ${err.message}`)\n    return undefined\n  }\n}\n", "import {MasterDetailIcon} from '@sanity/icons'\nimport {lazy} from 'react'\nimport {definePlugin} from 'sanity'\n\nimport {\n  DeleteAction,\n  DiscardChangesAction,\n  DuplicateAction,\n  HistoryRestoreAction,\n  PublishAction,\n  UnpublishAction,\n} from './documentActions'\nimport {LiveEditBadge} from './documentBadges'\nimport {getIntentState} from './getIntentState'\nimport {structureUsEnglishLocaleBundle} from './i18n'\nimport {changesInspector} from './panes/document/inspectors/changes'\nimport {validationInspector} from './panes/document/inspectors/validation'\nimport {router} from './router'\nimport {type StructureToolOptions} from './types'\n\nconst documentActions = [\n  PublishAction,\n  UnpublishAction,\n  DiscardChangesAction,\n  DuplicateAction,\n  DeleteAction,\n  HistoryRestoreAction,\n]\n\nconst documentBadges = [LiveEditBadge]\n\nconst inspectors = [validationInspector, changesInspector]\n\n/**\n * The structureTool is a studio plugin which adds the “structure tool” – a tool within\n * Sanity Studio in which content editors can drill down to specific documents to edit them.\n * You can configure your Studio's structure tool(s).\n *\n * @public\n * @param options - Options for the structure tool. See {@link StructureToolOptions}\n * @example Minimal example\n * ```ts\n * // sanity.config.ts\n * import { defineConfig } from 'sanity'\n * import { structureTool } from 'sanity/structure'\n *\n * export default defineConfig((\n *  // ...\n *  plugins: [\n *    structureTool() // use defaults\n *  ]\n * })\n * ```\n *\n * @example To customise your structure tool\n * ```ts\n * // sanity.config.ts\n * import { defineConfig } from 'sanity'\n * import { structureTool } from 'sanity/structure'\n * import { FaCar } from 'react-icons'\n\n * export default defineConfig((\n *\t // ...\n *   plugins: [\n *    structureTool({\n *      name: 'cars',\n *      title: 'Cars',\n *      icon: FaCar,\n *      structure: (S) => S.documentTypeList('car'),\n *      defaultDocumentNode: (S) =>\n *        S.document().views([\n *          S.view.form(),\n *          S.view.component(Preview).title('Preview')\n *        ])\n *    })\n *  ]\n * })\n * ```\n * */\nexport const structureTool = definePlugin<StructureToolOptions | void>((options) => {\n  const icon = options?.icon || MasterDetailIcon\n\n  return {\n    name: 'sanity/structure',\n    document: {\n      actions: (prevActions) => {\n        // NOTE: since it's possible to have several structure tools in one Studio,\n        // we need to check whether the document actions already exist in the Studio config\n        return Array.from(new Set([...prevActions, ...documentActions]))\n      },\n      badges: (prevBadges) => {\n        // NOTE: since it's possible to have several structure tools in one Studio,\n        // we need to check whether the document badges already exist in the Studio config\n        return Array.from(new Set([...prevBadges, ...documentBadges]))\n      },\n      inspectors: (prevInspectors) => {\n        // NOTE: since it's possible to have several structure tools in one Studio,\n        // we need to check whether the inspectors already exist in the Studio config\n        return Array.from(new Set([...prevInspectors, ...inspectors]))\n      },\n    },\n\n    tools: [\n      {\n        name: options?.name || 'structure',\n        title: options?.title || 'Structure',\n        icon,\n        component: lazy(() => import('./components/structureTool')),\n        canHandleIntent: (intent, params) => {\n          if (intent === 'create') return canHandleCreateIntent(params)\n          if (intent === 'edit') return canHandleEditIntent(params)\n          return false\n        },\n        getIntentState,\n        // Controlled by sanity/src/structure/components/structureTool/StructureTitle.tsx\n        controlsDocumentTitle: true,\n        options,\n        router,\n      },\n    ],\n\n    i18n: {\n      bundles: [structureUsEnglishLocaleBundle],\n    },\n  }\n})\n\nfunction canHandleCreateIntent(params: Record<string, unknown>) {\n  // We can't handle create intents without a `type` parameter\n  if (!('type' in params)) {\n    return false\n  }\n\n  // We can handle any create intent as long as it has a `type` parameter,\n  // but we also know how to deal with templates, where other tools might not\n  return 'template' in params ? {template: true} : true\n}\n\nfunction canHandleEditIntent(params: Record<string, unknown>) {\n  // We can't handle edit intents without an `id` parameter\n  if (!('id' in params)) {\n    return false\n  }\n\n  // We can handle any edit intent with a document ID, but we're best at `structure` mode\n  // This ensures that other tools that can handle modes such as `presentation` or `batch`\n  // can take precedence over the structure tool\n  return 'mode' in params ? {mode: params.mode === 'structure'} : true\n}\n", "import {type ReactElement, type ReactNode, useMemo, useState} from 'react'\nimport {useConfigContextFromSource, useDocumentStore, useSource} from 'sanity'\nimport {StructureToolContext} from 'sanity/_singletons'\n\nimport {createStructureBuilder, type DefaultDocumentNodeResolver} from './structureBuilder'\nimport {\n  type StructureResolver,\n  type StructureToolContextValue,\n  type UnresolvedPaneNode,\n} from './types'\n\n/** @internal */\nexport interface StructureToolProviderProps {\n  structure?: StructureResolver\n  defaultDocumentNode?: DefaultDocumentNodeResolver\n  children: ReactNode\n}\n\n/** @internal */\nexport function StructureToolProvider({\n  defaultDocumentNode,\n  structure: resolveStructure,\n  children,\n}: StructureToolProviderProps): ReactElement {\n  const [layoutCollapsed, setLayoutCollapsed] = useState(false)\n  const source = useSource()\n  const configContext = useConfigContextFromSource(source)\n  const documentStore = useDocumentStore()\n\n  const S = useMemo(() => {\n    return createStructureBuilder({\n      defaultDocumentNode,\n      source,\n    })\n  }, [defaultDocumentNode, source])\n\n  const rootPaneNode = useMemo(() => {\n    // TODO: unify types and remove cast\n    if (resolveStructure)\n      return resolveStructure(S, {\n        ...configContext,\n        documentStore,\n      }) as UnresolvedPaneNode\n    return S.defaults() as UnresolvedPaneNode\n  }, [S, resolveStructure, configContext, documentStore])\n\n  const features: StructureToolContextValue['features'] = useMemo(\n    () => ({\n      backButton: layoutCollapsed,\n      resizablePanes: !layoutCollapsed,\n      reviewChanges: !layoutCollapsed,\n      splitPanes: !layoutCollapsed,\n      splitViews: !layoutCollapsed,\n    }),\n    [layoutCollapsed],\n  )\n\n  const structureTool: StructureToolContextValue = useMemo(() => {\n    return {\n      features,\n      layoutCollapsed,\n      setLayoutCollapsed,\n      rootPaneNode,\n      structureContext: S.context,\n    }\n  }, [features, layoutCollapsed, rootPaneNode, S.context])\n\n  return (\n    <StructureToolContext.Provider value={structureTool}>{children}</StructureToolContext.Provider>\n  )\n}\n", "/**\n * These are provided from `sanity/structure` for backwards compatibility;\n * `@sanity/presentation` depends/depended on them from `sanity/structure` originially.\n *\n * Do not remove until next major version at the earliest (eg v4)\n */\nimport {\n  type CommentIntentGetter as _CommentIntentGetter,\n  CommentsIntentProvider as _CommentsIntentProvider,\n} from 'sanity'\n\n/**\n * @deprecated Import from `sanity` instead of `sanity/structure`\n * @internal\n */\nexport type CommentIntentGetter = _CommentIntentGetter\n\n/**\n * @deprecated Import from `sanity` instead of `sanity/structure`\n * @internal\n */\nexport const CommentsIntentProvider = _CommentsIntentProvider\n\nexport type {\n  BackLinkProps,\n  ChildLinkProps,\n  ConfirmDeleteDialogProps,\n  EditReferenceOptions,\n  PaneRouterContextValue,\n  ParameterizedLinkProps,\n  ReferenceChildLinkProps,\n} from './components'\nexport {ConfirmDeleteDialog, Pane, PaneContent, PaneLayout, usePaneRouter} from './components'\nexport {structureLocaleNamespace, type StructureLocaleResourceKeys} from './i18n'\nexport * from './panes/document'\nexport {DocumentInspectorHeader} from './panes/document/documentInspector'\nexport {type DocumentPaneProviderProps} from './panes/document/types'\nexport * from './panes/document/useDocumentPane'\nexport * from './panes/documentList'\nexport * from './structureBuilder'\nexport * from './structureTool'\nexport * from './StructureToolProvider'\nexport * from './types'\nexport * from './useStructureTool'\nexport {PaneRouterContext} from 'sanity/_singletons'\n"],
  "mappings": "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GAG9C,mBAAyC;IAC7C,OAAO;MACL;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,WAAW,oBAAoB;MAC/B,YAAAlB;MACA;MACA,QAAQ;MACR,UAAU;MACV,SAAS;MACT,YAAY;MACZ,gBAAgB;MAChB,eAAe;MACf,gBAAgB;MAChB,cAAc;MACd,aAAa;MACb,aAAa;MACb,uBAAuB;MACvB,oBAAoB;MACpB,wBAAwB;MACxB;MACA;MACA;MACA;MACA,gBAAgB,kBAAkB,CAAC;MACnC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,OAAAO;MACA;MACA,yBAAyB;IAAA;IAE3B;MACE;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAP;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAO;IACF;EAAA;AAGF,8BAAU,MAAM;AACV,wBAAoB,kBACtB,UAAU;MACR,IAAI;MACJ,QAAQ;MACR,OAAO,EAAE,iDAAiD;IAAA,CAC3D;EAEF,GAAA,CAAC,iBAAiB,WAAW,CAAC,CAAC;AAE5B,QAAA,qBAAiB,qBAAO,KAAK;AAGnC,aAAA,wBAAU,MAAM;AA1tBlB,QAAA;AA2tBQ,QAAA,SAAS,OAAO,MAAM;AACxB,YAAM,EAAC,MAAM,GAAG,WAAA,IAAc,QACxB,cAAc,kBAAiB,KAAA,aAAa,YAAb,OAAA,SAAA,GAAsB,OAAOH,WAAe,IAAI,CAAC;AAEtF,qBAAe,UAAU,UAGpB,0BAAAc,SAAW,aAAa,SAAS,WAAW,MAC/C,aAAa,WAAW,GACxB,YAAY,WAAW,GACvB,aAAa,UAAU,aACvB,eAAc,QAAA,YAAA,WAAA;AAGV,YAAA,UAAU,WAAW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",
  "names": ["format", "err", "obj", "_setPrototypeOf", "o", "p", "_getPrototypeOf", "CopyToClipboard", "CopyToClipboard", "isNumber", "camelCase", "kebabCase", "useTranslation", "useValuePreview", "isString", "isNumber", "state", "pathToString", "EMPTY_ARRAY", "ReferenceChildLink", "CopyToClipboard", "Button", "Dialog", "Root", "PaneHeader", "getDisabledReason", "_a", "map", "negate", "uniqBy", "ChildLink", "isSanityDocument", "Content", "delay", "usePaneRouter", "EMPTY_PARAMS", "structureTool", "useMenuItem", "inspectors", "LRU", "JSONInspector", "BackLink", "pathFromString", "pathGet", "Scroller", "views", "Popover", "DISABLED_REASON_TITLE_KEY", "ConfirmDeleteDialog", "DISABLED_REASON_KEY", "timer", "document", "documentActions", "documentBadges", "omit", "throttle", "deepEquals", "DocumentLayout", "filter", "take", "mergeMap", "tap", "StructurePaneHeader", "isEqual", "shallowEquals", "__publicField", "HELP_URL", "camelCase", "getSlug", "component", "kebabCase", "uniq", "find", "startCase", "uniqueId", "Fragment", "CommentsIntentProvider", "_CommentsIntentProvider"]
}
